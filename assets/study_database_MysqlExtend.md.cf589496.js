import{_ as s,c as a,o as n,a as l}from"./app.89083758.js";const F=JSON.parse('{"title":"MySQL扩展","description":"","frontmatter":{},"headers":[{"level":2,"title":"Mysql练习题","slug":"mysql练习题","link":"#mysql练习题","children":[]},{"level":2,"title":"Mysql调优","slug":"mysql调优","link":"#mysql调优","children":[]}],"relativePath":"study/database/MysqlExtend.md"}'),p={name:"study/database/MysqlExtend.md"},o=l(`<h1 id="mysql扩展" tabindex="-1">MySQL扩展 <a class="header-anchor" href="#mysql扩展" aria-hidden="true">#</a></h1><h2 id="mysql练习题" tabindex="-1">Mysql练习题 <a class="header-anchor" href="#mysql练习题" aria-hidden="true">#</a></h2><h4 id="_1-查找第n高的数据" tabindex="-1">1.查找第N高的数据 <a class="header-anchor" href="#_1-查找第n高的数据" aria-hidden="true">#</a></h4><h5 id="思路1" tabindex="-1">思路1 <a class="header-anchor" href="#思路1" aria-hidden="true">#</a></h5><p>第二高 通过max函数</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">max</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">distinct</span><span style="color:#A6ACCD;"> 成绩) </span></span>
<span class="line"><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> 成绩表</span></span>
<span class="line"><span style="color:#F78C6C;">where</span><span style="color:#A6ACCD;"> 课程</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">语文</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">and</span></span>
<span class="line"><span style="color:#A6ACCD;">      成绩 </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> (</span><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">max</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">distinct</span><span style="color:#A6ACCD;"> 成绩) </span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> 成绩表 </span></span>
<span class="line"><span style="color:#A6ACCD;">              </span><span style="color:#F78C6C;">where</span><span style="color:#A6ACCD;"> 课程</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">语文</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">              </span></span>
<span class="line"><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">ifnull</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">max</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">distinct</span><span style="color:#A6ACCD;"> 成绩) </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> 成绩表</span></span>
<span class="line"><span style="color:#F78C6C;">where</span><span style="color:#A6ACCD;"> 成绩</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">max</span><span style="color:#A6ACCD;">(成绩) </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> 成绩表 </span><span style="color:#F78C6C;">where</span><span style="color:#A6ACCD;"> 课程</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">语文</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#F78C6C;">and</span><span style="color:#A6ACCD;"> 课程</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">语文</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">,</span><span style="color:#F78C6C;">null</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">语文课第二名成绩</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span></code></pre></div><h5 id="思路2" tabindex="-1">思路2 <a class="header-anchor" href="#思路2" aria-hidden="true">#</a></h5><blockquote><p>limit n子句表示查询结果返回前n条数据</p><p>offset n表示跳过x条语句</p><p>limit y offset x 分句表示查询结果跳过 x 条数据，读取前 y 条数据</p><p>使用limit和offset，降序排列再返回第二条记录可以得到第二大的值</p><p>考虑特殊情况:</p><p>如果没有第二高的成绩，返回空值，所以这里用判断空值的函数（ifnull）函数来处理特殊情况。</p><p>ifnull(a,b)函数解释：</p><p>如果value1不是空，结果返回a</p><p>如果value1是空，结果返回b</p></blockquote><p>第二高 通过 LIMIT OFFSET 函数</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">IFNULL</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">      (</span><span style="color:#F78C6C;">SELECT DISTINCT</span><span style="color:#A6ACCD;"> Salary</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> Employee</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#F78C6C;">ORDER BY</span><span style="color:#A6ACCD;"> Salary </span><span style="color:#F78C6C;">DESC</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">LIMIT</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> OFFSET </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">NULL</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> SecondHighestSalary</span></span>
<span class="line"></span></code></pre></div><p>第N高</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FUNCTION</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getNthHighestSalary</span><span style="color:#A6ACCD;">(N </span><span style="color:#C792EA;">INT</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">RETURNS</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">INT</span></span>
<span class="line"><span style="color:#F78C6C;">BEGIN</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">declare</span><span style="color:#A6ACCD;"> m </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#F78C6C;">set</span><span style="color:#A6ACCD;"> m </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> N </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">RETURN</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#A6ACCD;"># Write your MySQL query </span><span style="color:#F78C6C;">statement</span><span style="color:#A6ACCD;"> below.</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">ifnull</span><span style="color:#A6ACCD;">((</span><span style="color:#F78C6C;">select DISTINCT</span><span style="color:#A6ACCD;"> salary </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> Employee </span><span style="color:#F78C6C;">order by</span><span style="color:#A6ACCD;"> salary </span><span style="color:#F78C6C;">DESC</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">limit</span><span style="color:#A6ACCD;"> m,</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">),</span><span style="color:#F78C6C;">null</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  );</span></span>
<span class="line"><span style="color:#F78C6C;">END</span></span>
<span class="line"></span></code></pre></div><h4 id="_2-分数排名" tabindex="-1">2.<a href="https://leetcode-cn.com/problems/rank-scores/" target="_blank" rel="noreferrer">分数排名</a> <a class="header-anchor" href="#_2-分数排名" aria-hidden="true">#</a></h4><blockquote><p>编写 SQL 查询对分数进行排序。排名按以下规则计算:</p><p>分数应按从高到低排列。 如果两个分数相等，那么两个分数的排名应该相同。 在排名相同的分数后，排名数应该是下一个连续的整数。换句话说，排名之间不应该有空缺的数字。</p></blockquote><p>解法1</p><blockquote><p>最后的结果包含两个部分，第一部分是降序排列的分数，第二部分是每个分数对应的排名</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> a.Score </span><span style="color:#F78C6C;">as</span><span style="color:#A6ACCD;"> Score</span></span>
<span class="line"><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> Scores a</span></span>
<span class="line"><span style="color:#F78C6C;">order by</span><span style="color:#A6ACCD;"> a.Score </span><span style="color:#F78C6C;">DESC</span></span>
<span class="line"></span></code></pre></div><p>比较难的是第二部分。假设现在给你一个分数X，如何算出它的排名Rank呢？ 我们可以先提取出大于等于X的所有分数集合H，将H去重后的元素个数就是X的排名。比如你考了99分，但最高的就只有99分，那么去重之后集合H里就只有99一个元素，个数为1，因此你的Rank为1。 先提取集合H：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> b.Score </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> Scores b </span><span style="color:#F78C6C;">where</span><span style="color:#A6ACCD;"> b.Score </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> X;</span></span>
<span class="line"></span></code></pre></div><p>集合H去重之后的元素个数:</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">count</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">distinct</span><span style="color:#A6ACCD;"> b.Score) </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> Scores b </span><span style="color:#F78C6C;">where</span><span style="color:#A6ACCD;"> b.Score </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> X </span><span style="color:#F78C6C;">as</span><span style="color:#A6ACCD;"> Rank;</span></span>
<span class="line"></span></code></pre></div><p>从结果的角度来看，第二部分的Rank是对应第一部分的分数来的，所以这里的X就是上面的a.Score，把两部分结合在一起为：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> a.Score </span><span style="color:#F78C6C;">as</span><span style="color:#A6ACCD;"> Score,</span></span>
<span class="line"><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">count</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">distinct</span><span style="color:#A6ACCD;"> b.Score) </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> Scores b </span><span style="color:#F78C6C;">where</span><span style="color:#A6ACCD;"> b.Score </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> a.Score) </span><span style="color:#F78C6C;">as</span><span style="color:#A6ACCD;"> Rank</span></span>
<span class="line"><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> Scores a</span></span>
<span class="line"><span style="color:#F78C6C;">order by</span><span style="color:#A6ACCD;"> a.Score </span><span style="color:#F78C6C;">DESC</span></span>
<span class="line"></span></code></pre></div></blockquote><p>解法2（mysql8.0 窗口函数）</p><blockquote><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> Score,</span></span>
<span class="line"><span style="color:#82AAFF;">dense_rank</span><span style="color:#A6ACCD;">() </span><span style="color:#F78C6C;">over</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">Order By</span><span style="color:#A6ACCD;"> Score </span><span style="color:#F78C6C;">desc</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Rank</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> Scores;</span></span>
<span class="line"></span></code></pre></div></blockquote><h2 id="mysql调优" tabindex="-1">Mysql调优 <a class="header-anchor" href="#mysql调优" aria-hidden="true">#</a></h2>`,19),e=[o];function c(C,t,r,y,A,i){return n(),a("div",null,e)}const d=s(p,[["render",c]]);export{F as __pageData,d as default};
