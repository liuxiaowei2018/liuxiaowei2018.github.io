import{_ as s,c as n,o as a,N as l}from"./chunks/framework.0799945b.js";const e="/assets/image-20220420132922691.2cb8b2c7.png",o="/assets/image-20220114114153161.636ff3f3.png",p="/assets/image-20220114115106129.32cc717e.png",t="/assets/image-20220114115143806.82d14063.png",c="/assets/640.88fdf9b2.webp",r="/assets/640-16421330129531.14d943f7.webp",f=JSON.parse('{"title":"OpenFeign","description":"","frontmatter":{},"headers":[],"relativePath":"second/cloud/spring/OpenFeign.md"}'),i={name:"second/cloud/spring/OpenFeign.md"},y=l('<h1 id="openfeign" tabindex="-1">OpenFeign <a class="header-anchor" href="#openfeign" aria-label="Permalink to &quot;OpenFeign&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#如何使用">如何使用</a></li><li><a href="#扩展功能">扩展功能</a></li></ul></nav><blockquote><p>官网地址：<a href="https://docs.spring.io/spring-cloud-openfeign/docs/2.2.10.BUILD-SNAPSHOT/reference/html" target="_blank" rel="noreferrer">https://docs.spring.io/spring-cloud-openfeign/docs/2.2.10.BUILD-SNAPSHOT/reference/html</a></p></blockquote><p><strong>原理图</strong></p><p><img src="'+e+'" alt="image-20220420132922691"></p><blockquote><p>Feign集成了Ribbon、RestTemplate实现了负载均衡的执行Http调用，对原有的方式（Ribbon+RestTemplate）进行了封装</p><p><img src="'+o+`" alt="image-20220114114153161"></p><p>OpenFeign是springcloud在Feign的基础上支持了SpringMVC的注解，如<code>@RequestMapping</code>等等。OpenFeign的<code>@FeignClient</code>可以解析SpringMVC的<code>@RequestMapping</code>注解下的接口，并通过动态代理的方式产生实现类，实现类中做负载均衡并调用其他服务。</p></blockquote><h2 id="如何使用" tabindex="-1">如何使用 <a class="header-anchor" href="#如何使用" aria-label="Permalink to &quot;如何使用&quot;">​</a></h2><blockquote><h6 id="_1-添加依赖" tabindex="-1">1.添加依赖 <a class="header-anchor" href="#_1-添加依赖" aria-label="Permalink to &quot;1.添加依赖&quot;">​</a></h6><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">org.springframework.cloud</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">spring-cloud-starter-openfeign</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h6 id="_2-添加注解-enablefeignclients" tabindex="-1">2.添加注解@EnableFeignClients <a class="header-anchor" href="#_2-添加注解-enablefeignclients" aria-label="Permalink to &quot;2.添加注解@EnableFeignClients&quot;">​</a></h6><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SpringBootApplication</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">EnableDiscoveryClient</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">EnableFeignClients</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">OpenFeignApplication</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  SpringApplication</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">OpenFeignApplication</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> args</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h6 id="_3-controller接口" tabindex="-1">3.controller接口 <a class="header-anchor" href="#_3-controller接口" aria-label="Permalink to &quot;3.controller接口&quot;">​</a></h6><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RestController</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/openfeign/provider</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">OpenFeignProviderController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">PostMapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/order</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Order</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createOrder</span><span style="color:#89DDFF;">(@</span><span style="color:#C792EA;">RequestBody</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Order</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">order</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> order</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h6 id="_4-openfeign接口" tabindex="-1">4.openFeign接口 <a class="header-anchor" href="#_4-openfeign接口" aria-label="Permalink to &quot;4.openFeign接口&quot;">​</a></h6><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">FeignClient</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">value</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">openFeign-provider</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">OpenFeignService</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 参数默认是@RequestBody标注的，这里的@RequestBody可以不填</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   * 方法名称任意</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">PostMapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/openfeign/provider/order</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">Order</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createOrder</span><span style="color:#89DDFF;">(@</span><span style="color:#C792EA;">RequestBody</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Order</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">order</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></blockquote><h2 id="扩展功能" tabindex="-1">扩展功能 <a class="header-anchor" href="#扩展功能" aria-label="Permalink to &quot;扩展功能&quot;">​</a></h2><h4 id="openfeign传参问题" tabindex="-1">openFeign传参问题 <a class="header-anchor" href="#openfeign传参问题" aria-label="Permalink to &quot;openFeign传参问题&quot;">​</a></h4><h5 id="_1-传递json数据" tabindex="-1">1.传递JSON数据 <a class="header-anchor" href="#_1-传递json数据" aria-label="Permalink to &quot;1.传递JSON数据&quot;">​</a></h5><p>在Spring Boot 中通过<code>@RequestBody</code>标识入参。</p><p>注意：<code>openFeign</code>默认的传参方式就是JSON传参（<code>@RequestBody</code>），因此定义接口的时候可以不用<code>@RequestBody</code>注解标注，不过为了规范，一般都填上。</p><h5 id="_2-pojo表单传参" tabindex="-1">2.POJO表单传参 <a class="header-anchor" href="#_2-pojo表单传参" aria-label="Permalink to &quot;2.POJO表单传参&quot;">​</a></h5><p>openFeign提供了一个注解<code>@SpringQueryMap</code>解决POJO表单传参。</p><h5 id="_3-url中携带参数" tabindex="-1">3.URL中携带参数 <a class="header-anchor" href="#_3-url中携带参数" aria-label="Permalink to &quot;3.URL中携带参数&quot;">​</a></h5><p>针对restful方式中的GET请求,使用注解<code>@PathVariable</code>接收url中的占位符</p><h5 id="_4-普通表单参数" tabindex="-1">4.普通表单参数 <a class="header-anchor" href="#_4-普通表单参数" aria-label="Permalink to &quot;4.普通表单参数&quot;">​</a></h5><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">FeignClient</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">value</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">openFeign-provider</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">OpenFeignService</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     * 必须要@RequestParam注解标注，且value属性必须填上参数名</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     * 方法参数名可以任意，但是@RequestParam注解中的value属性必须和provider中的参数名相同</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">PostMapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/openfeign/provider/test2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test</span><span style="color:#89DDFF;">(@</span><span style="color:#C792EA;">RequestParam</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">arg1</span><span style="color:#89DDFF;">,@</span><span style="color:#C792EA;">RequestParam</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">arg2</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="openfeign超时机制" tabindex="-1">openFeign超时机制 <a class="header-anchor" href="#openfeign超时机制" aria-label="Permalink to &quot;openFeign超时机制&quot;">​</a></h4><blockquote><p>openFeign其实是有默认的超时时间的，默认分别是连接超时时间<code>10秒</code>、读超时时间<code>60秒</code></p><p>\`\`feign.Request.Options#Options()\`</p><p><img src="`+p+'" alt="image-20220114115106129"></p><p>openFeign集成了Ribbon，Ribbon的默认超时连接时间、读超时时间都是是1秒<code>org.springframework.cloud.openfeign.ribbon.FeignLoadBalancer#execute</code></p><p><img src="'+t+`" alt="image-20220114115143806"></p><p><code>如果openFeign没有设置对应得超时时间，那么将会采用Ribbon的默认超时时间。</code></p></blockquote><h5 id="超时解决方案" tabindex="-1">超时解决方案 <a class="header-anchor" href="#超时解决方案" aria-label="Permalink to &quot;超时解决方案&quot;">​</a></h5><blockquote><ul><li>设置openFeign的超时时间</li><li>设置Ribbon的超时时间</li></ul><h6 id="_1-设置ribbon的超时时间-不推荐" tabindex="-1">1.设置Ribbon的超时时间（不推荐） <a class="header-anchor" href="#_1-设置ribbon的超时时间-不推荐" aria-label="Permalink to &quot;1.设置Ribbon的超时时间（不推荐）&quot;">​</a></h6><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">ribbon:</span></span>
<span class="line"><span style="color:#A6ACCD;"># 值的是建立链接所用的时间，适用于网络状况正常的情况下， 两端链接所用的时间</span></span>
<span class="line"><span style="color:#A6ACCD;">ReadTimeout: 5000</span></span>
<span class="line"><span style="color:#A6ACCD;"># 指的是建立链接后从服务器读取可用资源所用的时间</span></span>
<span class="line"><span style="color:#A6ACCD;">ConectTimeout: 5000</span></span></code></pre></div><h6 id="_2-设置openfeign的超时时间-推荐" tabindex="-1">2.设置openFeign的超时时间（推荐） <a class="header-anchor" href="#_2-设置openfeign的超时时间-推荐" aria-label="Permalink to &quot;2.设置openFeign的超时时间（推荐）&quot;">​</a></h6><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">feign:</span></span>
<span class="line"><span style="color:#A6ACCD;">client:</span></span>
<span class="line"><span style="color:#A6ACCD;">  config:</span></span>
<span class="line"><span style="color:#A6ACCD;">    # default设置全局超时时间，指定服务名称可以设置单个服务的超时时间</span></span>
<span class="line"><span style="color:#A6ACCD;">    default:</span></span>
<span class="line"><span style="color:#A6ACCD;">      connectTimeout: 5000</span></span>
<span class="line"><span style="color:#A6ACCD;">      readTimeout: 5000</span></span>
<span class="line"><span style="color:#A6ACCD;">    # 为serviceXXX这个服务单独配置超时时间(单个配置的超时时间将会覆盖全局配置)</span></span>
<span class="line"><span style="color:#A6ACCD;">    serviceXXX:</span></span>
<span class="line"><span style="color:#A6ACCD;">      connectTimeout: 30000</span></span>
<span class="line"><span style="color:#A6ACCD;">      readTimeout: 30000</span></span></code></pre></div></blockquote><h4 id="openfeign日志增强" tabindex="-1">openFeign日志增强 <a class="header-anchor" href="#openfeign日志增强" aria-label="Permalink to &quot;openFeign日志增强&quot;">​</a></h4><blockquote><p>openFeign的日志级别如下：</p><ul><li><strong>NONE</strong>：默认的，不显示任何日志;</li><li><strong>BASIC</strong>：仅记录请求方法、URL、响应状态码及执行时间;</li><li><strong>HEADERS</strong>：除了BASIC中定义的信息之外，还有请求和响应的头信息;</li><li><strong>FULL</strong>：除了HEADERS中定义的信息之外，还有请求和响应的正文及元数据。</li></ul></blockquote><h5 id="_1-配置类中配置日志级别" tabindex="-1">1.配置类中配置日志级别 <a class="header-anchor" href="#_1-配置类中配置日志级别" aria-label="Permalink to &quot;1.配置类中配置日志级别&quot;">​</a></h5><blockquote><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">feign</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Logger</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">context</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Bean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">context</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Configuration</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">OpenFeignConfig</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span></span>
<span class="line"><span style="color:#C792EA;">Logger</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Level</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">feignLoggerLevel</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> Logger</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Level</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FULL</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></blockquote><h5 id="_2-yaml文件中设置接口日志级别" tabindex="-1">2.yaml文件中设置接口日志级别 <a class="header-anchor" href="#_2-yaml文件中设置接口日志级别" aria-label="Permalink to &quot;2.yaml文件中设置接口日志级别&quot;">​</a></h5><blockquote><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">logging</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">level</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">cn.open.feign</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">debug</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">#openFeign接口所在的包</span></span></code></pre></div></blockquote><h4 id="openfeign替换httpclient" tabindex="-1">openFeign替换httpclient <a class="header-anchor" href="#openfeign替换httpclient" aria-label="Permalink to &quot;openFeign替换httpclient&quot;">​</a></h4><blockquote><p>Feign在默认情况下使用的是JDK原生的<strong>URLConnection</strong>发送HTTP请求，没有连接池，但是对每个地址会保持一个长连接，即利用HTTP的persistence connection。</p><p>在生产环境中，通常不使用默认的http client，通常有如下两种选择：</p><ul><li>使用<strong>ApacheHttpClient</strong></li><li>使用<strong>OkHttp</strong></li></ul></blockquote><h5 id="使用apachehttpclient替换" tabindex="-1">使用ApacheHttpClient替换 <a class="header-anchor" href="#使用apachehttpclient替换" aria-label="Permalink to &quot;使用ApacheHttpClient替换&quot;">​</a></h5><h6 id="_1-添加依赖-1" tabindex="-1">1.添加依赖 <a class="header-anchor" href="#_1-添加依赖-1" aria-label="Permalink to &quot;1.添加依赖&quot;">​</a></h6><p>在openFeign接口服务的pom文件添加如下依赖：</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!--使用Apache HttpClient替换Feign原生httpclient--&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">org.apache.httpcomponents</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">httpclient</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">io.github.openfeign</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">feign-httpclient</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">9.3.1</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>为什么要添加上面的依赖呢？从源码中不难看出，请看<code>org.springframework.cloud.openfeign.FeignAutoConfiguration.HttpClientFeignConfiguration</code></p><h6 id="_2-配置文件" tabindex="-1">2.配置文件 <a class="header-anchor" href="#_2-配置文件" aria-label="Permalink to &quot;2.配置文件&quot;">​</a></h6><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">feign</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">client</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">httpclient</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;"># 开启 Http Client</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">enabled</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span></code></pre></div><h6 id="_3-验证成功" tabindex="-1">3.验证成功 <a class="header-anchor" href="#_3-验证成功" aria-label="Permalink to &quot;3.验证成功&quot;">​</a></h6><p>在<code>feign.SynchronousMethodHandler#executeAndDecode()</code>这个方法中可以清楚的看出调用哪个client</p><h5 id="使用okhttp替换" tabindex="-1">使用OkHttp替换 <a class="header-anchor" href="#使用okhttp替换" aria-label="Permalink to &quot;使用OkHttp替换&quot;">​</a></h5><h6 id="_1-添加依赖-2" tabindex="-1">1.添加依赖 <a class="header-anchor" href="#_1-添加依赖-2" aria-label="Permalink to &quot;1.添加依赖&quot;">​</a></h6><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">io.github.openfeign</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">feign-okhttp</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">10.2.0</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h6 id="_2-配置文件-1" tabindex="-1">2.配置文件 <a class="header-anchor" href="#_2-配置文件-1" aria-label="Permalink to &quot;2.配置文件&quot;">​</a></h6><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">feign</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">okhttp</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">enabled</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#F07178;">ribbon</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">okhttp</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">enabled</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span></code></pre></div><h4 id="openfeign通讯优化" tabindex="-1">openFeign通讯优化 <a class="header-anchor" href="#openfeign通讯优化" aria-label="Permalink to &quot;openFeign通讯优化&quot;">​</a></h4><blockquote><p><strong>当GZIP压缩到一个纯文本数据时，效果是非常明显的，大约可以减少70％以上的数据大小。</strong></p><p>网络数据经过压缩后实际上降低了网络传输的字节数，最明显的好处就是可以加快网页加载的速度。网页加载速度加快的好处不言而喻，除了节省流量，改善用户的浏览体验外，另一个潜在的好处是GZIP与搜索引擎的抓取工具有着更好的关系。例如 Google就可以通过直接读取GZIP文件来比普通手工抓取更快地检索网页。</p><p>GZIP压缩传输的原理如下图：</p><p><img src="`+c+'" alt="图片"></p><p>按照上图拆解出的步骤如下：</p><ul><li>客户端向服务器请求头中带有：<code>Accept-Encoding:gzip,deflate</code> 字段，向服务器表示，客户端支持的压缩格式（gzip或者deflate)，如果不发送该消息头，服务器是不会压缩的。</li><li>服务端在收到请求之后，如果发现请求头中含有<code>Accept-Encoding</code>字段，并且支持该类型的压缩，就对响应报文压缩之后返回给客户端，并且携带<code>Content-Encoding:gzip</code>消息头，表示响应报文是根据该格式压缩过的。</li><li>客户端接收到响应之后，先判断是否有Content-Encoding消息头，如果有，按该格式解压报文。否则按正常报文处理。</li></ul><p>openFeign支持<strong>请求/响应</strong>开启GZIP压缩，整体的流程如下图：</p><p><img src="'+r+`" alt="图片"></p><p>上图中涉及到GZIP传输的只有两块，分别是<strong>Application client -&gt; Application Service</strong>、 <strong>Application Service-&gt;Application client</strong>。</p><p><strong>注意</strong>：openFeign支持的GZIP仅仅是在openFeign接口的请求和响应，即是openFeign消费者调用服务提供者的接口。</p></blockquote><h5 id="openfeign开启gzip" tabindex="-1">openFeign开启GZIP <a class="header-anchor" href="#openfeign开启gzip" aria-label="Permalink to &quot;openFeign开启GZIP&quot;">​</a></h5><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">feign:</span></span>
<span class="line"><span style="color:#A6ACCD;">  ## 开启压缩</span></span>
<span class="line"><span style="color:#A6ACCD;">  compression:</span></span>
<span class="line"><span style="color:#A6ACCD;">    request:</span></span>
<span class="line"><span style="color:#A6ACCD;">      enabled: true</span></span>
<span class="line"><span style="color:#A6ACCD;">      ## 开启压缩的阈值，单位字节，默认2048，即是2k，这里为了演示效果设置成10字节</span></span>
<span class="line"><span style="color:#A6ACCD;">      min-request-size: 10</span></span>
<span class="line"><span style="color:#A6ACCD;">      mime-types: text/xml,application/xml,application/json</span></span>
<span class="line"><span style="color:#A6ACCD;">    response:</span></span>
<span class="line"><span style="color:#A6ACCD;">      enabled: true</span></span></code></pre></div><h4 id="openfeign熔断降级" tabindex="-1">openFeign熔断降级 <a class="header-anchor" href="#openfeign熔断降级" aria-label="Permalink to &quot;openFeign熔断降级&quot;">​</a></h4><h5 id="使用openfeign-sentinel进行整合实现服务降级" tabindex="-1">使用<strong>openFeign+Sentinel</strong>进行整合实现服务降级 <a class="header-anchor" href="#使用openfeign-sentinel进行整合实现服务降级" aria-label="Permalink to &quot;使用**openFeign+Sentinel**进行整合实现服务降级&quot;">​</a></h5><h6 id="_1-添加sentinel依赖" tabindex="-1">1.添加Sentinel依赖 <a class="header-anchor" href="#_1-添加sentinel依赖" aria-label="Permalink to &quot;1.添加Sentinel依赖&quot;">​</a></h6><p>在消费者的pom文件添加sentinel依赖，如下：</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">com.alibaba.cloud</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">spring-cloud-starter-alibaba-sentinel</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h6 id="_2-配置文件中开启sentinel熔断降级" tabindex="-1">2.配置文件中开启sentinel熔断降级 <a class="header-anchor" href="#_2-配置文件中开启sentinel熔断降级" aria-label="Permalink to &quot;2.配置文件中开启sentinel熔断降级&quot;">​</a></h6><p>要想openFeign使用sentinel的降级功能，还需要在配置文件中开启，添加如下配置：</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">feign</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">sentinel</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">enabled</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span></code></pre></div><h6 id="_3-添加降级回调类-实现feign接口" tabindex="-1">3.添加降级回调类(实现feign接口) <a class="header-anchor" href="#_3-添加降级回调类-实现feign接口" aria-label="Permalink to &quot;3.添加降级回调类(实现feign接口)&quot;">​</a></h6>`,58),F=[y];function D(C,g,d,A,h,u){return a(),n("div",null,F)}const m=s(i,[["render",D]]);export{f as __pageData,m as default};
