import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.8048b864.js";const h=JSON.parse('{"title":"Linux","description":"","frontmatter":{},"headers":[],"relativePath":"container/linux.md","filePath":"container/linux.md","lastUpdated":1697176108000}'),p={name:"container/linux.md"},o=l(`<h1 id="linux" tabindex="-1">Linux <a class="header-anchor" href="#linux" aria-label="Permalink to &quot;Linux&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#_1-环境配置">1.环境配置</a></li><li><a href="#_2-常用命令">2.常用命令</a></li></ul></nav><h2 id="_1-环境配置" tabindex="-1">1.环境配置 <a class="header-anchor" href="#_1-环境配置" aria-label="Permalink to &quot;1.环境配置&quot;">​</a></h2><h4 id="_1-1-jdk1-8安装" tabindex="-1">1.1 Jdk1.8安装 <a class="header-anchor" href="#_1-1-jdk1-8安装" aria-label="Permalink to &quot;1.1 Jdk1.8安装&quot;">​</a></h4><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">tar -zxvf jdk</span><span style="color:#79B8FF;">-8</span><span style="color:#E1E4E8;">u</span><span style="color:#79B8FF;">144</span><span style="color:#E1E4E8;">-linux-x</span><span style="color:#79B8FF;">64</span><span style="color:#E1E4E8;">.tar.gz -C /usr/local</span></span>
<span class="line"><span style="color:#E1E4E8;">cd /usr/local </span></span>
<span class="line"><span style="color:#E1E4E8;">mv jdk</span><span style="color:#79B8FF;">1.8</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">_</span><span style="color:#79B8FF;">144</span><span style="color:#E1E4E8;"> jdk</span><span style="color:#79B8FF;">1.8</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">vim /etc/profile</span></span>
<span class="line"><span style="color:#E1E4E8;">export JAVA_HOME=/usr/local/jdk</span><span style="color:#79B8FF;">1.8</span></span>
<span class="line"><span style="color:#E1E4E8;">export PATH=$JAVA_HOME/bin:$PATH</span></span>
<span class="line"><span style="color:#E1E4E8;">source /etc/profile</span></span>
<span class="line"><span style="color:#E1E4E8;">java -version</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">tar -zxvf jdk</span><span style="color:#005CC5;">-8</span><span style="color:#24292E;">u</span><span style="color:#005CC5;">144</span><span style="color:#24292E;">-linux-x</span><span style="color:#005CC5;">64</span><span style="color:#24292E;">.tar.gz -C /usr/local</span></span>
<span class="line"><span style="color:#24292E;">cd /usr/local </span></span>
<span class="line"><span style="color:#24292E;">mv jdk</span><span style="color:#005CC5;">1.8</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">_</span><span style="color:#005CC5;">144</span><span style="color:#24292E;"> jdk</span><span style="color:#005CC5;">1.8</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">vim /etc/profile</span></span>
<span class="line"><span style="color:#24292E;">export JAVA_HOME=/usr/local/jdk</span><span style="color:#005CC5;">1.8</span></span>
<span class="line"><span style="color:#24292E;">export PATH=$JAVA_HOME/bin:$PATH</span></span>
<span class="line"><span style="color:#24292E;">source /etc/profile</span></span>
<span class="line"><span style="color:#24292E;">java -version</span></span></code></pre></div><h4 id="_1-2-docker安装" tabindex="-1">1.2 docker安装 <a class="header-anchor" href="#_1-2-docker安装" aria-label="Permalink to &quot;1.2 docker安装&quot;">​</a></h4><h5 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h5><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">yum -y install docker	#安装并设置Docker</span></span>
<span class="line"><span style="color:#E1E4E8;">systemctl enable docker #docker开机自启</span></span>
<span class="line"><span style="color:#E1E4E8;">systemctl start docker  #docker启动</span></span>
<span class="line"><span style="color:#E1E4E8;">docker version			#查看Docker当前版本</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">yum -y install docker	#安装并设置Docker</span></span>
<span class="line"><span style="color:#24292E;">systemctl enable docker #docker开机自启</span></span>
<span class="line"><span style="color:#24292E;">systemctl start docker  #docker启动</span></span>
<span class="line"><span style="color:#24292E;">docker version			#查看Docker当前版本</span></span></code></pre></div><h5 id="移除" tabindex="-1">移除 <a class="header-anchor" href="#移除" aria-label="Permalink to &quot;移除&quot;">​</a></h5><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">yum</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">remove</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">docker-client</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">docker-client-latest</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">docker-common</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">docker-latest</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">docker-latest-logrotate</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">docker-logrotate</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">docker-selinux</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">docker-engine-selinux</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">docker-engine</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">yum</span><span style="color:#24292E;"> </span><span style="color:#032F62;">remove</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">docker-client</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">docker-client-latest</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">docker-common</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">docker-latest</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">docker-latest-logrotate</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">docker-logrotate</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">docker-selinux</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">docker-engine-selinux</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">docker-engine</span></span></code></pre></div><h5 id="镜像加速" tabindex="-1">镜像加速 <a class="header-anchor" href="#镜像加速" aria-label="Permalink to &quot;镜像加速&quot;">​</a></h5><p>新建配置文件<code>/etc/docker/daemon.json</code></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;registry-mirrors&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;https://7qyk8phi.mirror.aliyuncs.com&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;registry-mirrors&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;https://7qyk8phi.mirror.aliyuncs.com&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>重启docker</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">daemon-reload</span></span>
<span class="line"><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">restart</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">daemon-reload</span></span>
<span class="line"><span style="color:#6F42C1;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">restart</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker</span></span></code></pre></div><p>执行 <code>docker info</code>，从结果中看到如下内容，说明配置成功。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Registry</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Mirrors:</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">https://7qyk8phi.mirror.aliyuncs.com/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Registry</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Mirrors:</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">https://7qyk8phi.mirror.aliyuncs.com/</span></span></code></pre></div><h5 id="docker-compose" tabindex="-1">docker-compose <a class="header-anchor" href="#docker-compose" aria-label="Permalink to &quot;docker-compose&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">mv docker-compose-Linux-x</span><span style="color:#79B8FF;">86</span><span style="color:#E1E4E8;">_</span><span style="color:#79B8FF;">64</span><span style="color:#E1E4E8;"> docker-compose</span></span>
<span class="line"><span style="color:#E1E4E8;">chmod </span><span style="color:#79B8FF;">777</span><span style="color:#E1E4E8;"> docker-compose</span></span>
<span class="line"><span style="color:#E1E4E8;">mv docker-compose /usr/local/bin/</span></span>
<span class="line"><span style="color:#E1E4E8;">vim /etc/profile</span></span>
<span class="line"><span style="color:#E1E4E8;">export PATH=/usr/local/bin:$PATH </span></span>
<span class="line"><span style="color:#E1E4E8;">source /etc/profile</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">mv docker-compose-Linux-x</span><span style="color:#005CC5;">86</span><span style="color:#24292E;">_</span><span style="color:#005CC5;">64</span><span style="color:#24292E;"> docker-compose</span></span>
<span class="line"><span style="color:#24292E;">chmod </span><span style="color:#005CC5;">777</span><span style="color:#24292E;"> docker-compose</span></span>
<span class="line"><span style="color:#24292E;">mv docker-compose /usr/local/bin/</span></span>
<span class="line"><span style="color:#24292E;">vim /etc/profile</span></span>
<span class="line"><span style="color:#24292E;">export PATH=/usr/local/bin:$PATH </span></span>
<span class="line"><span style="color:#24292E;">source /etc/profile</span></span></code></pre></div><h2 id="_2-常用命令" tabindex="-1">2.常用命令 <a class="header-anchor" href="#_2-常用命令" aria-label="Permalink to &quot;2.常用命令&quot;">​</a></h2><h4 id="基础命令" tabindex="-1">基础命令 <a class="header-anchor" href="#基础命令" aria-label="Permalink to &quot;基础命令&quot;">​</a></h4><blockquote><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">mkdir [</span><span style="color:#FDAEB7;font-style:italic;">-p</span><span style="color:#E1E4E8;">] 目录名 #-p在创建多级目录时使用</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">mkdir [</span><span style="color:#B31D28;font-style:italic;">-p</span><span style="color:#24292E;">] 目录名 #-p在创建多级目录时使用</span></span></code></pre></div><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">rmdir 目录 		#删除空目录</span></span>
<span class="line"><span style="color:#E1E4E8;">rm [</span><span style="color:#FDAEB7;font-style:italic;">-rf</span><span style="color:#E1E4E8;">] 目录名 	#删除非空目录 -r表示递归删除全部内容 -f表示不询问</span></span>
<span class="line"><span style="color:#E1E4E8;">rm [</span><span style="color:#FDAEB7;font-style:italic;">-f</span><span style="color:#E1E4E8;">] 文件名 	#删除文件	-f:是否询问</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">rmdir 目录 		#删除空目录</span></span>
<span class="line"><span style="color:#24292E;">rm [</span><span style="color:#B31D28;font-style:italic;">-rf</span><span style="color:#24292E;">] 目录名 	#删除非空目录 -r表示递归删除全部内容 -f表示不询问</span></span>
<span class="line"><span style="color:#24292E;">rm [</span><span style="color:#B31D28;font-style:italic;">-f</span><span style="color:#24292E;">] 文件名 	#删除文件	-f:是否询问</span></span></code></pre></div><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">cp -r 来源目录 目标目录 #复制目录</span></span>
<span class="line"><span style="color:#E1E4E8;">cp 文件名 目录 #复制文件到指定目录下</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">cp -r 来源目录 目标目录 #复制目录</span></span>
<span class="line"><span style="color:#24292E;">cp 文件名 目录 #复制文件到指定目录下</span></span></code></pre></div><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">mv 目录名(文件名) 新目录名(新文件名)|路径</span></span>
<span class="line"><span style="color:#E1E4E8;"># 如果第二个参数指定的路径不存在，就是重命名</span></span>
<span class="line"><span style="color:#E1E4E8;"># 如果第二个参数的路径存在，就是移动</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">mv 目录名(文件名) 新目录名(新文件名)|路径</span></span>
<span class="line"><span style="color:#24292E;"># 如果第二个参数指定的路径不存在，就是重命名</span></span>
<span class="line"><span style="color:#24292E;"># 如果第二个参数的路径存在，就是移动</span></span></code></pre></div><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">touch 文件名 #创建文件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">若不能直接使用vim命令，则: #编辑文件</span></span>
<span class="line"><span style="color:#E1E4E8;">touch 文件名</span></span>
<span class="line"><span style="color:#E1E4E8;">echo </span><span style="color:#9ECBFF;">&quot;内容&quot;</span><span style="color:#E1E4E8;">&gt;&gt;文件名</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">touch 文件名 #创建文件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">若不能直接使用vim命令，则: #编辑文件</span></span>
<span class="line"><span style="color:#24292E;">touch 文件名</span></span>
<span class="line"><span style="color:#24292E;">echo </span><span style="color:#032F62;">&quot;内容&quot;</span><span style="color:#24292E;">&gt;&gt;文件名</span></span></code></pre></div><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">在vi文件时，在底行命令模式下可以输入以下常用内容 #vi模式</span></span>
<span class="line"><span style="color:#E1E4E8;">set nu 		# 查看文件的行号</span></span>
<span class="line"><span style="color:#E1E4E8;">to rownum 	# 快速的跳转到指定行</span></span>
<span class="line"><span style="color:#E1E4E8;">set nonu 	# 取消行号</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">在vi文件时，在底行命令模式下可以输入以下常用内容 #vi模式</span></span>
<span class="line"><span style="color:#24292E;">set nu 		# 查看文件的行号</span></span>
<span class="line"><span style="color:#24292E;">to rownum 	# 快速的跳转到指定行</span></span>
<span class="line"><span style="color:#24292E;">set nonu 	# 取消行号</span></span></code></pre></div><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#查看文件</span></span>
<span class="line"><span style="color:#E1E4E8;">cat 文件名 #展示文件到最后一行</span></span>
<span class="line"><span style="color:#E1E4E8;">tac 文件名 #从头到尾展示文件全部</span></span>
<span class="line"><span style="color:#E1E4E8;">nl 文件名 #从最后一行开始展示</span></span>
<span class="line"><span style="color:#E1E4E8;">more 文件名 #分页展示 space向下翻页，q退出</span></span>
<span class="line"><span style="color:#E1E4E8;">less 文件名 #任意展示 PageUp上一页和PageDown下一页 一行一行看↑↓</span></span>
<span class="line"><span style="color:#E1E4E8;">head 文件名 #只看前几行</span></span>
<span class="line"><span style="color:#E1E4E8;">tail 文件名 #只看后几行</span></span>
<span class="line"><span style="color:#E1E4E8;">tail -f 日志 #监控日志</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#查看文件</span></span>
<span class="line"><span style="color:#24292E;">cat 文件名 #展示文件到最后一行</span></span>
<span class="line"><span style="color:#24292E;">tac 文件名 #从头到尾展示文件全部</span></span>
<span class="line"><span style="color:#24292E;">nl 文件名 #从最后一行开始展示</span></span>
<span class="line"><span style="color:#24292E;">more 文件名 #分页展示 space向下翻页，q退出</span></span>
<span class="line"><span style="color:#24292E;">less 文件名 #任意展示 PageUp上一页和PageDown下一页 一行一行看↑↓</span></span>
<span class="line"><span style="color:#24292E;">head 文件名 #只看前几行</span></span>
<span class="line"><span style="color:#24292E;">tail 文件名 #只看后几行</span></span>
<span class="line"><span style="color:#24292E;">tail -f 日志 #监控日志</span></span></code></pre></div><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#tar包:解压</span></span>
<span class="line"><span style="color:#E1E4E8;">tar [</span><span style="color:#FDAEB7;font-style:italic;">-zxvf</span><span style="color:#E1E4E8;">] 压缩包名称 [</span><span style="color:#FDAEB7;font-style:italic;">-C</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">路径</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;"># -z: 解压后缀为.gz</span></span>
<span class="line"><span style="color:#E1E4E8;"># -x: 解压</span></span>
<span class="line"><span style="color:#E1E4E8;"># -v: 打印详细信息</span></span>
<span class="line"><span style="color:#E1E4E8;"># -f: 代表指定文件名称[</span><span style="color:#FDAEB7;font-style:italic;">放在最后</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;"># -C 路径: 指定解压路径</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#FDAEB7;font-style:italic;">root@localhost</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">~</span><span style="color:#E1E4E8;">]#</span></span>
<span class="line"><span style="color:#E1E4E8;">tar -xvf files.tar #将files.tar文件解包到当前目录下</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">#tar包:打包</span></span>
<span class="line"><span style="color:#E1E4E8;">tar [</span><span style="color:#FDAEB7;font-style:italic;">-zcvf</span><span style="color:#E1E4E8;">] 压缩包名称 文件</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> ... 目录</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> ...</span></span>
<span class="line"><span style="color:#E1E4E8;"># -c: 打包</span></span>
<span class="line"><span style="color:#E1E4E8;"># -z: 解压后缀为.gz</span></span>
<span class="line"><span style="color:#E1E4E8;"># -v: 打印详细信息</span></span>
<span class="line"><span style="color:#E1E4E8;"># -f: 代表指定文件名称[</span><span style="color:#FDAEB7;font-style:italic;">放在最后</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#FDAEB7;font-style:italic;">root@localhost</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">~</span><span style="color:#E1E4E8;">]#</span></span>
<span class="line"><span style="color:#E1E4E8;">tar -cvf files.tar files #将files文件打包成files.tar文件</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#tar包:解压</span></span>
<span class="line"><span style="color:#24292E;">tar [</span><span style="color:#B31D28;font-style:italic;">-zxvf</span><span style="color:#24292E;">] 压缩包名称 [</span><span style="color:#B31D28;font-style:italic;">-C</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">路径</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;"># -z: 解压后缀为.gz</span></span>
<span class="line"><span style="color:#24292E;"># -x: 解压</span></span>
<span class="line"><span style="color:#24292E;"># -v: 打印详细信息</span></span>
<span class="line"><span style="color:#24292E;"># -f: 代表指定文件名称[</span><span style="color:#B31D28;font-style:italic;">放在最后</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;"># -C 路径: 指定解压路径</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#B31D28;font-style:italic;">root@localhost</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">~</span><span style="color:#24292E;">]#</span></span>
<span class="line"><span style="color:#24292E;">tar -xvf files.tar #将files.tar文件解包到当前目录下</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">#tar包:打包</span></span>
<span class="line"><span style="color:#24292E;">tar [</span><span style="color:#B31D28;font-style:italic;">-zcvf</span><span style="color:#24292E;">] 压缩包名称 文件</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> ... 目录</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> ...</span></span>
<span class="line"><span style="color:#24292E;"># -c: 打包</span></span>
<span class="line"><span style="color:#24292E;"># -z: 解压后缀为.gz</span></span>
<span class="line"><span style="color:#24292E;"># -v: 打印详细信息</span></span>
<span class="line"><span style="color:#24292E;"># -f: 代表指定文件名称[</span><span style="color:#B31D28;font-style:italic;">放在最后</span><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#B31D28;font-style:italic;">root@localhost</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">~</span><span style="color:#24292E;">]#</span></span>
<span class="line"><span style="color:#24292E;">tar -cvf files.tar files #将files文件打包成files.tar文件</span></span></code></pre></div><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#zip包</span></span>
<span class="line"><span style="color:#E1E4E8;">yum -y install zip 		# 打包程序</span></span>
<span class="line"><span style="color:#E1E4E8;">yum -y install unzip  	# 解压程序</span></span>
<span class="line"><span style="color:#E1E4E8;">unzip 压缩包名称 		 #解压</span></span>
<span class="line"><span style="color:#E1E4E8;">zip 压缩包名称 文件</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> ... 目录</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> ... #压缩</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#zip包</span></span>
<span class="line"><span style="color:#24292E;">yum -y install zip 		# 打包程序</span></span>
<span class="line"><span style="color:#24292E;">yum -y install unzip  	# 解压程序</span></span>
<span class="line"><span style="color:#24292E;">unzip 压缩包名称 		 #解压</span></span>
<span class="line"><span style="color:#24292E;">zip 压缩包名称 文件</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> ... 目录</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> ... #压缩</span></span></code></pre></div><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#赋权</span></span>
<span class="line"><span style="color:#E1E4E8;">	chmod [</span><span style="color:#FDAEB7;font-style:italic;">-R</span><span style="color:#E1E4E8;">] </span><span style="color:#79B8FF;">777</span><span style="color:#E1E4E8;"> 文件|目录</span></span>
<span class="line"><span style="color:#E1E4E8;"># rwx在这三个权限中r：</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">，w：</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">，x：</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">777</span><span style="color:#E1E4E8;">代表全部权限</span></span>
<span class="line"><span style="color:#E1E4E8;"># -R： 当修改一个目录权限时，可以添加-R，将目录下的全部内容，都修改权限。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#赋权</span></span>
<span class="line"><span style="color:#24292E;">	chmod [</span><span style="color:#B31D28;font-style:italic;">-R</span><span style="color:#24292E;">] </span><span style="color:#005CC5;">777</span><span style="color:#24292E;"> 文件|目录</span></span>
<span class="line"><span style="color:#24292E;"># rwx在这三个权限中r：</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">，w：</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">，x：</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">777</span><span style="color:#24292E;">代表全部权限</span></span>
<span class="line"><span style="color:#24292E;"># -R： 当修改一个目录权限时，可以添加-R，将目录下的全部内容，都修改权限。</span></span></code></pre></div></blockquote><h4 id="系统相关" tabindex="-1">系统相关 <a class="header-anchor" href="#系统相关" aria-label="Permalink to &quot;系统相关&quot;">​</a></h4><h5 id="启动系统" tabindex="-1">启动系统 <a class="header-anchor" href="#启动系统" aria-label="Permalink to &quot;启动系统&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">重启命令：</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">、reboot	</span><span style="color:#6A737D;">//重启</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">、shutdown -r now </span><span style="color:#6A737D;">//立刻重启(root用户使用)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">、shutdown -r </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//过10分钟自动重启(root用户使用)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">、shutdown -r </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">35</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//在时间为20:35时候重启(root用户使用)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">关机命令：	</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">、halt   </span><span style="color:#6A737D;">//立刻关机</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">、poweroff  </span><span style="color:#6A737D;">//立刻关机</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">、shutdown -h now </span><span style="color:#6A737D;">//立刻关机(root用户使用)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">、shutdown -h </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//10分钟后自动关机</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">systemctl start|stop|restart|enable|disable|status 服务名称 </span><span style="color:#6A737D;">//启动服务</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">重启命令：</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">、reboot	</span><span style="color:#6A737D;">//重启</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">、shutdown -r now </span><span style="color:#6A737D;">//立刻重启(root用户使用)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">、shutdown -r </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//过10分钟自动重启(root用户使用)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">、shutdown -r </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">35</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//在时间为20:35时候重启(root用户使用)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">关机命令：	</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">、halt   </span><span style="color:#6A737D;">//立刻关机</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">、poweroff  </span><span style="color:#6A737D;">//立刻关机</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">、shutdown -h now </span><span style="color:#6A737D;">//立刻关机(root用户使用)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">、shutdown -h </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//10分钟后自动关机</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">systemctl start|stop|restart|enable|disable|status 服务名称 </span><span style="color:#6A737D;">//启动服务</span></span></code></pre></div><h5 id="启动jar" tabindex="-1">启动jar <a class="header-anchor" href="#启动jar" aria-label="Permalink to &quot;启动jar&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">java -jar XXX.jar </span><span style="color:#6A737D;">//启动jar</span></span>
<span class="line"><span style="color:#E1E4E8;">nohup java -jar XXX.jar &amp;  </span><span style="color:#6A737D;">//启动jar并后台运行</span></span>
<span class="line"><span style="color:#E1E4E8;">nohup java -jar -Dspring.profiles.active=dev XXX.jar &amp;  </span><span style="color:#6A737D;">//多环境下启动jar</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">java -jar XXX.jar </span><span style="color:#6A737D;">//启动jar</span></span>
<span class="line"><span style="color:#24292E;">nohup java -jar XXX.jar &amp;  </span><span style="color:#6A737D;">//启动jar并后台运行</span></span>
<span class="line"><span style="color:#24292E;">nohup java -jar -Dspring.profiles.active=dev XXX.jar &amp;  </span><span style="color:#6A737D;">//多环境下启动jar</span></span></code></pre></div><h5 id="查看nginx" tabindex="-1">查看nginx <a class="header-anchor" href="#查看nginx" aria-label="Permalink to &quot;查看nginx&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">nginx -t </span><span style="color:#6A737D;">//查看nginx配置是否正确</span></span>
<span class="line"><span style="color:#E1E4E8;">nginx -s reload </span><span style="color:#6A737D;">//重启nginx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">nginx -t </span><span style="color:#6A737D;">//查看nginx配置是否正确</span></span>
<span class="line"><span style="color:#24292E;">nginx -s reload </span><span style="color:#6A737D;">//重启nginx</span></span></code></pre></div><h5 id="查看cpu" tabindex="-1">查看cpu <a class="header-anchor" href="#查看cpu" aria-label="Permalink to &quot;查看cpu&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">cat /proc/cpuinfo	</span><span style="color:#6A737D;">//查看cpu整体情况</span></span>
<span class="line"><span style="color:#E1E4E8;">top  </span><span style="color:#6A737D;">//查看cpu占用排行</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">cat /proc/cpuinfo	</span><span style="color:#6A737D;">//查看cpu整体情况</span></span>
<span class="line"><span style="color:#24292E;">top  </span><span style="color:#6A737D;">//查看cpu占用排行</span></span></code></pre></div><h5 id="查看进程" tabindex="-1">查看进程 <a class="header-anchor" href="#查看进程" aria-label="Permalink to &quot;查看进程&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ps -ef  # 查看全部正在运行进程</span></span>
<span class="line"><span style="color:#E1E4E8;">ps -ef|grep xxx	# 查看正在运行的相关进程</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ps -ef  # 查看全部正在运行进程</span></span>
<span class="line"><span style="color:#24292E;">ps -ef|grep xxx	# 查看正在运行的相关进程</span></span></code></pre></div><h5 id="查看进程占用cpu-内存" tabindex="-1">查看进程占用cpu 内存 <a class="header-anchor" href="#查看进程占用cpu-内存" aria-label="Permalink to &quot;查看进程占用cpu 内存&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ps auxw|head </span><span style="color:#79B8FF;">-1</span><span style="color:#E1E4E8;">;ps auxw|sort -rn -k</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">|head </span><span style="color:#79B8FF;">-10</span></span>
<span class="line"><span style="color:#E1E4E8;">ps -mp </span><span style="color:#79B8FF;">20490</span><span style="color:#E1E4E8;"> -o THREAD,tid,time|sort -rn|head -n </span><span style="color:#79B8FF;">20</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ps auxw|head </span><span style="color:#005CC5;">-1</span><span style="color:#24292E;">;ps auxw|sort -rn -k</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">|head </span><span style="color:#005CC5;">-10</span></span>
<span class="line"><span style="color:#24292E;">ps -mp </span><span style="color:#005CC5;">20490</span><span style="color:#24292E;"> -o THREAD,tid,time|sort -rn|head -n </span><span style="color:#005CC5;">20</span></span></code></pre></div><h5 id="清除进程" tabindex="-1">清除进程 <a class="header-anchor" href="#清除进程" aria-label="Permalink to &quot;清除进程&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#linux</span></span>
<span class="line"><span style="color:#E1E4E8;">	kill </span><span style="color:#79B8FF;">-9</span><span style="color:#E1E4E8;"> pid（进程号）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">#windows</span></span>
<span class="line"><span style="color:#E1E4E8;">    netstat -ano #查看所有进程</span></span>
<span class="line"><span style="color:#E1E4E8;">    netstat -ano |findstr </span><span style="color:#9ECBFF;">&quot;端口号&quot;</span><span style="color:#E1E4E8;"> #查看端口号占用</span></span>
<span class="line"><span style="color:#E1E4E8;">    taskkill /f /t /im </span><span style="color:#9ECBFF;">&quot;进程id或者进程名称&quot;</span><span style="color:#E1E4E8;">  #杀死进程</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">eg.</span></span>
<span class="line"><span style="color:#E1E4E8;">    #windows</span></span>
<span class="line"><span style="color:#E1E4E8;">    查看端口占用：</span></span>
<span class="line"><span style="color:#E1E4E8;">        netstat -aon | findstr </span><span style="color:#9ECBFF;">&quot;19000&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    根据进程号查看进程：</span></span>
<span class="line"><span style="color:#E1E4E8;">        tasklist | findstr </span><span style="color:#9ECBFF;">&quot;2888&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    杀死进程：  </span></span>
<span class="line"><span style="color:#E1E4E8;">        taskkill /pid </span><span style="color:#79B8FF;">1688</span><span style="color:#E1E4E8;"> /F</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#linux</span></span>
<span class="line"><span style="color:#24292E;">	kill </span><span style="color:#005CC5;">-9</span><span style="color:#24292E;"> pid（进程号）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">#windows</span></span>
<span class="line"><span style="color:#24292E;">    netstat -ano #查看所有进程</span></span>
<span class="line"><span style="color:#24292E;">    netstat -ano |findstr </span><span style="color:#032F62;">&quot;端口号&quot;</span><span style="color:#24292E;"> #查看端口号占用</span></span>
<span class="line"><span style="color:#24292E;">    taskkill /f /t /im </span><span style="color:#032F62;">&quot;进程id或者进程名称&quot;</span><span style="color:#24292E;">  #杀死进程</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">eg.</span></span>
<span class="line"><span style="color:#24292E;">    #windows</span></span>
<span class="line"><span style="color:#24292E;">    查看端口占用：</span></span>
<span class="line"><span style="color:#24292E;">        netstat -aon | findstr </span><span style="color:#032F62;">&quot;19000&quot;</span></span>
<span class="line"><span style="color:#24292E;">    根据进程号查看进程：</span></span>
<span class="line"><span style="color:#24292E;">        tasklist | findstr </span><span style="color:#032F62;">&quot;2888&quot;</span></span>
<span class="line"><span style="color:#24292E;">    杀死进程：  </span></span>
<span class="line"><span style="color:#24292E;">        taskkill /pid </span><span style="color:#005CC5;">1688</span><span style="color:#24292E;"> /F</span></span></code></pre></div><h5 id="查看端口" tabindex="-1">查看端口 <a class="header-anchor" href="#查看端口" aria-label="Permalink to &quot;查看端口&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#执行netstat命令须安装netstat</span></span>
<span class="line"><span style="color:#E1E4E8;">yum -y install net-tools </span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 查看启用的端口</span></span>
<span class="line"><span style="color:#E1E4E8;">netstat -nptl</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 查看端口号占用情况</span></span>
<span class="line"><span style="color:#E1E4E8;">netstat -apno|grep 端口号</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#执行netstat命令须安装netstat</span></span>
<span class="line"><span style="color:#24292E;">yum -y install net-tools </span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 查看启用的端口</span></span>
<span class="line"><span style="color:#24292E;">netstat -nptl</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 查看端口号占用情况</span></span>
<span class="line"><span style="color:#24292E;">netstat -apno|grep 端口号</span></span></code></pre></div><h5 id="查询服务器ip" tabindex="-1">查询服务器IP <a class="header-anchor" href="#查询服务器ip" aria-label="Permalink to &quot;查询服务器IP&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">curl ipinfo.io</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">resp:</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;ip&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;47.98.221.99&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;city&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Hangzhou&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;region&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Zhejiang&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;country&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;CN&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;loc&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;30.2936,120.1614&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;org&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;AS37963 Hangzhou Alibaba Advertising Co.,Ltd.&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;timezone&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Asia/Shanghai&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;readme&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;https://ipinfo.io/missingauth&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">curl ipinfo.io</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">resp:</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;ip&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;47.98.221.99&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;city&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Hangzhou&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;region&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Zhejiang&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;country&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;CN&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;loc&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;30.2936,120.1614&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;org&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;AS37963 Hangzhou Alibaba Advertising Co.,Ltd.&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;timezone&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Asia/Shanghai&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;readme&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;https://ipinfo.io/missingauth&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h5 id="防火墙操作" tabindex="-1">防火墙操作 <a class="header-anchor" href="#防火墙操作" aria-label="Permalink to &quot;防火墙操作&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">systemctl status firewalld.service #查看防火墙</span></span>
<span class="line"><span style="color:#E1E4E8;">systemctl stop firewalld.service #关闭防火墙</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">systemctl status firewalld.service #查看防火墙</span></span>
<span class="line"><span style="color:#24292E;">systemctl stop firewalld.service #关闭防火墙</span></span></code></pre></div><h5 id="查看磁盘占用空间" tabindex="-1">查看磁盘占用空间 <a class="header-anchor" href="#查看磁盘占用空间" aria-label="Permalink to &quot;查看磁盘占用空间&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">df -h</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">df -h</span></span></code></pre></div><h5 id="查看具体占用文件" tabindex="-1">查看具体占用文件 <a class="header-anchor" href="#查看具体占用文件" aria-label="Permalink to &quot;查看具体占用文件&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//cd到root路径下</span></span>
<span class="line"><span style="color:#E1E4E8;">du -sh *</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//cd到root路径下</span></span>
<span class="line"><span style="color:#24292E;">du -sh *</span></span></code></pre></div><h5 id="查看网络情况" tabindex="-1">查看网络情况 <a class="header-anchor" href="#查看网络情况" aria-label="Permalink to &quot;查看网络情况&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ifconfig</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ifconfig</span></span></code></pre></div><h4 id="日志相关" tabindex="-1">日志相关 <a class="header-anchor" href="#日志相关" aria-label="Permalink to &quot;日志相关&quot;">​</a></h4><h5 id="查看实时日志指定关键字及高亮显示" tabindex="-1">查看实时日志指定关键字及高亮显示 <a class="header-anchor" href="#查看实时日志指定关键字及高亮显示" aria-label="Permalink to &quot;查看实时日志指定关键字及高亮显示&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//如果不需要指定行数就删除-A3 </span></span>
<span class="line"><span style="color:#E1E4E8;">tail -f 日志文本名 | grep &#39;关键字&#39; --color=auto -A</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">   </span><span style="color:#6A737D;">//-A3是关键字下3行</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//如果不需要指定行数就删除-A3 </span></span>
<span class="line"><span style="color:#24292E;">tail -f 日志文本名 | grep &#39;关键字&#39; --color=auto -A</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">   </span><span style="color:#6A737D;">//-A3是关键字下3行</span></span></code></pre></div><h5 id="按照行号查询" tabindex="-1">按照行号查询 <a class="header-anchor" href="#按照行号查询" aria-label="Permalink to &quot;按照行号查询&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">cat -n 日志文本名.log |grep </span><span style="color:#9ECBFF;">&quot;关键字&quot;</span><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">//过滤出关键字附近的日志</span></span>
<span class="line"><span style="color:#E1E4E8;">head -n </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//查看查询结果里的向前20条记录</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">cat -n 日志文本名.log |grep </span><span style="color:#032F62;">&quot;关键字&quot;</span><span style="color:#24292E;">	</span><span style="color:#6A737D;">//过滤出关键字附近的日志</span></span>
<span class="line"><span style="color:#24292E;">head -n </span><span style="color:#005CC5;">20</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//查看查询结果里的向前20条记录</span></span></code></pre></div><h5 id="按照时间日期查询" tabindex="-1">按照时间日期查询 <a class="header-anchor" href="#按照时间日期查询" aria-label="Permalink to &quot;按照时间日期查询&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//日期一定要在日志中有才能查出记录</span></span>
<span class="line"><span style="color:#E1E4E8;">sed -n &#39;/</span><span style="color:#79B8FF;">2021-02-26</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">00</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">45</span><span style="color:#E1E4E8;">/,/</span><span style="color:#79B8FF;">2021-02-26</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">01</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">00</span><span style="color:#E1E4E8;">/p&#39; xxx.log</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//日期一定要在日志中有才能查出记录</span></span>
<span class="line"><span style="color:#24292E;">sed -n &#39;/</span><span style="color:#005CC5;">2021-02-26</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">00</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">45</span><span style="color:#24292E;">/,/</span><span style="color:#005CC5;">2021-02-26</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">01</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">00</span><span style="color:#24292E;">/p&#39; xxx.log</span></span></code></pre></div><h5 id="按照时间查询日志并过滤关键字并高亮显示并过滤行" tabindex="-1">按照时间查询日志并过滤关键字并高亮显示并过滤行 <a class="header-anchor" href="#按照时间查询日志并过滤关键字并高亮显示并过滤行" aria-label="Permalink to &quot;按照时间查询日志并过滤关键字并高亮显示并过滤行&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//日期一定要在日志中有才能查出记录</span></span>
<span class="line"><span style="color:#E1E4E8;">sed -n &#39;/</span><span style="color:#79B8FF;">2020-03-28</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">39</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">08</span><span style="color:#E1E4E8;">/,/</span><span style="color:#79B8FF;">2020-03-28</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">41</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">59</span><span style="color:#E1E4E8;">/p&#39; service.out | grep </span><span style="color:#9ECBFF;">&quot;关键字&quot;</span><span style="color:#E1E4E8;"> --color=auto</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//日期一定要在日志中有才能查出记录</span></span>
<span class="line"><span style="color:#24292E;">sed -n &#39;/</span><span style="color:#005CC5;">2020-03-28</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">39</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">08</span><span style="color:#24292E;">/,/</span><span style="color:#005CC5;">2020-03-28</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">41</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">59</span><span style="color:#24292E;">/p&#39; service.out | grep </span><span style="color:#032F62;">&quot;关键字&quot;</span><span style="color:#24292E;"> --color=auto</span></span></code></pre></div><h4 id="查找文件" tabindex="-1">查找文件 <a class="header-anchor" href="#查找文件" aria-label="Permalink to &quot;查找文件&quot;">​</a></h4><h5 id="find文件查找" tabindex="-1">find文件查找 <a class="header-anchor" href="#find文件查找" aria-label="Permalink to &quot;find文件查找&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">find 路径 -name </span><span style="color:#9ECBFF;">&quot;*.java&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">find 路径 -name </span><span style="color:#032F62;">&quot;*.java&quot;</span></span></code></pre></div><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">find 路径 -type f | grep profile</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">find 路径 -type f | grep profile</span></span></code></pre></div><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">.查找txt和pdf文件</span></span>
<span class="line"><span style="color:#E1E4E8;">	find . (-name </span><span style="color:#9ECBFF;">&quot;*.txt&quot;</span><span style="color:#E1E4E8;"> -o -name </span><span style="color:#9ECBFF;">&quot;*.pdf&quot;</span><span style="color:#E1E4E8;">) -print</span></span>
<span class="line"><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">.正则方式查找.txt和pdf</span></span>
<span class="line"><span style="color:#E1E4E8;">	find . -regex </span><span style="color:#9ECBFF;">&quot;.*(.txt|.pdf)$&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">		-iregex：忽略大小写的正则</span></span>
<span class="line"><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">.否定参数-查找所有非txt文本</span></span>
<span class="line"><span style="color:#E1E4E8;">	find . ! -name </span><span style="color:#9ECBFF;">&quot;*.txt&quot;</span><span style="color:#E1E4E8;"> -print</span></span>
<span class="line"><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">.指定搜索深度-打印出当前目录的文件（深度为</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">）</span></span>
<span class="line"><span style="color:#E1E4E8;">	find . -maxdepth </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> -type f</span></span>
<span class="line"><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">.定制搜索</span></span>
<span class="line"><span style="color:#E1E4E8;">	按类型搜索：</span></span>
<span class="line"><span style="color:#E1E4E8;">		find . -type d -print </span><span style="color:#6A737D;">//只列出所有目录</span></span>
<span class="line"><span style="color:#E1E4E8;">			-type f 文件 / l 符号链接</span></span>
<span class="line"><span style="color:#E1E4E8;">	按时间搜索：</span></span>
<span class="line"><span style="color:#E1E4E8;">			-atime 访问时间 (单位是天，分钟单位则是-amin，以下类似）</span></span>
<span class="line"><span style="color:#E1E4E8;">			-mtime 修改时间 （内容被修改）</span></span>
<span class="line"><span style="color:#E1E4E8;">			-ctime 变化时间 （元数据或权限变化）</span></span>
<span class="line"><span style="color:#E1E4E8;">				最近</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">天被访问过的所有文件：</span></span>
<span class="line"><span style="color:#E1E4E8;">					find . -atime </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;"> -type f -print</span></span>
<span class="line"><span style="color:#E1E4E8;">	按大小搜索：</span></span>
<span class="line"><span style="color:#E1E4E8;">		寻找大于</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">k/</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">M/</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">G的文件</span></span>
<span class="line"><span style="color:#E1E4E8;">			find . -type f -size +</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">k[</span><span style="color:#79B8FF;">2</span><span style="color:#FDAEB7;font-style:italic;">M</span><span style="color:#E1E4E8;">][</span><span style="color:#79B8FF;">2</span><span style="color:#FDAEB7;font-style:italic;">G</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">	按权限查找：</span></span>
<span class="line"><span style="color:#E1E4E8;">			find . -type f -perm </span><span style="color:#79B8FF;">644</span><span style="color:#E1E4E8;"> -print </span><span style="color:#6A737D;">//找具有可执行权限的所有文件</span></span>
<span class="line"><span style="color:#E1E4E8;">	按用户查找：</span></span>
<span class="line"><span style="color:#E1E4E8;">			find . -type f -user weber -print</span><span style="color:#6A737D;">// 找用户weber所拥有的文件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">.后续动作</span></span>
<span class="line"><span style="color:#E1E4E8;">	删除：</span></span>
<span class="line"><span style="color:#E1E4E8;">		删除当前目录下所有的swp文件：</span></span>
<span class="line"><span style="color:#E1E4E8;">			find . -type f -name </span><span style="color:#9ECBFF;">&quot;*.swp&quot;</span><span style="color:#E1E4E8;"> -delete</span></span>
<span class="line"><span style="color:#E1E4E8;">	执行动作（exec）</span></span>
<span class="line"><span style="color:#E1E4E8;">		find . -type f -user root -exec chown</span></span>
<span class="line"><span style="color:#E1E4E8;">			weber {} ; </span><span style="color:#6A737D;">//将当前目录下的所有权变更为weber</span></span>
<span class="line"><span style="color:#E1E4E8;">				注：{}是一个特殊的字符串，对于每一个匹配的文件，{}会被替换成相应的文件名；</span></span>
<span class="line"><span style="color:#E1E4E8;">		eg：将找到的文件全都copy到另一个目录：</span></span>
<span class="line"><span style="color:#E1E4E8;">			find . -type f -mtime +</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> -name </span><span style="color:#9ECBFF;">&quot;*.txt&quot;</span><span style="color:#E1E4E8;">-exec cp {} OLD ;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">1</span><span style="color:#24292E;">.查找txt和pdf文件</span></span>
<span class="line"><span style="color:#24292E;">	find . (-name </span><span style="color:#032F62;">&quot;*.txt&quot;</span><span style="color:#24292E;"> -o -name </span><span style="color:#032F62;">&quot;*.pdf&quot;</span><span style="color:#24292E;">) -print</span></span>
<span class="line"><span style="color:#005CC5;">2</span><span style="color:#24292E;">.正则方式查找.txt和pdf</span></span>
<span class="line"><span style="color:#24292E;">	find . -regex </span><span style="color:#032F62;">&quot;.*(.txt|.pdf)$&quot;</span></span>
<span class="line"><span style="color:#24292E;">		-iregex：忽略大小写的正则</span></span>
<span class="line"><span style="color:#005CC5;">3</span><span style="color:#24292E;">.否定参数-查找所有非txt文本</span></span>
<span class="line"><span style="color:#24292E;">	find . ! -name </span><span style="color:#032F62;">&quot;*.txt&quot;</span><span style="color:#24292E;"> -print</span></span>
<span class="line"><span style="color:#005CC5;">4</span><span style="color:#24292E;">.指定搜索深度-打印出当前目录的文件（深度为</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">）</span></span>
<span class="line"><span style="color:#24292E;">	find . -maxdepth </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> -type f</span></span>
<span class="line"><span style="color:#005CC5;">5</span><span style="color:#24292E;">.定制搜索</span></span>
<span class="line"><span style="color:#24292E;">	按类型搜索：</span></span>
<span class="line"><span style="color:#24292E;">		find . -type d -print </span><span style="color:#6A737D;">//只列出所有目录</span></span>
<span class="line"><span style="color:#24292E;">			-type f 文件 / l 符号链接</span></span>
<span class="line"><span style="color:#24292E;">	按时间搜索：</span></span>
<span class="line"><span style="color:#24292E;">			-atime 访问时间 (单位是天，分钟单位则是-amin，以下类似）</span></span>
<span class="line"><span style="color:#24292E;">			-mtime 修改时间 （内容被修改）</span></span>
<span class="line"><span style="color:#24292E;">			-ctime 变化时间 （元数据或权限变化）</span></span>
<span class="line"><span style="color:#24292E;">				最近</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">天被访问过的所有文件：</span></span>
<span class="line"><span style="color:#24292E;">					find . -atime </span><span style="color:#005CC5;">7</span><span style="color:#24292E;"> -type f -print</span></span>
<span class="line"><span style="color:#24292E;">	按大小搜索：</span></span>
<span class="line"><span style="color:#24292E;">		寻找大于</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">k/</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">M/</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">G的文件</span></span>
<span class="line"><span style="color:#24292E;">			find . -type f -size +</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">k[</span><span style="color:#005CC5;">2</span><span style="color:#B31D28;font-style:italic;">M</span><span style="color:#24292E;">][</span><span style="color:#005CC5;">2</span><span style="color:#B31D28;font-style:italic;">G</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">	按权限查找：</span></span>
<span class="line"><span style="color:#24292E;">			find . -type f -perm </span><span style="color:#005CC5;">644</span><span style="color:#24292E;"> -print </span><span style="color:#6A737D;">//找具有可执行权限的所有文件</span></span>
<span class="line"><span style="color:#24292E;">	按用户查找：</span></span>
<span class="line"><span style="color:#24292E;">			find . -type f -user weber -print</span><span style="color:#6A737D;">// 找用户weber所拥有的文件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">6</span><span style="color:#24292E;">.后续动作</span></span>
<span class="line"><span style="color:#24292E;">	删除：</span></span>
<span class="line"><span style="color:#24292E;">		删除当前目录下所有的swp文件：</span></span>
<span class="line"><span style="color:#24292E;">			find . -type f -name </span><span style="color:#032F62;">&quot;*.swp&quot;</span><span style="color:#24292E;"> -delete</span></span>
<span class="line"><span style="color:#24292E;">	执行动作（exec）</span></span>
<span class="line"><span style="color:#24292E;">		find . -type f -user root -exec chown</span></span>
<span class="line"><span style="color:#24292E;">			weber {} ; </span><span style="color:#6A737D;">//将当前目录下的所有权变更为weber</span></span>
<span class="line"><span style="color:#24292E;">				注：{}是一个特殊的字符串，对于每一个匹配的文件，{}会被替换成相应的文件名；</span></span>
<span class="line"><span style="color:#24292E;">		eg：将找到的文件全都copy到另一个目录：</span></span>
<span class="line"><span style="color:#24292E;">			find . -type f -mtime +</span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> -name </span><span style="color:#032F62;">&quot;*.txt&quot;</span><span style="color:#24292E;">-exec cp {} OLD ;</span></span></code></pre></div><h5 id="grep文本搜索" tabindex="-1">grep文本搜索 <a class="header-anchor" href="#grep文本搜索" aria-label="Permalink to &quot;grep文本搜索&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">grep match_patten file </span><span style="color:#6A737D;">// 默认访问匹配行</span></span>
<span class="line"><span style="color:#E1E4E8;">    常用参数:</span></span>
<span class="line"><span style="color:#E1E4E8;">      -o 只输出匹配的文本行 VS -v 只输出没有匹配的文本行</span></span>
<span class="line"><span style="color:#E1E4E8;">      -c 统计文件中包含文本的次数</span></span>
<span class="line"><span style="color:#E1E4E8;">grep -c </span><span style="color:#9ECBFF;">&quot;text&quot;</span><span style="color:#E1E4E8;"> filename</span></span>
<span class="line"><span style="color:#E1E4E8;">    -n 打印匹配的行号</span></span>
<span class="line"><span style="color:#E1E4E8;">    -i 搜索时忽略大小写</span></span>
<span class="line"><span style="color:#E1E4E8;">    -l 只打印文件名</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">.在多级目录中对文本递归搜索(程序员搜代码的最爱）：</span></span>
<span class="line"><span style="color:#E1E4E8;">  	grep </span><span style="color:#9ECBFF;">&quot;class&quot;</span><span style="color:#E1E4E8;"> . -R -n</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">.匹配多个模式</span></span>
<span class="line"><span style="color:#E1E4E8;">  	grep -e </span><span style="color:#9ECBFF;">&quot;class&quot;</span><span style="color:#E1E4E8;"> -e </span><span style="color:#9ECBFF;">&quot;vitural&quot;</span><span style="color:#E1E4E8;"> file</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">.grep输出以作为结尾符的文件名：（-z）</span></span>
<span class="line"><span style="color:#E1E4E8;">  	grep </span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;"> file* -lZ| xargs </span><span style="color:#79B8FF;">-0</span><span style="color:#E1E4E8;"> rm</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">grep match_patten file </span><span style="color:#6A737D;">// 默认访问匹配行</span></span>
<span class="line"><span style="color:#24292E;">    常用参数:</span></span>
<span class="line"><span style="color:#24292E;">      -o 只输出匹配的文本行 VS -v 只输出没有匹配的文本行</span></span>
<span class="line"><span style="color:#24292E;">      -c 统计文件中包含文本的次数</span></span>
<span class="line"><span style="color:#24292E;">grep -c </span><span style="color:#032F62;">&quot;text&quot;</span><span style="color:#24292E;"> filename</span></span>
<span class="line"><span style="color:#24292E;">    -n 打印匹配的行号</span></span>
<span class="line"><span style="color:#24292E;">    -i 搜索时忽略大小写</span></span>
<span class="line"><span style="color:#24292E;">    -l 只打印文件名</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">.在多级目录中对文本递归搜索(程序员搜代码的最爱）：</span></span>
<span class="line"><span style="color:#24292E;">  	grep </span><span style="color:#032F62;">&quot;class&quot;</span><span style="color:#24292E;"> . -R -n</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">.匹配多个模式</span></span>
<span class="line"><span style="color:#24292E;">  	grep -e </span><span style="color:#032F62;">&quot;class&quot;</span><span style="color:#24292E;"> -e </span><span style="color:#032F62;">&quot;vitural&quot;</span><span style="color:#24292E;"> file</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">.grep输出以作为结尾符的文件名：（-z）</span></span>
<span class="line"><span style="color:#24292E;">  	grep </span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;"> file* -lZ| xargs </span><span style="color:#005CC5;">-0</span><span style="color:#24292E;"> rm</span></span></code></pre></div><h4 id="文本操作" tabindex="-1">文本操作 <a class="header-anchor" href="#文本操作" aria-label="Permalink to &quot;文本操作&quot;">​</a></h4><h5 id="查找命令" tabindex="-1">查找命令 <a class="header-anchor" href="#查找命令" aria-label="Permalink to &quot;查找命令&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">/text 查找 text，按 n 查找下一个，按 N 查找前一个</span></span>
<span class="line"><span style="color:#E1E4E8;">?text 反向查找 text，按 n 查找下一个，按 N 查找前一个</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">查找很长的词，键入麻烦，可以将光标移动到该词上</span></span>
<span class="line"><span style="color:#E1E4E8;">按 * 就该单词进行搜索，相当于 / 搜索。而 &#39;#&#39;命令相当于 ? 搜索</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">Ctrl + e 向下滚动一行</span></span>
<span class="line"><span style="color:#E1E4E8;">Ctrl + y 向上滚动一行</span></span>
<span class="line"><span style="color:#E1E4E8;">Ctrl + d 向下滚动半屏</span></span>
<span class="line"><span style="color:#E1E4E8;">Ctrl + u 向上滚动半屏</span></span>
<span class="line"><span style="color:#E1E4E8;">Ctrl + f 向下滚动一屏</span></span>
<span class="line"><span style="color:#E1E4E8;">Ctrl + b 向上滚动一屏</span></span>
<span class="line"><span style="color:#E1E4E8;">yy 拷贝当前行</span></span>
<span class="line"><span style="color:#E1E4E8;">shift+p 在当前行前粘贴</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">/text 查找 text，按 n 查找下一个，按 N 查找前一个</span></span>
<span class="line"><span style="color:#24292E;">?text 反向查找 text，按 n 查找下一个，按 N 查找前一个</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">查找很长的词，键入麻烦，可以将光标移动到该词上</span></span>
<span class="line"><span style="color:#24292E;">按 * 就该单词进行搜索，相当于 / 搜索。而 &#39;#&#39;命令相当于 ? 搜索</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Ctrl + e 向下滚动一行</span></span>
<span class="line"><span style="color:#24292E;">Ctrl + y 向上滚动一行</span></span>
<span class="line"><span style="color:#24292E;">Ctrl + d 向下滚动半屏</span></span>
<span class="line"><span style="color:#24292E;">Ctrl + u 向上滚动半屏</span></span>
<span class="line"><span style="color:#24292E;">Ctrl + f 向下滚动一屏</span></span>
<span class="line"><span style="color:#24292E;">Ctrl + b 向上滚动一屏</span></span>
<span class="line"><span style="color:#24292E;">yy 拷贝当前行</span></span>
<span class="line"><span style="color:#24292E;">shift+p 在当前行前粘贴</span></span></code></pre></div><h5 id="退出命令" tabindex="-1">退出命令 <a class="header-anchor" href="#退出命令" aria-label="Permalink to &quot;退出命令&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">:wq 保存并退出</span></span>
<span class="line"><span style="color:#E1E4E8;">ZZ 保存并退出</span></span>
<span class="line"><span style="color:#E1E4E8;">:q! 强制退出并忽略所有更改</span></span>
<span class="line"><span style="color:#E1E4E8;">:e! 放弃所有修改，并打开原来文件。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">:wq 保存并退出</span></span>
<span class="line"><span style="color:#24292E;">ZZ 保存并退出</span></span>
<span class="line"><span style="color:#24292E;">:q! 强制退出并忽略所有更改</span></span>
<span class="line"><span style="color:#24292E;">:e! 放弃所有修改，并打开原来文件。</span></span></code></pre></div>`,70),e=[o];function t(c,r,i,E,y,d){return a(),n("div",null,e)}const g=s(p,[["render",t]]);export{h as __pageData,g as default};
