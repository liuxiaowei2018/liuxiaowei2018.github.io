import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.8048b864.js";const p="/assets/image-20220103160519462.d89a69d8.png",h=JSON.parse('{"title":"sa-token","description":"","frontmatter":{},"headers":[],"relativePath":"second/authority/saToken.md","filePath":"second/authority/saToken.md","lastUpdated":1697785485000}'),o={name:"second/authority/saToken.md"},e=l('<h1 id="sa-token" tabindex="-1">sa-token <a class="header-anchor" href="#sa-token" aria-label="Permalink to &quot;sa-token&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#_1、sa-token入门">1、sa-token入门</a><ul><li><a href="#sa-token-能做什么">Sa-Token 能做什么？</a></li><li><a href="#代码示例">代码示例</a></li></ul></li></ul></nav><h2 id="_1、sa-token入门" tabindex="-1">1、sa-token入门 <a class="header-anchor" href="#_1、sa-token入门" aria-label="Permalink to &quot;1、sa-token入门&quot;">​</a></h2><blockquote><p>sa-token官网地址：<a href="https://sa-token.dev33.cn/doc/index.html#/" target="_blank" rel="noreferrer">https://sa-token.dev33.cn/doc/index.html#/</a></p></blockquote><p><img src="'+p+`" alt="image-20220103160519462"></p><p>sa-token是一个轻量级Java权限认证框架，主要解决：登录认证、权限认证、Session会话、单点登录、OAuth2.0 等一系列权限相关问题</p><p>框架针对踢人下线、自动续签、前后台分离、分布式会话……等常见业务进行N多适配，通过sa-token，可以以一种极简的方式实现系统的权限认证部分</p><p>与其它权限认证框架相比，sa-token 具有以下优势：</p><ol><li>简单 ：可零配置启动框架，真正的开箱即用，低成本上手</li><li>强大 ：目前已集成几十项权限相关特性，涵盖了大部分业务场景的解决方案</li><li>易用 ：如丝般顺滑的API调用，大量高级特性统统只需一行代码即可实现</li><li>高扩展 ：几乎所有组件都提供了扩展接口，90%以上的逻辑都可以按需重写</li></ol><h3 id="sa-token-能做什么" tabindex="-1">Sa-Token 能做什么？ <a class="header-anchor" href="#sa-token-能做什么" aria-label="Permalink to &quot;Sa-Token 能做什么？&quot;">​</a></h3><ul><li><p>登录验证 —— 轻松登录鉴权，并提供五种细分场景值</p></li><li><p>权限验证 —— 适配RBAC权限模型，不同角色不同授权</p></li><li><p>Session会话 —— 专业的数据缓存中心</p></li><li><p>踢人下线 —— 将违规用户立刻清退下线</p></li><li><p>持久层扩展 —— 可集成Redis、Memcached等专业缓存中间件，重启数据不丢失</p></li><li><p>分布式会话 —— 提供jwt集成和共享数据中心两种分布式会话方案</p></li><li><p>单点登录 —— 一处登录，处处通行</p></li><li><p>模拟他人账号 —— 实时操作任意用户状态数据</p></li><li><p>临时身份切换 —— 将会话身份临时切换为其它账号</p></li><li><p>无Cookie模式 —— APP、小程序等前后台分离场景</p></li><li><p>同端互斥登录 —— 像QQ一样手机电脑同时在线，但是两个手机上互斥登录</p></li><li><p>多账号认证体系 —— 比如一个商城项目的user表和admin表分开鉴权</p></li><li><p>花式token生成 —— 内置六种token风格，还可自定义token生成策略</p></li><li><p>注解式鉴权 —— 优雅的将鉴权与业务代码分离</p></li><li><p>路由拦截式鉴权 —— 根据路由拦截鉴权，可适配restful模式</p></li><li><p>自动续签 —— 提供两种token过期策略，灵活搭配使用，还可自动续签</p></li><li><p>会话治理 —— 提供方便灵活的会话查询接口</p></li><li><p>组件自动注入 —— 零配置与Spring等框架集成</p></li></ul><h3 id="代码示例" tabindex="-1">代码示例 <a class="header-anchor" href="#代码示例" aria-label="Permalink to &quot;代码示例&quot;">​</a></h3><blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 在登录时写入当前会话的账号id</span></span>
<span class="line"><span style="color:#E1E4E8;">StpUtil.</span><span style="color:#B392F0;">setLoginId</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10001</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 然后在任意需要校验登录处调用以下API</span></span>
<span class="line"><span style="color:#6A737D;">// 如果当前会话未登录，这句代码会抛出 \`NotLoginException\`异常</span></span>
<span class="line"><span style="color:#E1E4E8;">StpUtil.</span><span style="color:#B392F0;">checkLogin</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 在登录时写入当前会话的账号id</span></span>
<span class="line"><span style="color:#24292E;">StpUtil.</span><span style="color:#6F42C1;">setLoginId</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10001</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 然后在任意需要校验登录处调用以下API</span></span>
<span class="line"><span style="color:#6A737D;">// 如果当前会话未登录，这句代码会抛出 \`NotLoginException\`异常</span></span>
<span class="line"><span style="color:#24292E;">StpUtil.</span><span style="color:#6F42C1;">checkLogin</span><span style="color:#24292E;">();</span></span></code></pre></div><p>权限认证示例 (只有具有user:add权限的会话才可以进入请求)</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">SaCheckPermission</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;user:add&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">RequestMapping</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/user/insert&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">insert</span><span style="color:#E1E4E8;">(SysUser user) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;用户增加&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">SaCheckPermission</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;user:add&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">RequestMapping</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/user/insert&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">insert</span><span style="color:#24292E;">(SysUser user) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;用户增加&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>将某个账号踢下线 (待到对方再次访问系统时会抛出<code>NotLoginException</code>异常)</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 使账号id为10001的会话注销登录</span></span>
<span class="line"><span style="color:#E1E4E8;">StpUtil.</span><span style="color:#B392F0;">logoutByLoginId</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10001</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 使账号id为10001的会话注销登录</span></span>
<span class="line"><span style="color:#24292E;">StpUtil.</span><span style="color:#6F42C1;">logoutByLoginId</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10001</span><span style="color:#24292E;">);</span></span></code></pre></div><p>一行代码完成以下功能：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">StpUtil.</span><span style="color:#B392F0;">setLoginId</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10001</span><span style="color:#E1E4E8;">);                </span><span style="color:#6A737D;">// 标记当前会话登录的账号id</span></span>
<span class="line"><span style="color:#E1E4E8;">StpUtil.</span><span style="color:#B392F0;">getLoginId</span><span style="color:#E1E4E8;">();                     </span><span style="color:#6A737D;">// 获取当前会话登录的账号id</span></span>
<span class="line"><span style="color:#E1E4E8;">StpUtil.</span><span style="color:#B392F0;">isLogin</span><span style="color:#E1E4E8;">();                        </span><span style="color:#6A737D;">// 获取当前会话是否已经登录, 返回true或false</span></span>
<span class="line"><span style="color:#E1E4E8;">StpUtil.</span><span style="color:#B392F0;">logout</span><span style="color:#E1E4E8;">();                         </span><span style="color:#6A737D;">// 当前会话注销登录</span></span>
<span class="line"><span style="color:#E1E4E8;">StpUtil.</span><span style="color:#B392F0;">logoutByLoginId</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10001</span><span style="color:#E1E4E8;">);           </span><span style="color:#6A737D;">// 让账号为10001的会话注销登录（踢人下线）</span></span>
<span class="line"><span style="color:#E1E4E8;">StpUtil.</span><span style="color:#B392F0;">hasRole</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;super-admin&quot;</span><span style="color:#E1E4E8;">);           </span><span style="color:#6A737D;">// 查询当前账号是否含有指定角色标识, 返回true或false</span></span>
<span class="line"><span style="color:#E1E4E8;">StpUtil.</span><span style="color:#B392F0;">hasPermission</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;user:add&quot;</span><span style="color:#E1E4E8;">);        </span><span style="color:#6A737D;">// 查询当前账号是否含有指定权限, 返回true或false</span></span>
<span class="line"><span style="color:#E1E4E8;">StpUtil.</span><span style="color:#B392F0;">getSession</span><span style="color:#E1E4E8;">();                     </span><span style="color:#6A737D;">// 获取当前账号id的Session</span></span>
<span class="line"><span style="color:#E1E4E8;">StpUtil.</span><span style="color:#B392F0;">getSessionByLoginId</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10001</span><span style="color:#E1E4E8;">);       </span><span style="color:#6A737D;">// 获取账号id为10001的Session</span></span>
<span class="line"><span style="color:#E1E4E8;">StpUtil.</span><span style="color:#B392F0;">getTokenValueByLoginId</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10001</span><span style="color:#E1E4E8;">);    </span><span style="color:#6A737D;">// 获取账号id为10001的token令牌值</span></span>
<span class="line"><span style="color:#E1E4E8;">StpUtil.</span><span style="color:#B392F0;">setLoginId</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10001</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;PC&quot;</span><span style="color:#E1E4E8;">);          </span><span style="color:#6A737D;">// 指定设备标识登录</span></span>
<span class="line"><span style="color:#E1E4E8;">StpUtil.</span><span style="color:#B392F0;">logoutByLoginId</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10001</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;PC&quot;</span><span style="color:#E1E4E8;">);     </span><span style="color:#6A737D;">// 指定设备标识进行强制注销 (不同端不受影响)</span></span>
<span class="line"><span style="color:#E1E4E8;">StpUtil.</span><span style="color:#B392F0;">switchTo</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10044</span><span style="color:#E1E4E8;">);                  </span><span style="color:#6A737D;">// 将当前会话身份临时切换为其它账号</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">StpUtil.</span><span style="color:#6F42C1;">setLoginId</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10001</span><span style="color:#24292E;">);                </span><span style="color:#6A737D;">// 标记当前会话登录的账号id</span></span>
<span class="line"><span style="color:#24292E;">StpUtil.</span><span style="color:#6F42C1;">getLoginId</span><span style="color:#24292E;">();                     </span><span style="color:#6A737D;">// 获取当前会话登录的账号id</span></span>
<span class="line"><span style="color:#24292E;">StpUtil.</span><span style="color:#6F42C1;">isLogin</span><span style="color:#24292E;">();                        </span><span style="color:#6A737D;">// 获取当前会话是否已经登录, 返回true或false</span></span>
<span class="line"><span style="color:#24292E;">StpUtil.</span><span style="color:#6F42C1;">logout</span><span style="color:#24292E;">();                         </span><span style="color:#6A737D;">// 当前会话注销登录</span></span>
<span class="line"><span style="color:#24292E;">StpUtil.</span><span style="color:#6F42C1;">logoutByLoginId</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10001</span><span style="color:#24292E;">);           </span><span style="color:#6A737D;">// 让账号为10001的会话注销登录（踢人下线）</span></span>
<span class="line"><span style="color:#24292E;">StpUtil.</span><span style="color:#6F42C1;">hasRole</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;super-admin&quot;</span><span style="color:#24292E;">);           </span><span style="color:#6A737D;">// 查询当前账号是否含有指定角色标识, 返回true或false</span></span>
<span class="line"><span style="color:#24292E;">StpUtil.</span><span style="color:#6F42C1;">hasPermission</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;user:add&quot;</span><span style="color:#24292E;">);        </span><span style="color:#6A737D;">// 查询当前账号是否含有指定权限, 返回true或false</span></span>
<span class="line"><span style="color:#24292E;">StpUtil.</span><span style="color:#6F42C1;">getSession</span><span style="color:#24292E;">();                     </span><span style="color:#6A737D;">// 获取当前账号id的Session</span></span>
<span class="line"><span style="color:#24292E;">StpUtil.</span><span style="color:#6F42C1;">getSessionByLoginId</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10001</span><span style="color:#24292E;">);       </span><span style="color:#6A737D;">// 获取账号id为10001的Session</span></span>
<span class="line"><span style="color:#24292E;">StpUtil.</span><span style="color:#6F42C1;">getTokenValueByLoginId</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10001</span><span style="color:#24292E;">);    </span><span style="color:#6A737D;">// 获取账号id为10001的token令牌值</span></span>
<span class="line"><span style="color:#24292E;">StpUtil.</span><span style="color:#6F42C1;">setLoginId</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10001</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;PC&quot;</span><span style="color:#24292E;">);          </span><span style="color:#6A737D;">// 指定设备标识登录</span></span>
<span class="line"><span style="color:#24292E;">StpUtil.</span><span style="color:#6F42C1;">logoutByLoginId</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10001</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;PC&quot;</span><span style="color:#24292E;">);     </span><span style="color:#6A737D;">// 指定设备标识进行强制注销 (不同端不受影响)</span></span>
<span class="line"><span style="color:#24292E;">StpUtil.</span><span style="color:#6F42C1;">switchTo</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10044</span><span style="color:#24292E;">);                  </span><span style="color:#6A737D;">// 将当前会话身份临时切换为其它账号</span></span></code></pre></div></blockquote>`,13),t=[e];function c(r,i,y,E,d,u){return a(),n("div",null,t)}const F=s(o,[["render",c]]);export{h as __pageData,F as default};
