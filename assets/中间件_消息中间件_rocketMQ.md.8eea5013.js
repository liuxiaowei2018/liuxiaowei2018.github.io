import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.8048b864.js";const m=JSON.parse('{"title":"RocketMQ","description":"","frontmatter":{},"headers":[],"relativePath":"中间件/消息中间件/rocketMQ.md","filePath":"中间件/消息中间件/rocketMQ.md","lastUpdated":null}'),p={name:"中间件/消息中间件/rocketMQ.md"},o=l(`<h1 id="rocketmq" tabindex="-1">RocketMQ <a class="header-anchor" href="#rocketmq" aria-label="Permalink to &quot;RocketMQ&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#_1、rocketmq应用">1、RocketMQ应用</a><ul><li><a href="#rocketmq安装">RocketMQ安装</a></li><li><a href="#rocketmq使用">RocketMQ使用</a></li></ul></li><li><a href="#_2、rocketmq扩展">2、RocketMQ扩展</a><ul><li><a href="#rocketmq组件">RocketMQ组件</a></li><li><a href="#rocketmq延时消息">RocketMQ延时消息</a></li><li><a href="#rocketmq顺序消息">RocketMQ顺序消息</a></li><li><a href="#rocketmq事务消息">RocketMQ事务消息</a></li><li><a href="#rocketmq消息机制">RocketMQ消息机制</a></li></ul></li></ul></nav><h2 id="_1、rocketmq应用" tabindex="-1">1、RocketMQ应用 <a class="header-anchor" href="#_1、rocketmq应用" aria-label="Permalink to &quot;1、RocketMQ应用&quot;">​</a></h2><h3 id="rocketmq安装" tabindex="-1">RocketMQ安装 <a class="header-anchor" href="#rocketmq安装" aria-label="Permalink to &quot;RocketMQ安装&quot;">​</a></h3><h4 id="docker部署" tabindex="-1">Docker部署 <a class="header-anchor" href="#docker部署" aria-label="Permalink to &quot;Docker部署&quot;">​</a></h4><blockquote><p><code>docker-compose.yml</code>同级下面相应的建立三个文件夹<code>conf</code>、<code>logs</code>、<code>store</code></p><p><code>conf</code>文件夹下面建立<code>broker.conf</code>配置文件，所有文件的目录位置如下:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">docker-compose.yml</span></span>
<span class="line"><span style="color:#e1e4e8;">conf</span></span>
<span class="line"><span style="color:#e1e4e8;">- broker.conf</span></span>
<span class="line"><span style="color:#e1e4e8;">logs</span></span>
<span class="line"><span style="color:#e1e4e8;">store</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">docker-compose.yml</span></span>
<span class="line"><span style="color:#24292e;">conf</span></span>
<span class="line"><span style="color:#24292e;">- broker.conf</span></span>
<span class="line"><span style="color:#24292e;">logs</span></span>
<span class="line"><span style="color:#24292e;">store</span></span></code></pre></div><p><code>broker.conf</code></p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"># 所属集群名字</span></span>
<span class="line"><span style="color:#E1E4E8;">brokerClusterName=DefaultCluster</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># broker 名字，注意此处不同的配置文件填写的不一样，如果在 broker-a.properties 使用: broker-a,</span></span>
<span class="line"><span style="color:#E1E4E8;"># 在 broker-b.properties 使用: broker-b</span></span>
<span class="line"><span style="color:#E1E4E8;">brokerName=broker-a</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 0 表示 Master，</span><span style="color:#79B8FF;">&amp;gt;</span><span style="color:#E1E4E8;"> 0 表示 Slave</span></span>
<span class="line"><span style="color:#E1E4E8;">brokerId=0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># nameServer地址，分号分割</span></span>
<span class="line"><span style="color:#E1E4E8;"># namesrvAddr=rocketmq-nameserver1:9876;rocketmq-nameserver2:9876</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 启动IP,如果 docker 报 com.alibaba.rocketmq.remoting.exception.RemotingConnectException: connect to failed</span></span>
<span class="line"><span style="color:#E1E4E8;"># 解决方式1 加上一句 producer.setVipChannelEnabled(false);，解决方式2brokerIP1 设置宿主机IP，不要使用docker内部IP</span></span>
<span class="line"><span style="color:#E1E4E8;">brokerIP1=192.168.1.16 #本机的ip</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span></span>
<span class="line"><span style="color:#E1E4E8;">defaultTopicQueueNums=4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 是否允许 Broker 自动创建 Topic，建议线下开启，线上关闭 ！！！这里仔细看是 false，false，false</span></span>
<span class="line"><span style="color:#E1E4E8;">autoCreateTopicEnable=true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span></span>
<span class="line"><span style="color:#E1E4E8;">autoCreateSubscriptionGroup=true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># Broker 对外服务的监听端口</span></span>
<span class="line"><span style="color:#E1E4E8;">listenPort=10911</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 删除文件时间点，默认凌晨4点</span></span>
<span class="line"><span style="color:#E1E4E8;">deleteWhen=04</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 文件保留时间，默认48小时</span></span>
<span class="line"><span style="color:#E1E4E8;">fileReservedTime=120</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># commitLog 每个文件的大小默认1G</span></span>
<span class="line"><span style="color:#E1E4E8;">mapedFileSizeCommitLog=1073741824</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># ConsumeQueue 每个文件默认存 30W 条，根据业务情况调整</span></span>
<span class="line"><span style="color:#E1E4E8;">mapedFileSizeConsumeQueue=300000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># destroyMapedFileIntervalForcibly=120000</span></span>
<span class="line"><span style="color:#E1E4E8;"># redeleteHangedFileInterval=120000</span></span>
<span class="line"><span style="color:#E1E4E8;"># 检测物理文件磁盘空间</span></span>
<span class="line"><span style="color:#E1E4E8;">diskMaxUsedSpaceRatio=88</span></span>
<span class="line"><span style="color:#E1E4E8;"># 存储路径</span></span>
<span class="line"><span style="color:#E1E4E8;"># storePathRootDir=/home/ztztdata/rocketmq-all-4.1.0-incubating/store</span></span>
<span class="line"><span style="color:#E1E4E8;"># commitLog 存储路径</span></span>
<span class="line"><span style="color:#E1E4E8;"># storePathCommitLog=/home/ztztdata/rocketmq-all-4.1.0-incubating/store/commitlog</span></span>
<span class="line"><span style="color:#E1E4E8;"># 消费队列存储</span></span>
<span class="line"><span style="color:#E1E4E8;"># storePathConsumeQueue=/home/ztztdata/rocketmq-all-4.1.0-incubating/store/consumequeue</span></span>
<span class="line"><span style="color:#E1E4E8;"># 消息索引存储路径</span></span>
<span class="line"><span style="color:#E1E4E8;"># storePathIndex=/home/ztztdata/rocketmq-all-4.1.0-incubating/store/index</span></span>
<span class="line"><span style="color:#E1E4E8;"># checkpoint 文件存储路径</span></span>
<span class="line"><span style="color:#E1E4E8;"># storeCheckpoint=/home/ztztdata/rocketmq-all-4.1.0-incubating/store/checkpoint</span></span>
<span class="line"><span style="color:#E1E4E8;"># abort 文件存储路径</span></span>
<span class="line"><span style="color:#E1E4E8;"># abortFile=/home/ztztdata/rocketmq-all-4.1.0-incubating/store/abort</span></span>
<span class="line"><span style="color:#E1E4E8;"># 限制的消息大小</span></span>
<span class="line"><span style="color:#E1E4E8;">maxMessageSize=65536</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># flushCommitLogLeastPages=4</span></span>
<span class="line"><span style="color:#E1E4E8;"># flushConsumeQueueLeastPages=2</span></span>
<span class="line"><span style="color:#E1E4E8;"># flushCommitLogThoroughInterval=10000</span></span>
<span class="line"><span style="color:#E1E4E8;"># flushConsumeQueueThoroughInterval=60000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># Broker 的角色</span></span>
<span class="line"><span style="color:#E1E4E8;"># - ASYNC_MASTER 异步复制Master</span></span>
<span class="line"><span style="color:#E1E4E8;"># - SYNC_MASTER 同步双写Master</span></span>
<span class="line"><span style="color:#E1E4E8;"># - SLAVE</span></span>
<span class="line"><span style="color:#E1E4E8;">brokerRole=ASYNC_MASTER</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 刷盘方式</span></span>
<span class="line"><span style="color:#E1E4E8;"># - ASYNC_FLUSH 异步刷盘</span></span>
<span class="line"><span style="color:#E1E4E8;"># - SYNC_FLUSH 同步刷盘</span></span>
<span class="line"><span style="color:#E1E4E8;">flushDiskType=ASYNC_FLUSH</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"># 发消息线程池数量</span></span>
<span class="line"><span style="color:#E1E4E8;"># sendMessageThreadPoolNums=128</span></span>
<span class="line"><span style="color:#E1E4E8;"># 拉消息线程池数量</span></span>
<span class="line"><span style="color:#E1E4E8;"># pullMessageThreadPoolNums=128</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"># 所属集群名字</span></span>
<span class="line"><span style="color:#24292E;">brokerClusterName=DefaultCluster</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># broker 名字，注意此处不同的配置文件填写的不一样，如果在 broker-a.properties 使用: broker-a,</span></span>
<span class="line"><span style="color:#24292E;"># 在 broker-b.properties 使用: broker-b</span></span>
<span class="line"><span style="color:#24292E;">brokerName=broker-a</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 0 表示 Master，</span><span style="color:#005CC5;">&amp;gt;</span><span style="color:#24292E;"> 0 表示 Slave</span></span>
<span class="line"><span style="color:#24292E;">brokerId=0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># nameServer地址，分号分割</span></span>
<span class="line"><span style="color:#24292E;"># namesrvAddr=rocketmq-nameserver1:9876;rocketmq-nameserver2:9876</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 启动IP,如果 docker 报 com.alibaba.rocketmq.remoting.exception.RemotingConnectException: connect to failed</span></span>
<span class="line"><span style="color:#24292E;"># 解决方式1 加上一句 producer.setVipChannelEnabled(false);，解决方式2brokerIP1 设置宿主机IP，不要使用docker内部IP</span></span>
<span class="line"><span style="color:#24292E;">brokerIP1=192.168.1.16 #本机的ip</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span></span>
<span class="line"><span style="color:#24292E;">defaultTopicQueueNums=4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 是否允许 Broker 自动创建 Topic，建议线下开启，线上关闭 ！！！这里仔细看是 false，false，false</span></span>
<span class="line"><span style="color:#24292E;">autoCreateTopicEnable=true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span></span>
<span class="line"><span style="color:#24292E;">autoCreateSubscriptionGroup=true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># Broker 对外服务的监听端口</span></span>
<span class="line"><span style="color:#24292E;">listenPort=10911</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 删除文件时间点，默认凌晨4点</span></span>
<span class="line"><span style="color:#24292E;">deleteWhen=04</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 文件保留时间，默认48小时</span></span>
<span class="line"><span style="color:#24292E;">fileReservedTime=120</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># commitLog 每个文件的大小默认1G</span></span>
<span class="line"><span style="color:#24292E;">mapedFileSizeCommitLog=1073741824</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># ConsumeQueue 每个文件默认存 30W 条，根据业务情况调整</span></span>
<span class="line"><span style="color:#24292E;">mapedFileSizeConsumeQueue=300000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># destroyMapedFileIntervalForcibly=120000</span></span>
<span class="line"><span style="color:#24292E;"># redeleteHangedFileInterval=120000</span></span>
<span class="line"><span style="color:#24292E;"># 检测物理文件磁盘空间</span></span>
<span class="line"><span style="color:#24292E;">diskMaxUsedSpaceRatio=88</span></span>
<span class="line"><span style="color:#24292E;"># 存储路径</span></span>
<span class="line"><span style="color:#24292E;"># storePathRootDir=/home/ztztdata/rocketmq-all-4.1.0-incubating/store</span></span>
<span class="line"><span style="color:#24292E;"># commitLog 存储路径</span></span>
<span class="line"><span style="color:#24292E;"># storePathCommitLog=/home/ztztdata/rocketmq-all-4.1.0-incubating/store/commitlog</span></span>
<span class="line"><span style="color:#24292E;"># 消费队列存储</span></span>
<span class="line"><span style="color:#24292E;"># storePathConsumeQueue=/home/ztztdata/rocketmq-all-4.1.0-incubating/store/consumequeue</span></span>
<span class="line"><span style="color:#24292E;"># 消息索引存储路径</span></span>
<span class="line"><span style="color:#24292E;"># storePathIndex=/home/ztztdata/rocketmq-all-4.1.0-incubating/store/index</span></span>
<span class="line"><span style="color:#24292E;"># checkpoint 文件存储路径</span></span>
<span class="line"><span style="color:#24292E;"># storeCheckpoint=/home/ztztdata/rocketmq-all-4.1.0-incubating/store/checkpoint</span></span>
<span class="line"><span style="color:#24292E;"># abort 文件存储路径</span></span>
<span class="line"><span style="color:#24292E;"># abortFile=/home/ztztdata/rocketmq-all-4.1.0-incubating/store/abort</span></span>
<span class="line"><span style="color:#24292E;"># 限制的消息大小</span></span>
<span class="line"><span style="color:#24292E;">maxMessageSize=65536</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># flushCommitLogLeastPages=4</span></span>
<span class="line"><span style="color:#24292E;"># flushConsumeQueueLeastPages=2</span></span>
<span class="line"><span style="color:#24292E;"># flushCommitLogThoroughInterval=10000</span></span>
<span class="line"><span style="color:#24292E;"># flushConsumeQueueThoroughInterval=60000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># Broker 的角色</span></span>
<span class="line"><span style="color:#24292E;"># - ASYNC_MASTER 异步复制Master</span></span>
<span class="line"><span style="color:#24292E;"># - SYNC_MASTER 同步双写Master</span></span>
<span class="line"><span style="color:#24292E;"># - SLAVE</span></span>
<span class="line"><span style="color:#24292E;">brokerRole=ASYNC_MASTER</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 刷盘方式</span></span>
<span class="line"><span style="color:#24292E;"># - ASYNC_FLUSH 异步刷盘</span></span>
<span class="line"><span style="color:#24292E;"># - SYNC_FLUSH 同步刷盘</span></span>
<span class="line"><span style="color:#24292E;">flushDiskType=ASYNC_FLUSH</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"># 发消息线程池数量</span></span>
<span class="line"><span style="color:#24292E;"># sendMessageThreadPoolNums=128</span></span>
<span class="line"><span style="color:#24292E;"># 拉消息线程池数量</span></span>
<span class="line"><span style="color:#24292E;"># pullMessageThreadPoolNums=128</span></span></code></pre></div><p><code>http://xxx:8099/</code></p></blockquote><h3 id="rocketmq使用" tabindex="-1">RocketMQ使用 <a class="header-anchor" href="#rocketmq使用" aria-label="Permalink to &quot;RocketMQ使用&quot;">​</a></h3><blockquote><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">&lt;!--在pom.xml中添加依赖--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">   &lt;</span><span style="color:#85E89D;">groupid</span><span style="color:#E1E4E8;">&gt;org.apache.rocketmq&lt;/</span><span style="color:#85E89D;">groupid</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">   &lt;</span><span style="color:#85E89D;">artifactid</span><span style="color:#E1E4E8;">&gt;rocketmq-spring-boot-starter&lt;/</span><span style="color:#85E89D;">artifactid</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">   &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;2.0.3&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!--在pom.xml中添加依赖--&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">   &lt;</span><span style="color:#22863A;">groupid</span><span style="color:#24292E;">&gt;org.apache.rocketmq&lt;/</span><span style="color:#22863A;">groupid</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">   &lt;</span><span style="color:#22863A;">artifactid</span><span style="color:#24292E;">&gt;rocketmq-spring-boot-starter&lt;/</span><span style="color:#22863A;">artifactid</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">   &lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;2.0.3&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p><code>消费服务发送方配置如下：</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">## application.properties</span></span>
<span class="line"><span style="color:#e1e4e8;">rocketmq.name-server=ip:9876</span></span>
<span class="line"><span style="color:#e1e4e8;">rocketmq.producer.group=my-group</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">## application.properties</span></span>
<span class="line"><span style="color:#24292e;">rocketmq.name-server=ip:9876</span></span>
<span class="line"><span style="color:#24292e;">rocketmq.producer.group=my-group</span></span></code></pre></div><p><code>消费服务发送方程序如下：</code></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">SpringBootApplication</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ProducerApplication</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CommandLineRunner</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   @</span><span style="color:#F97583;">Resource</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> RocketMQTemplate rocketMQTemplate;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">       SpringApplication.</span><span style="color:#B392F0;">run</span><span style="color:#E1E4E8;">(ProducerApplication.class, args);</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">run</span><span style="color:#E1E4E8;">(String... </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">throws</span><span style="color:#E1E4E8;"> Exception {</span></span>
<span class="line"><span style="color:#E1E4E8;">       rocketMQTemplate.</span><span style="color:#B392F0;">convertAndSend</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test-topic-1&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Hello, World!&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">       rocketMQTemplate.</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;test-topic-1&quot;</span><span style="color:#E1E4E8;">, MessageBuilder.</span><span style="color:#B392F0;">withPayload</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello, World! I&#39;m from spring message&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">SpringBootApplication</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ProducerApplication</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CommandLineRunner</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">   @</span><span style="color:#D73A49;">Resource</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> RocketMQTemplate rocketMQTemplate;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">       SpringApplication.</span><span style="color:#6F42C1;">run</span><span style="color:#24292E;">(ProducerApplication.class, args);</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">run</span><span style="color:#24292E;">(String... </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> Exception {</span></span>
<span class="line"><span style="color:#24292E;">       rocketMQTemplate.</span><span style="color:#6F42C1;">convertAndSend</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test-topic-1&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Hello, World!&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">       rocketMQTemplate.</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;test-topic-1&quot;</span><span style="color:#24292E;">, MessageBuilder.</span><span style="color:#6F42C1;">withPayload</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello, World! I&#39;m from spring message&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><code>消息消费方配置如下：</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">## application.properties</span></span>
<span class="line"><span style="color:#e1e4e8;">rocketmq.name-server=ip:9876</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">## application.properties</span></span>
<span class="line"><span style="color:#24292e;">rocketmq.name-server=ip:9876</span></span></code></pre></div><p><code>消息消费方运行程序如下：</code></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">SpringBootApplication</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ConsumerApplication</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">       SpringApplication.</span><span style="color:#B392F0;">run</span><span style="color:#E1E4E8;">(ConsumerApplication.class, args);</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   @</span><span style="color:#F97583;">Slf4j</span></span>
<span class="line"><span style="color:#E1E4E8;">   @</span><span style="color:#F97583;">Service</span></span>
<span class="line"><span style="color:#E1E4E8;">   @</span><span style="color:#F97583;">RocketMQMessageListener</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">topic</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;test-topic-1&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">consumerGroup</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;my-consumer_test-topic-1&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MyConsumer1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RocketMQListener</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">string</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onMessage</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">message</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">           log.</span><span style="color:#B392F0;">info</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;received message: {}&quot;</span><span style="color:#E1E4E8;">, message);</span></span>
<span class="line"><span style="color:#E1E4E8;">       }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">SpringBootApplication</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ConsumerApplication</span><span style="color:#24292E;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">       SpringApplication.</span><span style="color:#6F42C1;">run</span><span style="color:#24292E;">(ConsumerApplication.class, args);</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">   @</span><span style="color:#D73A49;">Slf4j</span></span>
<span class="line"><span style="color:#24292E;">   @</span><span style="color:#D73A49;">Service</span></span>
<span class="line"><span style="color:#24292E;">   @</span><span style="color:#D73A49;">RocketMQMessageListener</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">topic</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;test-topic-1&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">consumerGroup</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;my-consumer_test-topic-1&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MyConsumer1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RocketMQListener</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">string</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onMessage</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">message</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">           log.</span><span style="color:#6F42C1;">info</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;received message: {}&quot;</span><span style="color:#24292E;">, message);</span></span>
<span class="line"><span style="color:#24292E;">       }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></blockquote><h2 id="_2、rocketmq扩展" tabindex="-1">2、RocketMQ扩展 <a class="header-anchor" href="#_2、rocketmq扩展" aria-label="Permalink to &quot;2、RocketMQ扩展&quot;">​</a></h2><h3 id="rocketmq组件" tabindex="-1">RocketMQ组件 <a class="header-anchor" href="#rocketmq组件" aria-label="Permalink to &quot;RocketMQ组件&quot;">​</a></h3><ul><li><strong>Broker</strong> ：消息中转角色，负责 <strong>存储消息</strong> ，转发消息。<strong>Broker</strong> 是具体提供业务的服务器，单个Broker节点与所有的NameServer节点保持长连接及心跳，并会定时将 <strong>Topic</strong> 信息注册到NameServer，顺带一提底层的通信和连接都是 <strong>基于Netty实现</strong> 的。<strong>Broker</strong> 负责消息存储，以Topic为纬度支持轻量级的队列，单机可以支撑上万队列规模，支持消息推拉模型。官网上有数据显示：具有 <strong>上亿级消息堆积能力</strong> ，同时可 <strong>严格保证消息的有序性</strong> 。</li><li><strong>Topic</strong> ：主题！它是消息的第一级类型。比如一个电商系统可以分为：交易消息、物流消息等，一条消息必须有一个 Topic 。<strong>Topic</strong> 与生产者和消费者的关系非常松散，一个 Topic 可以有0个、1个、多个生产者向其发送消息，一个生产者也可以同时向不同的 Topic 发送消息。一个 Topic 也可以被 0个、1个、多个消费者订阅。</li><li><strong>Tag</strong> ：标签！可以看作子主题，它是消息的第二级类型，用于为用户提供额外的灵活性。使用标签，同一业务模块不同目的的消息就可以用相同Topic而不同的 <strong>Tag</strong> 来标识。比如交易消息又可以分为：交易创建消息、交易完成消息等，一条消息可以没有 <strong>Tag</strong> 。标签有助于保持您的代码干净和连贯，并且还可以为 <strong>RocketMQ</strong> 提供的查询系统提供帮助。</li><li><strong>MessageQueue</strong> ：一个Topic下可以设置多个消息队列，发送消息时执行该消息的Topic，RocketMQ会轮询该Topic下的所有队列将消息发出去。消息的物理管理单位。一个Topic下可以有多个Queue，Queue的引入使得消息的存储可以分布式集群化，具有了水平扩展能力。</li><li><strong>NameServer</strong> ：类似Kafka中的ZooKeeper，但NameServer集群之间是 <strong>没有通信</strong> 的，相对ZK来说更加 <strong>轻量</strong> 。它主要负责对于源数据的管理，包括了对于 <strong>Topic</strong> 和路由信息的管理。每个Broker在启动的时候会到NameServer注册，Producer在发送消息前会根据Topic去NameServer <strong>获取对应Broker的路由信息</strong> ，Consumer也会定时获取 Topic 的路由信息。</li><li><strong>Producer</strong> ：生产者，支持三种方式发送消息：<strong>同步、异步和单向</strong> 单向发送 ：消息发出去后，可以继续发送下一条消息或执行业务代码，不等待服务器回应，且 <strong>没有回调函数</strong> 。异步发送 ：消息发出去后，可以继续发送下一条消息或执行业务代码，不等待服务器回应， <strong>有回调函数</strong> 。同步发送 ：消息发出去后，等待服务器响应成功或失败，才能继续后面的操作。</li><li><strong>Consumer</strong> ：消费者，支持 PUSH 和 PULL 两种消费模式，支持 <strong>集群消费</strong> 和 <strong>广播消费</strong> 集群消费 ：该模式下一个消费者集群共同消费一个主题的多个队列，一个队列只会被一个消费者消费，如果某个消费者挂掉，分组内其它消费者会接替挂掉的消费者继续消费。广播消费 ：会发给消费者组中的每一个消费者进行消费。相当于 <strong>RabbitMQ</strong> 的发布订阅模式。</li><li><strong>Group</strong> ：分组，一个组可以订阅多个Topic。分为ProducerGroup，ConsumerGroup，代表某一类的生产者和消费者，一般来说同一个服务可以作为Group，同一个Group一般来说发送和消费的消息都是一样的</li><li><strong>Offset</strong> ：在RocketMQ中，所有消息队列都是持久化，长度无限的数据结构，所谓长度无限是指队列中的每个存储单元都是定长，访问其中的存储单元使用Offset来访问，Offset为Java Long类型，64位，理论上在 100年内不会溢出，所以认为是长度无限。也可以认为Message Queue是一个长度无限的数组， <strong>Offset</strong> 就是下标。</li></ul><h3 id="rocketmq延时消息" tabindex="-1">RocketMQ延时消息 <a class="header-anchor" href="#rocketmq延时消息" aria-label="Permalink to &quot;RocketMQ延时消息&quot;">​</a></h3><p>开源版的RocketMQ不支持任意时间精度，仅支持特定的level，例如定时5s，10s，1min等。其中，level=0级表示不延时，level=1表示1级延时，level=2表示2级延时，以此类推。</p><p>延时等级如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">messageDelayLevel=1s 5s 10s 30s 1m 2m 3m 4m 5m 6m 7m 8m 9m 10m 20m 30m 1h 2h</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">messageDelayLevel=1s 5s 10s 30s 1m 2m 3m 4m 5m 6m 7m 8m 9m 10m 20m 30m 1h 2h</span></span></code></pre></div><h3 id="rocketmq顺序消息" tabindex="-1">RocketMQ顺序消息 <a class="header-anchor" href="#rocketmq顺序消息" aria-label="Permalink to &quot;RocketMQ顺序消息&quot;">​</a></h3><p>消息有序指的是可以按照消息的发送顺序来消费（FIFO）。RocketMQ可以严格的保证消息有序，可以分为 分区有序 或者 全局有序 。</p><h3 id="rocketmq事务消息" tabindex="-1">RocketMQ事务消息 <a class="header-anchor" href="#rocketmq事务消息" aria-label="Permalink to &quot;RocketMQ事务消息&quot;">​</a></h3><p><img src="https://cdn.jsdelivr.net/gh/liuxiaowei2018/image/repo/202405301655991.png" alt="image-20230425160144804"></p><p>RocketMQ提供类似X/Open XA的分布式事务功能，通过消息队列MQ事务消息能达到分布式事务的最终一致。上图说明了事务消息的大致流程：正常事务消息的发送和提交、事务消息的补偿流程。</p><h4 id="事务消息发送及提交" tabindex="-1">事务消息发送及提交 <a class="header-anchor" href="#事务消息发送及提交" aria-label="Permalink to &quot;事务消息发送及提交&quot;">​</a></h4><ol><li>发送half消息</li><li>服务端响应消息写入结果</li><li>根据发送结果执行本地事务（如果写入失败，此时half消息对业务不可见，本地逻辑不执行）；</li><li>根据本地事务状态执行Commit或Rollback（Commit操作生成消息索引，消息对消费者可见）。</li></ol><h4 id="事务消息的补偿流程" tabindex="-1">事务消息的补偿流程 <a class="header-anchor" href="#事务消息的补偿流程" aria-label="Permalink to &quot;事务消息的补偿流程&quot;">​</a></h4><ol><li>对没有Commit/Rollback的事务消息（pending状态的消息），从服务端发起一次“回查”；</li><li>Producer收到回查消息，检查回查消息对应的本地事务的状态。</li><li>根据本地事务状态，重新Commit或RollBack</li></ol><p>其中，补偿阶段用于解决消息Commit或Rollback发生超时或者失败的情况。</p><h4 id="事务消息状态" tabindex="-1">事务消息状态 <a class="header-anchor" href="#事务消息状态" aria-label="Permalink to &quot;事务消息状态&quot;">​</a></h4><p>事务消息共有三种状态：提交状态、回滚状态、中间状态：</p><ol><li><code>TransactionStatus.CommitTransaction</code>：提交事务，它允许消费者消费此消息。</li><li><code>TransactionStatus.RollbackTransaction</code>：回滚事务，它代表该消息将被删除，不允许被消费。</li><li><code>TransactionStatus.Unkonwn</code>：中间状态，它代表需要检查消息队列来确定消息状态。</li></ol><h3 id="rocketmq消息机制" tabindex="-1">RocketMQ消息机制 <a class="header-anchor" href="#rocketmq消息机制" aria-label="Permalink to &quot;RocketMQ消息机制&quot;">​</a></h3><h4 id="message-发送与接收" tabindex="-1">Message 发送与接收 <a class="header-anchor" href="#message-发送与接收" aria-label="Permalink to &quot;Message 发送与接收&quot;">​</a></h4><h5 id="producer-发送消息" tabindex="-1">Producer 发送消息 <a class="header-anchor" href="#producer-发送消息" aria-label="Permalink to &quot;Producer 发送消息&quot;">​</a></h5><p><img src="https://cdn.jsdelivr.net/gh/liuxiaowei2018/image/repo/202405301655253.png" alt="image-20220705160256465"></p><p><img src="https://cdn.jsdelivr.net/gh/liuxiaowei2018/image/repo/202405301655196.png" alt="image-20220705160345853"></p><p>DefaultMQProducer#send(Message)</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> SendResult </span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(Message msg) throws MQClientException, RemotingException, MQBrokerException, InterruptedException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.defaultMQProducerImpl.</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(msg);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> SendResult </span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(Message msg) throws MQClientException, RemotingException, MQBrokerException, InterruptedException {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.defaultMQProducerImpl.</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(msg);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>说明：发送同步消息，<code>DefaultMQProducer#send(Message)</code> 对<code>DefaultMQProducerImpl#send(Message)</code> 进行封装。</strong></p><p>DefaultMQProducerImpl#sendDefaultImpl()</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> SendResult </span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(Message msg) throws MQClientException, RemotingException, MQBrokerException, InterruptedException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(msg, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.defaultMQProducer.</span><span style="color:#B392F0;">getSendMsgTimeout</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> SendResult </span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(Message msg, </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> timeout) throws MQClientException, RemotingException, MQBrokerException, InterruptedException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">sendDefaultImpl</span><span style="color:#E1E4E8;">(msg, CommunicationMode.SYNC, </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, timeout);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> SendResult </span><span style="color:#B392F0;">sendDefaultImpl</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    Message msg, </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> CommunicationMode communicationMode, </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> SendCallback sendCallback, </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> timeout</span></span>
<span class="line"><span style="color:#E1E4E8;">) throws MQClientException, RemotingException, MQBrokerException, InterruptedException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 校验 Producer 处于运行状态</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">makeSureStateOK</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 校验消息格式</span></span>
<span class="line"><span style="color:#E1E4E8;">    Validators.</span><span style="color:#B392F0;">checkMessage</span><span style="color:#E1E4E8;">(msg, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.defaultMQProducer);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> invokeID </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> random.</span><span style="color:#B392F0;">nextLong</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// 调用编号；用于下面打印日志，标记为同一次发送消息</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> beginTimestampFirst </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> beginTimestampPrev </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> beginTimestampFirst;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> endTimestamp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> beginTimestampFirst;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 获取 Topic路由信息</span></span>
<span class="line"><span style="color:#E1E4E8;">    TopicPublishInfo topicPublishInfo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">tryToFindTopicPublishInfo</span><span style="color:#E1E4E8;">(msg.</span><span style="color:#B392F0;">getTopic</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (topicPublishInfo </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> topicPublishInfo.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        MessageQueue mq </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 最后选择消息要发送到的队列</span></span>
<span class="line"><span style="color:#E1E4E8;">        Exception exception </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        SendResult sendResult </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 最后一次发送结果</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> timesTotal </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> communicationMode </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> CommunicationMode.SYNC </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.defaultMQProducer.</span><span style="color:#B392F0;">getRetryTimesWhenSendFailed</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 同步多次调用</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> times </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 第几次发送</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] brokersSent </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[timesTotal]; </span><span style="color:#6A737D;">// 存储每次发送消息选择的broker名</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 循环调用发送消息，直到成功</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (; times </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> timesTotal; times</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            String lastBrokerName </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> mq </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> mq.</span><span style="color:#B392F0;">getBrokerName</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            MessageQueue tmpmq </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">selectOneMessageQueue</span><span style="color:#E1E4E8;">(topicPublishInfo, lastBrokerName); </span><span style="color:#6A737D;">// 选择消息要发送到的队列</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (tmpmq </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                mq </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tmpmq;</span></span>
<span class="line"><span style="color:#E1E4E8;">                brokersSent[times] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> mq.</span><span style="color:#B392F0;">getBrokerName</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    beginTimestampPrev </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#6A737D;">// 调用发送消息核心方法</span></span>
<span class="line"><span style="color:#E1E4E8;">                    sendResult </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">sendKernelImpl</span><span style="color:#E1E4E8;">(msg, mq, communicationMode, sendCallback, topicPublishInfo, timeout);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    endTimestamp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#6A737D;">// 更新Broker可用性信息</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">updateFaultItem</span><span style="color:#E1E4E8;">(mq.</span><span style="color:#B392F0;">getBrokerName</span><span style="color:#E1E4E8;">(), endTimestamp </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> beginTimestampPrev, </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (communicationMode) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> ASYNC</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> ONEWAY</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> SYNC</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (sendResult.</span><span style="color:#B392F0;">getSendStatus</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> SendStatus.SEND_OK) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.defaultMQProducer.</span><span style="color:#B392F0;">isRetryAnotherBrokerWhenNotStoreOK</span><span style="color:#E1E4E8;">()) { </span><span style="color:#6A737D;">// 同步发送成功但存储有问题时 &amp;&amp; 配置存储异常时重新发送开关 时，进行重试</span></span>
<span class="line"><span style="color:#E1E4E8;">                                    </span><span style="color:#F97583;">continue</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                                }</span></span>
<span class="line"><span style="color:#E1E4E8;">                            }</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> sendResult;</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#F97583;">default:</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    }</span></span>
<span class="line"><span style="color:#E1E4E8;">                } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (RemotingException </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) { </span><span style="color:#6A737D;">// 打印异常，更新Broker可用性信息，更新继续循环</span></span>
<span class="line"><span style="color:#E1E4E8;">                    endTimestamp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">updateFaultItem</span><span style="color:#E1E4E8;">(mq.</span><span style="color:#B392F0;">getBrokerName</span><span style="color:#E1E4E8;">(), endTimestamp </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> beginTimestampPrev, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    log.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(String.</span><span style="color:#B392F0;">format</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;sendKernelImpl exception, resend at once, InvokeID: %s, RT: %sms, Broker: %s&quot;</span><span style="color:#E1E4E8;">, invokeID, endTimestamp </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> beginTimestampPrev, mq), e);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    log.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(msg.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">                    exception </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> e;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">continue</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (MQClientException </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) { </span><span style="color:#6A737D;">// 打印异常，更新Broker可用性信息，继续循环</span></span>
<span class="line"><span style="color:#E1E4E8;">                    endTimestamp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">updateFaultItem</span><span style="color:#E1E4E8;">(mq.</span><span style="color:#B392F0;">getBrokerName</span><span style="color:#E1E4E8;">(), endTimestamp </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> beginTimestampPrev, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    log.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(String.</span><span style="color:#B392F0;">format</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;sendKernelImpl exception, resend at once, InvokeID: %s, RT: %sms, Broker: %s&quot;</span><span style="color:#E1E4E8;">, invokeID, endTimestamp </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> beginTimestampPrev, mq), e);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    log.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(msg.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">                    exception </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> e;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">continue</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (MQBrokerException </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) { </span><span style="color:#6A737D;">// 打印异常，更新Broker可用性信息，部分情况下的异常，直接返回，结束循环</span></span>
<span class="line"><span style="color:#E1E4E8;">                    endTimestamp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">updateFaultItem</span><span style="color:#E1E4E8;">(mq.</span><span style="color:#B392F0;">getBrokerName</span><span style="color:#E1E4E8;">(), endTimestamp </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> beginTimestampPrev, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    log.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(String.</span><span style="color:#B392F0;">format</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;sendKernelImpl exception, resend at once, InvokeID: %s, RT: %sms, Broker: %s&quot;</span><span style="color:#E1E4E8;">, invokeID, endTimestamp </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> beginTimestampPrev, mq), e);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    log.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(msg.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">                    exception </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> e;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (e.</span><span style="color:#B392F0;">getResponseCode</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#6A737D;">// 如下异常continue，进行发送消息重试</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> ResponseCode.TOPIC_NOT_EXIST</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> ResponseCode.SERVICE_NOT_AVAILABLE</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> ResponseCode.SYSTEM_ERROR</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> ResponseCode.NO_PERMISSION</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> ResponseCode.NO_BUYER_ID</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> ResponseCode.NOT_IN_CURRENT_UNIT</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#F97583;">continue</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#6A737D;">// 如果有发送结果，进行返回，否则，抛出异常；</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#F97583;">default:</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (sendResult </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                                </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> sendResult;</span></span>
<span class="line"><span style="color:#E1E4E8;">                            }</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> e;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    }</span></span>
<span class="line"><span style="color:#E1E4E8;">                } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (InterruptedException </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    endTimestamp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">updateFaultItem</span><span style="color:#E1E4E8;">(mq.</span><span style="color:#B392F0;">getBrokerName</span><span style="color:#E1E4E8;">(), endTimestamp </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> beginTimestampPrev, </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    log.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(String.</span><span style="color:#B392F0;">format</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;sendKernelImpl exception, throw exception, InvokeID: %s, RT: %sms, Broker: %s&quot;</span><span style="color:#E1E4E8;">, invokeID, endTimestamp </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> beginTimestampPrev, mq), e);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    log.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(msg.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> e;</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">            } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 返回发送结果</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (sendResult </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> sendResult;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 根据不同情况，抛出不同的异常</span></span>
<span class="line"><span style="color:#E1E4E8;">        String info </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> String.</span><span style="color:#B392F0;">format</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Send [%d] times, still failed, cost [%d]ms, Topic: %s, BrokersSent: %s&quot;</span><span style="color:#E1E4E8;">, times, 			System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> beginTimestampFirst,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                    msg.</span><span style="color:#B392F0;">getTopic</span><span style="color:#E1E4E8;">(), Arrays.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">(brokersSent)) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> FAQUrl.</span><span style="color:#B392F0;">suggestTodo</span><span style="color:#E1E4E8;">(FAQUrl.SEND_MSG_FAILED);</span></span>
<span class="line"><span style="color:#E1E4E8;">        MQClientException mqClientException </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MQClientException</span><span style="color:#E1E4E8;">(info, exception);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (exception </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> MQBrokerException) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            mqClientException.</span><span style="color:#B392F0;">setResponseCode</span><span style="color:#E1E4E8;">(((MQBrokerException) exception).</span><span style="color:#B392F0;">getResponseCode</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (exception </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> RemotingConnectException) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            mqClientException.</span><span style="color:#B392F0;">setResponseCode</span><span style="color:#E1E4E8;">(ClientErrorCode.CONNECT_BROKER_EXCEPTION);</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (exception </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> RemotingTimeoutException) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            mqClientException.</span><span style="color:#B392F0;">setResponseCode</span><span style="color:#E1E4E8;">(ClientErrorCode.ACCESS_BROKER_TIMEOUT);</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (exception </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> MQClientException) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            mqClientException.</span><span style="color:#B392F0;">setResponseCode</span><span style="color:#E1E4E8;">(ClientErrorCode.BROKER_NOT_EXIST_EXCEPTION);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> mqClientException;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Namesrv找不到异常</span></span>
<span class="line"><span style="color:#E1E4E8;">    List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; nsList </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">getmQClientFactory</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getMQClientAPIImpl</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getNameServerAddressList</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> nsList </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> nsList.</span><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MQClientException</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;No name server address, please set it.&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> FAQUrl.</span><span style="color:#B392F0;">suggestTodo</span><span style="color:#E1E4E8;">(FAQUrl.NAME_SERVER_ADDR_NOT_EXIST_URL), </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">setResponseCode</span><span style="color:#E1E4E8;">(ClientErrorCode.NO_NAME_SERVER_EXCEPTION);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 消息路由找不到异常</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MQClientException</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;No route info of this topic, &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> msg.</span><span style="color:#B392F0;">getTopic</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> FAQUrl.</span><span style="color:#B392F0;">suggestTodo</span><span style="color:#E1E4E8;">(FAQUrl.NO_TOPIC_ROUTE_INFO),</span></span>
<span class="line"><span style="color:#E1E4E8;">                                </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">setResponseCode</span><span style="color:#E1E4E8;">(ClientErrorCode.NOT_FOUND_TOPIC_EXCEPTION);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> SendResult </span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(Message msg) throws MQClientException, RemotingException, MQBrokerException, InterruptedException {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(msg, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.defaultMQProducer.</span><span style="color:#6F42C1;">getSendMsgTimeout</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> SendResult </span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(Message msg, </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> timeout) throws MQClientException, RemotingException, MQBrokerException, InterruptedException {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">sendDefaultImpl</span><span style="color:#24292E;">(msg, CommunicationMode.SYNC, </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">, timeout);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> SendResult </span><span style="color:#6F42C1;">sendDefaultImpl</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    Message msg, </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> CommunicationMode communicationMode, </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> SendCallback sendCallback, </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> timeout</span></span>
<span class="line"><span style="color:#24292E;">) throws MQClientException, RemotingException, MQBrokerException, InterruptedException {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 校验 Producer 处于运行状态</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">makeSureStateOK</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 校验消息格式</span></span>
<span class="line"><span style="color:#24292E;">    Validators.</span><span style="color:#6F42C1;">checkMessage</span><span style="color:#24292E;">(msg, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.defaultMQProducer);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> invokeID </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> random.</span><span style="color:#6F42C1;">nextLong</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 调用编号；用于下面打印日志，标记为同一次发送消息</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> beginTimestampFirst </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> beginTimestampPrev </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> beginTimestampFirst;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> endTimestamp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> beginTimestampFirst;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 获取 Topic路由信息</span></span>
<span class="line"><span style="color:#24292E;">    TopicPublishInfo topicPublishInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">tryToFindTopicPublishInfo</span><span style="color:#24292E;">(msg.</span><span style="color:#6F42C1;">getTopic</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (topicPublishInfo </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> topicPublishInfo.</span><span style="color:#6F42C1;">ok</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">        MessageQueue mq </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 最后选择消息要发送到的队列</span></span>
<span class="line"><span style="color:#24292E;">        Exception exception </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        SendResult sendResult </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 最后一次发送结果</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> timesTotal </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> communicationMode </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> CommunicationMode.SYNC </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.defaultMQProducer.</span><span style="color:#6F42C1;">getRetryTimesWhenSendFailed</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 同步多次调用</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> times </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 第几次发送</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] brokersSent </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[timesTotal]; </span><span style="color:#6A737D;">// 存储每次发送消息选择的broker名</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 循环调用发送消息，直到成功</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (; times </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> timesTotal; times</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            String lastBrokerName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> mq </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> mq.</span><span style="color:#6F42C1;">getBrokerName</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            MessageQueue tmpmq </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">selectOneMessageQueue</span><span style="color:#24292E;">(topicPublishInfo, lastBrokerName); </span><span style="color:#6A737D;">// 选择消息要发送到的队列</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (tmpmq </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                mq </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tmpmq;</span></span>
<span class="line"><span style="color:#24292E;">                brokersSent[times] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> mq.</span><span style="color:#6F42C1;">getBrokerName</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                    beginTimestampPrev </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6A737D;">// 调用发送消息核心方法</span></span>
<span class="line"><span style="color:#24292E;">                    sendResult </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">sendKernelImpl</span><span style="color:#24292E;">(msg, mq, communicationMode, sendCallback, topicPublishInfo, timeout);</span></span>
<span class="line"><span style="color:#24292E;">                    endTimestamp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6A737D;">// 更新Broker可用性信息</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">updateFaultItem</span><span style="color:#24292E;">(mq.</span><span style="color:#6F42C1;">getBrokerName</span><span style="color:#24292E;">(), endTimestamp </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> beginTimestampPrev, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (communicationMode) {</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> ASYNC</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> ONEWAY</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> SYNC</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (sendResult.</span><span style="color:#6F42C1;">getSendStatus</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> SendStatus.SEND_OK) {</span></span>
<span class="line"><span style="color:#24292E;">                                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.defaultMQProducer.</span><span style="color:#6F42C1;">isRetryAnotherBrokerWhenNotStoreOK</span><span style="color:#24292E;">()) { </span><span style="color:#6A737D;">// 同步发送成功但存储有问题时 &amp;&amp; 配置存储异常时重新发送开关 时，进行重试</span></span>
<span class="line"><span style="color:#24292E;">                                    </span><span style="color:#D73A49;">continue</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                                }</span></span>
<span class="line"><span style="color:#24292E;">                            }</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> sendResult;</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">default:</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                    }</span></span>
<span class="line"><span style="color:#24292E;">                } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (RemotingException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) { </span><span style="color:#6A737D;">// 打印异常，更新Broker可用性信息，更新继续循环</span></span>
<span class="line"><span style="color:#24292E;">                    endTimestamp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">updateFaultItem</span><span style="color:#24292E;">(mq.</span><span style="color:#6F42C1;">getBrokerName</span><span style="color:#24292E;">(), endTimestamp </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> beginTimestampPrev, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                    log.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(String.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;sendKernelImpl exception, resend at once, InvokeID: %s, RT: %sms, Broker: %s&quot;</span><span style="color:#24292E;">, invokeID, endTimestamp </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> beginTimestampPrev, mq), e);</span></span>
<span class="line"><span style="color:#24292E;">                    log.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(msg.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                    exception </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> e;</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">continue</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (MQClientException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) { </span><span style="color:#6A737D;">// 打印异常，更新Broker可用性信息，继续循环</span></span>
<span class="line"><span style="color:#24292E;">                    endTimestamp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">updateFaultItem</span><span style="color:#24292E;">(mq.</span><span style="color:#6F42C1;">getBrokerName</span><span style="color:#24292E;">(), endTimestamp </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> beginTimestampPrev, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                    log.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(String.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;sendKernelImpl exception, resend at once, InvokeID: %s, RT: %sms, Broker: %s&quot;</span><span style="color:#24292E;">, invokeID, endTimestamp </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> beginTimestampPrev, mq), e);</span></span>
<span class="line"><span style="color:#24292E;">                    log.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(msg.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                    exception </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> e;</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">continue</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (MQBrokerException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) { </span><span style="color:#6A737D;">// 打印异常，更新Broker可用性信息，部分情况下的异常，直接返回，结束循环</span></span>
<span class="line"><span style="color:#24292E;">                    endTimestamp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">updateFaultItem</span><span style="color:#24292E;">(mq.</span><span style="color:#6F42C1;">getBrokerName</span><span style="color:#24292E;">(), endTimestamp </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> beginTimestampPrev, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                    log.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(String.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;sendKernelImpl exception, resend at once, InvokeID: %s, RT: %sms, Broker: %s&quot;</span><span style="color:#24292E;">, invokeID, endTimestamp </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> beginTimestampPrev, mq), e);</span></span>
<span class="line"><span style="color:#24292E;">                    log.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(msg.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                    exception </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> e;</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (e.</span><span style="color:#6F42C1;">getResponseCode</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#6A737D;">// 如下异常continue，进行发送消息重试</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> ResponseCode.TOPIC_NOT_EXIST</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> ResponseCode.SERVICE_NOT_AVAILABLE</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> ResponseCode.SYSTEM_ERROR</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> ResponseCode.NO_PERMISSION</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> ResponseCode.NO_BUYER_ID</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> ResponseCode.NOT_IN_CURRENT_UNIT</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#D73A49;">continue</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#6A737D;">// 如果有发送结果，进行返回，否则，抛出异常；</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">default:</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (sendResult </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                                </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> sendResult;</span></span>
<span class="line"><span style="color:#24292E;">                            }</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> e;</span></span>
<span class="line"><span style="color:#24292E;">                    }</span></span>
<span class="line"><span style="color:#24292E;">                } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (InterruptedException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                    endTimestamp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">updateFaultItem</span><span style="color:#24292E;">(mq.</span><span style="color:#6F42C1;">getBrokerName</span><span style="color:#24292E;">(), endTimestamp </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> beginTimestampPrev, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                    log.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(String.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;sendKernelImpl exception, throw exception, InvokeID: %s, RT: %sms, Broker: %s&quot;</span><span style="color:#24292E;">, invokeID, endTimestamp </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> beginTimestampPrev, mq), e);</span></span>
<span class="line"><span style="color:#24292E;">                    log.</span><span style="color:#6F42C1;">warn</span><span style="color:#24292E;">(msg.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> e;</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 返回发送结果</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (sendResult </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> sendResult;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 根据不同情况，抛出不同的异常</span></span>
<span class="line"><span style="color:#24292E;">        String info </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> String.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Send [%d] times, still failed, cost [%d]ms, Topic: %s, BrokersSent: %s&quot;</span><span style="color:#24292E;">, times, 			System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> beginTimestampFirst,</span></span>
<span class="line"><span style="color:#24292E;">                                    msg.</span><span style="color:#6F42C1;">getTopic</span><span style="color:#24292E;">(), Arrays.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">(brokersSent)) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> FAQUrl.</span><span style="color:#6F42C1;">suggestTodo</span><span style="color:#24292E;">(FAQUrl.SEND_MSG_FAILED);</span></span>
<span class="line"><span style="color:#24292E;">        MQClientException mqClientException </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MQClientException</span><span style="color:#24292E;">(info, exception);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (exception </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> MQBrokerException) {</span></span>
<span class="line"><span style="color:#24292E;">            mqClientException.</span><span style="color:#6F42C1;">setResponseCode</span><span style="color:#24292E;">(((MQBrokerException) exception).</span><span style="color:#6F42C1;">getResponseCode</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (exception </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> RemotingConnectException) {</span></span>
<span class="line"><span style="color:#24292E;">            mqClientException.</span><span style="color:#6F42C1;">setResponseCode</span><span style="color:#24292E;">(ClientErrorCode.CONNECT_BROKER_EXCEPTION);</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (exception </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> RemotingTimeoutException) {</span></span>
<span class="line"><span style="color:#24292E;">            mqClientException.</span><span style="color:#6F42C1;">setResponseCode</span><span style="color:#24292E;">(ClientErrorCode.ACCESS_BROKER_TIMEOUT);</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (exception </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> MQClientException) {</span></span>
<span class="line"><span style="color:#24292E;">            mqClientException.</span><span style="color:#6F42C1;">setResponseCode</span><span style="color:#24292E;">(ClientErrorCode.BROKER_NOT_EXIST_EXCEPTION);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> mqClientException;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Namesrv找不到异常</span></span>
<span class="line"><span style="color:#24292E;">    List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; nsList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getmQClientFactory</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getMQClientAPIImpl</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getNameServerAddressList</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> nsList </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> nsList.</span><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MQClientException</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;No name server address, please set it.&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> FAQUrl.</span><span style="color:#6F42C1;">suggestTodo</span><span style="color:#24292E;">(FAQUrl.NAME_SERVER_ADDR_NOT_EXIST_URL), </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">setResponseCode</span><span style="color:#24292E;">(ClientErrorCode.NO_NAME_SERVER_EXCEPTION);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 消息路由找不到异常</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MQClientException</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;No route info of this topic, &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> msg.</span><span style="color:#6F42C1;">getTopic</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> FAQUrl.</span><span style="color:#6F42C1;">suggestTodo</span><span style="color:#24292E;">(FAQUrl.NO_TOPIC_ROUTE_INFO),</span></span>
<span class="line"><span style="color:#24292E;">                                </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">setResponseCode</span><span style="color:#24292E;">(ClientErrorCode.NOT_FOUND_TOPIC_EXCEPTION);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>DefaultMQProducerImpl#tryToFindTopicPublishInfo()</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> TopicPublishInfo </span><span style="color:#B392F0;">tryToFindTopicPublishInfo</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String topic) {</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 缓存中获取 Topic发布信息</span></span>
<span class="line"><span style="color:#E1E4E8;"> TopicPublishInfo topicPublishInfo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.topicPublishInfoTable.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(topic);</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 当无可用的 Topic发布信息时，从Namesrv获取一次</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> topicPublishInfo </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">topicPublishInfo.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	 </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.topicPublishInfoTable.</span><span style="color:#B392F0;">putIfAbsent</span><span style="color:#E1E4E8;">(topic, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TopicPublishInfo</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">	 </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.mQClientFactory.</span><span style="color:#B392F0;">updateTopicRouteInfoFromNameServer</span><span style="color:#E1E4E8;">(topic);</span></span>
<span class="line"><span style="color:#E1E4E8;">	 topicPublishInfo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.topicPublishInfoTable.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(topic);</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 若获取的 Topic发布信息时候可用，则返回</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (topicPublishInfo.</span><span style="color:#B392F0;">isHaveTopicRouterInfo</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> topicPublishInfo.</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	 </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> topicPublishInfo;</span></span>
<span class="line"><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> { </span><span style="color:#6A737D;">// 使用 {@link DefaultMQProducer#createTopicKey} 对应的 Topic发布信息。用于 Topic发布信息不存在 &amp;&amp; Broker支持自动创建Topic</span></span>
<span class="line"><span style="color:#E1E4E8;">	 </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.mQClientFactory.</span><span style="color:#B392F0;">updateTopicRouteInfoFromNameServer</span><span style="color:#E1E4E8;">(topic, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.defaultMQProducer);</span></span>
<span class="line"><span style="color:#E1E4E8;">	 topicPublishInfo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.topicPublishInfoTable.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(topic);</span></span>
<span class="line"><span style="color:#E1E4E8;">	 </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> topicPublishInfo;</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> TopicPublishInfo </span><span style="color:#6F42C1;">tryToFindTopicPublishInfo</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String topic) {</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 缓存中获取 Topic发布信息</span></span>
<span class="line"><span style="color:#24292E;"> TopicPublishInfo topicPublishInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.topicPublishInfoTable.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(topic);</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 当无可用的 Topic发布信息时，从Namesrv获取一次</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> topicPublishInfo </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">topicPublishInfo.</span><span style="color:#6F42C1;">ok</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">	 </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.topicPublishInfoTable.</span><span style="color:#6F42C1;">putIfAbsent</span><span style="color:#24292E;">(topic, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TopicPublishInfo</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">	 </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.mQClientFactory.</span><span style="color:#6F42C1;">updateTopicRouteInfoFromNameServer</span><span style="color:#24292E;">(topic);</span></span>
<span class="line"><span style="color:#24292E;">	 topicPublishInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.topicPublishInfoTable.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(topic);</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 若获取的 Topic发布信息时候可用，则返回</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (topicPublishInfo.</span><span style="color:#6F42C1;">isHaveTopicRouterInfo</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> topicPublishInfo.</span><span style="color:#6F42C1;">ok</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">	 </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> topicPublishInfo;</span></span>
<span class="line"><span style="color:#24292E;"> } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> { </span><span style="color:#6A737D;">// 使用 {@link DefaultMQProducer#createTopicKey} 对应的 Topic发布信息。用于 Topic发布信息不存在 &amp;&amp; Broker支持自动创建Topic</span></span>
<span class="line"><span style="color:#24292E;">	 </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.mQClientFactory.</span><span style="color:#6F42C1;">updateTopicRouteInfoFromNameServer</span><span style="color:#24292E;">(topic, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.defaultMQProducer);</span></span>
<span class="line"><span style="color:#24292E;">	 topicPublishInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.topicPublishInfoTable.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(topic);</span></span>
<span class="line"><span style="color:#24292E;">	 </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> topicPublishInfo;</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>MQFaultStrategy</p><p><img src="https://cdn.jsdelivr.net/gh/liuxiaowei2018/image/repo/202405301656046.png" alt="image-20220706110703218"></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MQFaultStrategy</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Logger log </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ClientLogger.</span><span style="color:#B392F0;">getLog</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 延迟故障容错，维护每个Broker的发送消息的延迟</span></span>
<span class="line"><span style="color:#6A737D;">      * key：brokerName</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> LatencyFaultTolerance&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; latencyFaultTolerance </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LatencyFaultToleranceImpl</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 发送消息延迟容错开关</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> sendLatencyFaultEnable </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 延迟级别数组</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;">[] latencyMax </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#79B8FF;">50L</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100L</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">550L</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1000L</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2000L</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3000L</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">15000L</span><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 不可用时长数组</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;">[] notAvailableDuration </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#79B8FF;">0L</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0L</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">30000L</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">60000L</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">120000L</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">180000L</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">600000L</span><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 根据 Topic发布信息 选择一个消息队列</span></span>
<span class="line"><span style="color:#6A737D;">      *</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#FFAB70;">tpInfo</span><span style="color:#6A737D;"> Topic发布信息</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#FFAB70;">lastBrokerName</span><span style="color:#6A737D;"> brokerName</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> 消息队列</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> MessageQueue </span><span style="color:#B392F0;">selectOneMessageQueue</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> TopicPublishInfo </span><span style="color:#FFAB70;">tpInfo</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String </span><span style="color:#FFAB70;">lastBrokerName</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.sendLatencyFaultEnable) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// 获取 brokerName=lastBrokerName &amp;&amp; 可用的一个消息队列</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> index </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tpInfo.</span><span style="color:#B392F0;">getSendWhichQueue</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getAndIncrement</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> tpInfo.</span><span style="color:#B392F0;">getMessageQueueList</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">(); i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> pos </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">abs</span><span style="color:#E1E4E8;">(index</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> tpInfo.</span><span style="color:#B392F0;">getMessageQueueList</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (pos </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                        pos </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    MessageQueue mq </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tpInfo.</span><span style="color:#B392F0;">getMessageQueueList</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(pos);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (latencyFaultTolerance.</span><span style="color:#B392F0;">isAvailable</span><span style="color:#E1E4E8;">(mq.</span><span style="color:#B392F0;">getBrokerName</span><span style="color:#E1E4E8;">())) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> lastBrokerName </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> mq.</span><span style="color:#B392F0;">getBrokerName</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(lastBrokerName))</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> mq;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    }</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// 选择一个相对好的broker，并获得其对应的一个消息队列，不考虑该队列的可用性</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String notBestBroker </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> latencyFaultTolerance.</span><span style="color:#B392F0;">pickOneAtLeast</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> writeQueueNums </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tpInfo.</span><span style="color:#B392F0;">getQueueIdByBroker</span><span style="color:#E1E4E8;">(notBestBroker);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (writeQueueNums </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> MessageQueue mq </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tpInfo.</span><span style="color:#B392F0;">selectOneMessageQueue</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (notBestBroker </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                        mq.</span><span style="color:#B392F0;">setBrokerName</span><span style="color:#E1E4E8;">(notBestBroker);</span></span>
<span class="line"><span style="color:#E1E4E8;">                        mq.</span><span style="color:#B392F0;">setQueueId</span><span style="color:#E1E4E8;">(tpInfo.</span><span style="color:#B392F0;">getSendWhichQueue</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">getAndIncrement</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> writeQueueNums);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    }</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> mq;</span></span>
<span class="line"><span style="color:#E1E4E8;">                } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    latencyFaultTolerance.</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">(notBestBroker);</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">            } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (Exception </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                log.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Error occurred when selecting message queue&quot;</span><span style="color:#E1E4E8;">, e);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 选择一个消息队列，不考虑队列的可用性</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> tpInfo.</span><span style="color:#B392F0;">selectOneMessageQueue</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 获得 lastBrokerName 对应的一个消息队列，不考虑该队列的可用性</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> tpInfo.</span><span style="color:#B392F0;">selectOneMessageQueue</span><span style="color:#E1E4E8;">(lastBrokerName);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 更新延迟容错信息</span></span>
<span class="line"><span style="color:#6A737D;">      *</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#FFAB70;">brokerName</span><span style="color:#6A737D;"> brokerName</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#FFAB70;">currentLatency</span><span style="color:#6A737D;"> 延迟</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#FFAB70;">isolation</span><span style="color:#6A737D;"> 是否隔离。当开启隔离时，默认延迟为30000。目前主要用于发送消息异常时</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateFaultItem</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String </span><span style="color:#FFAB70;">brokerName</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">currentLatency</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">isolation</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.sendLatencyFaultEnable) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> duration </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">computeNotAvailableDuration</span><span style="color:#E1E4E8;">(isolation </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">30000</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> currentLatency);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.latencyFaultTolerance.</span><span style="color:#B392F0;">updateFaultItem</span><span style="color:#E1E4E8;">(brokerName, currentLatency, duration);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 计算延迟对应的不可用时间</span></span>
<span class="line"><span style="color:#6A737D;">      *</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#FFAB70;">currentLatency</span><span style="color:#6A737D;"> 延迟</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> 不可用时间</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">computeNotAvailableDuration</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">currentLatency</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> latencyMax.length </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (currentLatency </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> latencyMax[i])</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.notAvailableDuration[i];</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MQFaultStrategy</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Logger log </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ClientLogger.</span><span style="color:#6F42C1;">getLog</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 延迟故障容错，维护每个Broker的发送消息的延迟</span></span>
<span class="line"><span style="color:#6A737D;">      * key：brokerName</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> LatencyFaultTolerance&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; latencyFaultTolerance </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LatencyFaultToleranceImpl</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 发送消息延迟容错开关</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> sendLatencyFaultEnable </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 延迟级别数组</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;">[] latencyMax </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">50L</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100L</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">550L</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1000L</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2000L</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3000L</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">15000L</span><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 不可用时长数组</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;">[] notAvailableDuration </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#005CC5;">0L</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0L</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">30000L</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">60000L</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">120000L</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">180000L</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">600000L</span><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 根据 Topic发布信息 选择一个消息队列</span></span>
<span class="line"><span style="color:#6A737D;">      *</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">tpInfo</span><span style="color:#6A737D;"> Topic发布信息</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">lastBrokerName</span><span style="color:#6A737D;"> brokerName</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> 消息队列</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> MessageQueue </span><span style="color:#6F42C1;">selectOneMessageQueue</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> TopicPublishInfo </span><span style="color:#E36209;">tpInfo</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String </span><span style="color:#E36209;">lastBrokerName</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.sendLatencyFaultEnable) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 获取 brokerName=lastBrokerName &amp;&amp; 可用的一个消息队列</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tpInfo.</span><span style="color:#6F42C1;">getSendWhichQueue</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getAndIncrement</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> tpInfo.</span><span style="color:#6F42C1;">getMessageQueueList</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">(); i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> pos </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">abs</span><span style="color:#24292E;">(index</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> tpInfo.</span><span style="color:#6F42C1;">getMessageQueueList</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (pos </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                        pos </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                    MessageQueue mq </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tpInfo.</span><span style="color:#6F42C1;">getMessageQueueList</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(pos);</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (latencyFaultTolerance.</span><span style="color:#6F42C1;">isAvailable</span><span style="color:#24292E;">(mq.</span><span style="color:#6F42C1;">getBrokerName</span><span style="color:#24292E;">())) {</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> lastBrokerName </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> mq.</span><span style="color:#6F42C1;">getBrokerName</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(lastBrokerName))</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> mq;</span></span>
<span class="line"><span style="color:#24292E;">                    }</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 选择一个相对好的broker，并获得其对应的一个消息队列，不考虑该队列的可用性</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String notBestBroker </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> latencyFaultTolerance.</span><span style="color:#6F42C1;">pickOneAtLeast</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> writeQueueNums </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tpInfo.</span><span style="color:#6F42C1;">getQueueIdByBroker</span><span style="color:#24292E;">(notBestBroker);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (writeQueueNums </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> MessageQueue mq </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tpInfo.</span><span style="color:#6F42C1;">selectOneMessageQueue</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (notBestBroker </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                        mq.</span><span style="color:#6F42C1;">setBrokerName</span><span style="color:#24292E;">(notBestBroker);</span></span>
<span class="line"><span style="color:#24292E;">                        mq.</span><span style="color:#6F42C1;">setQueueId</span><span style="color:#24292E;">(tpInfo.</span><span style="color:#6F42C1;">getSendWhichQueue</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">getAndIncrement</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> writeQueueNums);</span></span>
<span class="line"><span style="color:#24292E;">                    }</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> mq;</span></span>
<span class="line"><span style="color:#24292E;">                } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                    latencyFaultTolerance.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">(notBestBroker);</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (Exception </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                log.</span><span style="color:#6F42C1;">error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Error occurred when selecting message queue&quot;</span><span style="color:#24292E;">, e);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 选择一个消息队列，不考虑队列的可用性</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> tpInfo.</span><span style="color:#6F42C1;">selectOneMessageQueue</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 获得 lastBrokerName 对应的一个消息队列，不考虑该队列的可用性</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> tpInfo.</span><span style="color:#6F42C1;">selectOneMessageQueue</span><span style="color:#24292E;">(lastBrokerName);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 更新延迟容错信息</span></span>
<span class="line"><span style="color:#6A737D;">      *</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">brokerName</span><span style="color:#6A737D;"> brokerName</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">currentLatency</span><span style="color:#6A737D;"> 延迟</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">isolation</span><span style="color:#6A737D;"> 是否隔离。当开启隔离时，默认延迟为30000。目前主要用于发送消息异常时</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateFaultItem</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String </span><span style="color:#E36209;">brokerName</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> </span><span style="color:#E36209;">currentLatency</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#E36209;">isolation</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.sendLatencyFaultEnable) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> duration </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">computeNotAvailableDuration</span><span style="color:#24292E;">(isolation </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">30000</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> currentLatency);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.latencyFaultTolerance.</span><span style="color:#6F42C1;">updateFaultItem</span><span style="color:#24292E;">(brokerName, currentLatency, duration);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 计算延迟对应的不可用时间</span></span>
<span class="line"><span style="color:#6A737D;">      *</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">currentLatency</span><span style="color:#6A737D;"> 延迟</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> 不可用时间</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">computeNotAvailableDuration</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> </span><span style="color:#E36209;">currentLatency</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> latencyMax.length </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (currentLatency </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> latencyMax[i])</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.notAvailableDuration[i];</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li><p>更新延迟容错信息。当 <code>Producer</code> 发送消息时间过长，则逻辑认为N秒内不可用。按照<code>latencyMax</code>，<code>notAvailableDuration</code>的配置，对应如下：</p><table><thead><tr><th style="text-align:left;">Producer发送消息消耗时长</th><th style="text-align:left;">Broker不可用时长</th></tr></thead><tbody><tr><td style="text-align:left;">&gt;= 15000 ms</td><td style="text-align:left;">600 * 1000 ms</td></tr><tr><td style="text-align:left;">&gt;= 3000 ms</td><td style="text-align:left;">180 * 1000 ms</td></tr><tr><td style="text-align:left;">&gt;= 2000 ms</td><td style="text-align:left;">120 * 1000 ms</td></tr><tr><td style="text-align:left;">&gt;= 1000 ms</td><td style="text-align:left;">60 * 1000 ms</td></tr><tr><td style="text-align:left;">&gt;= 550 ms</td><td style="text-align:left;">30 * 1000 ms</td></tr><tr><td style="text-align:left;">&gt;= 100 ms</td><td style="text-align:left;">0 ms</td></tr><tr><td style="text-align:left;">&gt;= 50 ms</td><td style="text-align:left;">0 ms</td></tr></tbody></table></li></ul><p>LatencyFaultTolerance</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LatencyFaultTolerance</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">T</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 更新对应的延迟和不可用时长</span></span>
<span class="line"><span style="color:#6A737D;">     *</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#FFAB70;">name</span><span style="color:#6A737D;"> 对象</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#FFAB70;">currentLatency</span><span style="color:#6A737D;"> 延迟</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#FFAB70;">notAvailableDuration</span><span style="color:#6A737D;"> 不可用时长</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateFaultItem</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> T </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">currentLatency</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">notAvailableDuration</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 对象是否可用</span></span>
<span class="line"><span style="color:#6A737D;">     *</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#FFAB70;">name</span><span style="color:#6A737D;"> 对象</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> 是否可用</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isAvailable</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> T </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 移除对象</span></span>
<span class="line"><span style="color:#6A737D;">     *</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#FFAB70;">name</span><span style="color:#6A737D;"> 对象</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> T </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 获取一个对象</span></span>
<span class="line"><span style="color:#6A737D;">     *</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> 对象</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    T </span><span style="color:#B392F0;">pickOneAtLeast</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LatencyFaultTolerance</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">T</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 更新对应的延迟和不可用时长</span></span>
<span class="line"><span style="color:#6A737D;">     *</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">name</span><span style="color:#6A737D;"> 对象</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">currentLatency</span><span style="color:#6A737D;"> 延迟</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">notAvailableDuration</span><span style="color:#6A737D;"> 不可用时长</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateFaultItem</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> T </span><span style="color:#E36209;">name</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> </span><span style="color:#E36209;">currentLatency</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> </span><span style="color:#E36209;">notAvailableDuration</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 对象是否可用</span></span>
<span class="line"><span style="color:#6A737D;">     *</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">name</span><span style="color:#6A737D;"> 对象</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> 是否可用</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isAvailable</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> T </span><span style="color:#E36209;">name</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 移除对象</span></span>
<span class="line"><span style="color:#6A737D;">     *</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">name</span><span style="color:#6A737D;"> 对象</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> T </span><span style="color:#E36209;">name</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 获取一个对象</span></span>
<span class="line"><span style="color:#6A737D;">     *</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> 对象</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    T </span><span style="color:#6F42C1;">pickOneAtLeast</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>说明 ：延迟故障容错接口</li></ul><p>LatencyFaultToleranceImpl</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LatencyFaultToleranceImpl</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">LatencyFaultTolerance</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"> /**</span></span>
<span class="line"><span style="color:#6A737D;">  * 对象故障信息Table</span></span>
<span class="line"><span style="color:#6A737D;">  */</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> ConcurrentHashMap&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">FaultItem</span><span style="color:#E1E4E8;">&gt; faultItemTable </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> ConcurrentHashMap&lt;&gt;(</span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;"> /**</span></span>
<span class="line"><span style="color:#6A737D;">  * 对象选择Index</span></span>
<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@see</span><span style="color:#6A737D;"> #pickOneAtLeast()</span></span>
<span class="line"><span style="color:#6A737D;">  */</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> ThreadLocalIndex whichItemWorst </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ThreadLocalIndex</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"> @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateFaultItem</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">currentLatency</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">notAvailableDuration</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	 FaultItem old </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.faultItemTable.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(name);</span></span>
<span class="line"><span style="color:#E1E4E8;">	 </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> old) {</span></span>
<span class="line"><span style="color:#E1E4E8;">		 </span><span style="color:#6A737D;">// 创建对象</span></span>
<span class="line"><span style="color:#E1E4E8;">		 </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> FaultItem faultItem </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FaultItem</span><span style="color:#E1E4E8;">(name);</span></span>
<span class="line"><span style="color:#E1E4E8;">		 faultItem.</span><span style="color:#B392F0;">setCurrentLatency</span><span style="color:#E1E4E8;">(currentLatency);</span></span>
<span class="line"><span style="color:#E1E4E8;">		 faultItem.</span><span style="color:#B392F0;">setStartTimestamp</span><span style="color:#E1E4E8;">(System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> notAvailableDuration);</span></span>
<span class="line"><span style="color:#E1E4E8;">		 </span><span style="color:#6A737D;">// 更新对象</span></span>
<span class="line"><span style="color:#E1E4E8;">		 old </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.faultItemTable.</span><span style="color:#B392F0;">putIfAbsent</span><span style="color:#E1E4E8;">(name, faultItem);</span></span>
<span class="line"><span style="color:#E1E4E8;">		 </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (old </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">			 old.</span><span style="color:#B392F0;">setCurrentLatency</span><span style="color:#E1E4E8;">(currentLatency);</span></span>
<span class="line"><span style="color:#E1E4E8;">			 old.</span><span style="color:#B392F0;">setStartTimestamp</span><span style="color:#E1E4E8;">(System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> notAvailableDuration);</span></span>
<span class="line"><span style="color:#E1E4E8;">		 }</span></span>
<span class="line"><span style="color:#E1E4E8;">	 } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> { </span><span style="color:#6A737D;">// 更新对象</span></span>
<span class="line"><span style="color:#E1E4E8;">		 old.</span><span style="color:#B392F0;">setCurrentLatency</span><span style="color:#E1E4E8;">(currentLatency);</span></span>
<span class="line"><span style="color:#E1E4E8;">		 old.</span><span style="color:#B392F0;">setStartTimestamp</span><span style="color:#E1E4E8;">(System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> notAvailableDuration);</span></span>
<span class="line"><span style="color:#E1E4E8;">	 }</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"> @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isAvailable</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	 </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> FaultItem faultItem </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.faultItemTable.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(name);</span></span>
<span class="line"><span style="color:#E1E4E8;">	 </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (faultItem </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">		 </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> faultItem.</span><span style="color:#B392F0;">isAvailable</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">	 }</span></span>
<span class="line"><span style="color:#E1E4E8;">	 </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"> @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	 </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.faultItemTable.</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">(name);</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"> /**</span></span>
<span class="line"><span style="color:#6A737D;">  * 选择一个相对优秀的对象</span></span>
<span class="line"><span style="color:#6A737D;">  *</span></span>
<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> 对象</span></span>
<span class="line"><span style="color:#6A737D;">  */</span></span>
<span class="line"><span style="color:#E1E4E8;"> @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">pickOneAtLeast</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">	 </span><span style="color:#6A737D;">// 创建数组</span></span>
<span class="line"><span style="color:#E1E4E8;">	 </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> Enumeration&lt;</span><span style="color:#F97583;">FaultItem</span><span style="color:#E1E4E8;">&gt; elements </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.faultItemTable.</span><span style="color:#B392F0;">elements</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">	 List&lt;</span><span style="color:#F97583;">FaultItem</span><span style="color:#E1E4E8;">&gt; tmpList </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedList&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">	 </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> (elements.</span><span style="color:#B392F0;">hasMoreElements</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">		 </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> FaultItem faultItem </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> elements.</span><span style="color:#B392F0;">nextElement</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">		 tmpList.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(faultItem);</span></span>
<span class="line"><span style="color:#E1E4E8;">	 }</span></span>
<span class="line"><span style="color:#E1E4E8;">	 </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">	 </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">tmpList.</span><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">		 </span><span style="color:#6A737D;">// 打乱 + 排序。TODO 疑问：应该只能二选一。猜测Collections.shuffle(tmpList)去掉。</span></span>
<span class="line"><span style="color:#E1E4E8;">		 Collections.</span><span style="color:#B392F0;">shuffle</span><span style="color:#E1E4E8;">(tmpList);</span></span>
<span class="line"><span style="color:#E1E4E8;">		 Collections.</span><span style="color:#B392F0;">sort</span><span style="color:#E1E4E8;">(tmpList);</span></span>
<span class="line"><span style="color:#E1E4E8;">		 </span><span style="color:#6A737D;">// 选择顺序在前一半的对象</span></span>
<span class="line"><span style="color:#E1E4E8;">		 </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> half </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tmpList.</span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">		 </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (half </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">			 </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> tmpList.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">		 } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">			 </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.whichItemWorst.</span><span style="color:#B392F0;">getAndIncrement</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> half;</span></span>
<span class="line"><span style="color:#E1E4E8;">			 </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> tmpList.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(i).</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">		 }</span></span>
<span class="line"><span style="color:#E1E4E8;">	 }</span></span>
<span class="line"><span style="color:#E1E4E8;">	 </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LatencyFaultToleranceImpl</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">LatencyFaultTolerance</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"> /**</span></span>
<span class="line"><span style="color:#6A737D;">  * 对象故障信息Table</span></span>
<span class="line"><span style="color:#6A737D;">  */</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> ConcurrentHashMap&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">FaultItem</span><span style="color:#24292E;">&gt; faultItemTable </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ConcurrentHashMap&lt;&gt;(</span><span style="color:#005CC5;">16</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;"> /**</span></span>
<span class="line"><span style="color:#6A737D;">  * 对象选择Index</span></span>
<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#D73A49;">@see</span><span style="color:#6A737D;"> #pickOneAtLeast()</span></span>
<span class="line"><span style="color:#6A737D;">  */</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> ThreadLocalIndex whichItemWorst </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ThreadLocalIndex</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"> @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateFaultItem</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String </span><span style="color:#E36209;">name</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> </span><span style="color:#E36209;">currentLatency</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> </span><span style="color:#E36209;">notAvailableDuration</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">	 FaultItem old </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.faultItemTable.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(name);</span></span>
<span class="line"><span style="color:#24292E;">	 </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> old) {</span></span>
<span class="line"><span style="color:#24292E;">		 </span><span style="color:#6A737D;">// 创建对象</span></span>
<span class="line"><span style="color:#24292E;">		 </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> FaultItem faultItem </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FaultItem</span><span style="color:#24292E;">(name);</span></span>
<span class="line"><span style="color:#24292E;">		 faultItem.</span><span style="color:#6F42C1;">setCurrentLatency</span><span style="color:#24292E;">(currentLatency);</span></span>
<span class="line"><span style="color:#24292E;">		 faultItem.</span><span style="color:#6F42C1;">setStartTimestamp</span><span style="color:#24292E;">(System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> notAvailableDuration);</span></span>
<span class="line"><span style="color:#24292E;">		 </span><span style="color:#6A737D;">// 更新对象</span></span>
<span class="line"><span style="color:#24292E;">		 old </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.faultItemTable.</span><span style="color:#6F42C1;">putIfAbsent</span><span style="color:#24292E;">(name, faultItem);</span></span>
<span class="line"><span style="color:#24292E;">		 </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (old </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			 old.</span><span style="color:#6F42C1;">setCurrentLatency</span><span style="color:#24292E;">(currentLatency);</span></span>
<span class="line"><span style="color:#24292E;">			 old.</span><span style="color:#6F42C1;">setStartTimestamp</span><span style="color:#24292E;">(System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> notAvailableDuration);</span></span>
<span class="line"><span style="color:#24292E;">		 }</span></span>
<span class="line"><span style="color:#24292E;">	 } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> { </span><span style="color:#6A737D;">// 更新对象</span></span>
<span class="line"><span style="color:#24292E;">		 old.</span><span style="color:#6F42C1;">setCurrentLatency</span><span style="color:#24292E;">(currentLatency);</span></span>
<span class="line"><span style="color:#24292E;">		 old.</span><span style="color:#6F42C1;">setStartTimestamp</span><span style="color:#24292E;">(System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> notAvailableDuration);</span></span>
<span class="line"><span style="color:#24292E;">	 }</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"> @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isAvailable</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String </span><span style="color:#E36209;">name</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">	 </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> FaultItem faultItem </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.faultItemTable.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(name);</span></span>
<span class="line"><span style="color:#24292E;">	 </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (faultItem </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">		 </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> faultItem.</span><span style="color:#6F42C1;">isAvailable</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">	 }</span></span>
<span class="line"><span style="color:#24292E;">	 </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"> @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String </span><span style="color:#E36209;">name</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">	 </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.faultItemTable.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">(name);</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"> /**</span></span>
<span class="line"><span style="color:#6A737D;">  * 选择一个相对优秀的对象</span></span>
<span class="line"><span style="color:#6A737D;">  *</span></span>
<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> 对象</span></span>
<span class="line"><span style="color:#6A737D;">  */</span></span>
<span class="line"><span style="color:#24292E;"> @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">pickOneAtLeast</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">	 </span><span style="color:#6A737D;">// 创建数组</span></span>
<span class="line"><span style="color:#24292E;">	 </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> Enumeration&lt;</span><span style="color:#D73A49;">FaultItem</span><span style="color:#24292E;">&gt; elements </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.faultItemTable.</span><span style="color:#6F42C1;">elements</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">	 List&lt;</span><span style="color:#D73A49;">FaultItem</span><span style="color:#24292E;">&gt; tmpList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedList&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">	 </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (elements.</span><span style="color:#6F42C1;">hasMoreElements</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">		 </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> FaultItem faultItem </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> elements.</span><span style="color:#6F42C1;">nextElement</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">		 tmpList.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(faultItem);</span></span>
<span class="line"><span style="color:#24292E;">	 }</span></span>
<span class="line"><span style="color:#24292E;">	 </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">	 </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">tmpList.</span><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">		 </span><span style="color:#6A737D;">// 打乱 + 排序。TODO 疑问：应该只能二选一。猜测Collections.shuffle(tmpList)去掉。</span></span>
<span class="line"><span style="color:#24292E;">		 Collections.</span><span style="color:#6F42C1;">shuffle</span><span style="color:#24292E;">(tmpList);</span></span>
<span class="line"><span style="color:#24292E;">		 Collections.</span><span style="color:#6F42C1;">sort</span><span style="color:#24292E;">(tmpList);</span></span>
<span class="line"><span style="color:#24292E;">		 </span><span style="color:#6A737D;">// 选择顺序在前一半的对象</span></span>
<span class="line"><span style="color:#24292E;">		 </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> half </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tmpList.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		 </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (half </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">			 </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> tmpList.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">		 } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">			 </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.whichItemWorst.</span><span style="color:#6F42C1;">getAndIncrement</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> half;</span></span>
<span class="line"><span style="color:#24292E;">			 </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> tmpList.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(i).</span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">		 }</span></span>
<span class="line"><span style="color:#24292E;">	 }</span></span>
<span class="line"><span style="color:#24292E;">	 </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>说明 ：延迟故障容错实现。维护每个对象的信息。</li></ul><p>FaultItem</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FaultItem</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Comparable</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">FaultItem</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 对象名</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String name;</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 延迟</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">volatile</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> currentLatency;</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 开始可用时间</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">volatile</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> startTimestamp;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FaultItem</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> name;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 比较对象</span></span>
<span class="line"><span style="color:#6A737D;">      * 可用性 &gt; 延迟 &gt; 开始可用时间</span></span>
<span class="line"><span style="color:#6A737D;">      *</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#FFAB70;">other</span><span style="color:#6A737D;"> other</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> 升序</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">compareTo</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> FaultItem </span><span style="color:#FFAB70;">other</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">isAvailable</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> other.</span><span style="color:#B392F0;">isAvailable</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">isAvailable</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (other.</span><span style="color:#B392F0;">isAvailable</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.currentLatency </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> other.currentLatency)</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.currentLatency </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> other.currentLatency) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.startTimestamp </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> other.startTimestamp)</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.startTimestamp </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> other.startTimestamp) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 是否可用：当开始可用时间大于当前时间</span></span>
<span class="line"><span style="color:#6A737D;">      *</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> 是否可用</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isAvailable</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> startTimestamp) </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hashCode</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">hashCode</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">31</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> result </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">) (</span><span style="color:#B392F0;">getCurrentLatency</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">^</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">getCurrentLatency</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">&gt;&gt;&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">        result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">31</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> result </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">) (</span><span style="color:#B392F0;">getStartTimestamp</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">^</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">getStartTimestamp</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">&gt;&gt;&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> result;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> Object </span><span style="color:#FFAB70;">o</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> o)</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">(o </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> FaultItem))</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> FaultItem faultItem </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (FaultItem) o;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">getCurrentLatency</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> faultItem.</span><span style="color:#B392F0;">getCurrentLatency</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">getStartTimestamp</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> faultItem.</span><span style="color:#B392F0;">getStartTimestamp</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(faultItem.</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">()) </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> faultItem.</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FaultItem</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Comparable</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">FaultItem</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 对象名</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String name;</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 延迟</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">volatile</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> currentLatency;</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 开始可用时间</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">volatile</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> startTimestamp;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FaultItem</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String </span><span style="color:#E36209;">name</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> name;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 比较对象</span></span>
<span class="line"><span style="color:#6A737D;">      * 可用性 &gt; 延迟 &gt; 开始可用时间</span></span>
<span class="line"><span style="color:#6A737D;">      *</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">other</span><span style="color:#6A737D;"> other</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> 升序</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">compareTo</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> FaultItem </span><span style="color:#E36209;">other</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">isAvailable</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> other.</span><span style="color:#6F42C1;">isAvailable</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">isAvailable</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (other.</span><span style="color:#6F42C1;">isAvailable</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.currentLatency </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> other.currentLatency)</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.currentLatency </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> other.currentLatency) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.startTimestamp </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> other.startTimestamp)</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.startTimestamp </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> other.startTimestamp) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">      * 是否可用：当开始可用时间大于当前时间</span></span>
<span class="line"><span style="color:#6A737D;">      *</span></span>
<span class="line"><span style="color:#6A737D;">      * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> 是否可用</span></span>
<span class="line"><span style="color:#6A737D;">      */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isAvailable</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> startTimestamp) </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hashCode</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">hashCode</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">31</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> result </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">) (</span><span style="color:#6F42C1;">getCurrentLatency</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">^</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">getCurrentLatency</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">&gt;&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">32</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">        result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">31</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> result </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">) (</span><span style="color:#6F42C1;">getStartTimestamp</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">^</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">getStartTimestamp</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">&gt;&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">32</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> result;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> Object </span><span style="color:#E36209;">o</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> o)</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">(o </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> FaultItem))</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> FaultItem faultItem </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (FaultItem) o;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">getCurrentLatency</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> faultItem.</span><span style="color:#6F42C1;">getCurrentLatency</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">getStartTimestamp</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> faultItem.</span><span style="color:#6F42C1;">getStartTimestamp</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(faultItem.</span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">()) </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> faultItem.</span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>说明 ：对象故障信息。维护对象的名字、延迟、开始可用的时间。</li></ul><p>DefaultMQProducerImpl#sendKernelImpl()</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> SendResult </span><span style="color:#B392F0;">sendKernelImpl</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> Message msg, </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">                                  </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> MessageQueue mq, </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">                                  </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> CommunicationMode communicationMode, </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">                                  </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> SendCallback sendCallback, </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">                                  </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> TopicPublishInfo topicPublishInfo, </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">                                  </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> timeout) throws MQClientException, RemotingException, MQBrokerException, InterruptedException {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 获取 broker地址</span></span>
<span class="line"><span style="color:#E1E4E8;">    String brokerAddr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.mQClientFactory.</span><span style="color:#B392F0;">findBrokerAddressInPublish</span><span style="color:#E1E4E8;">(mq.</span><span style="color:#B392F0;">getBrokerName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> brokerAddr) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">tryToFindTopicPublishInfo</span><span style="color:#E1E4E8;">(mq.</span><span style="color:#B392F0;">getTopic</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">        brokerAddr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.mQClientFactory.</span><span style="color:#B392F0;">findBrokerAddressInPublish</span><span style="color:#E1E4E8;">(mq.</span><span style="color:#B392F0;">getBrokerName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">    SendMessageContext context </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (brokerAddr </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 是否使用broker vip通道。broker会开启两个端口对外服务。</span></span>
<span class="line"><span style="color:#E1E4E8;">        brokerAddr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> MixAll.</span><span style="color:#B392F0;">brokerVIPChannel</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.defaultMQProducer.</span><span style="color:#B392F0;">isSendMessageWithVIPChannel</span><span style="color:#E1E4E8;">(), brokerAddr);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">byte</span><span style="color:#E1E4E8;">[] prevBody </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> msg.</span><span style="color:#B392F0;">getBody</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// 记录消息内容。下面逻辑可能改变消息内容，例如消息压缩。</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 设置唯一编号</span></span>
<span class="line"><span style="color:#E1E4E8;">            MessageClientIDSetter.</span><span style="color:#B392F0;">setUniqID</span><span style="color:#E1E4E8;">(msg);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 消息压缩</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> sysFlag </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">tryToCompressMessage</span><span style="color:#E1E4E8;">(msg)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                sysFlag </span><span style="color:#F97583;">|=</span><span style="color:#E1E4E8;"> MessageSysFlag.COMPRESSED_FLAG;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 事务</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String tranMsg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> msg.</span><span style="color:#B392F0;">getProperty</span><span style="color:#E1E4E8;">(MessageConst.PROPERTY_TRANSACTION_PREPARED);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (tranMsg </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> Boolean.</span><span style="color:#B392F0;">parseBoolean</span><span style="color:#E1E4E8;">(tranMsg)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                sysFlag </span><span style="color:#F97583;">|=</span><span style="color:#E1E4E8;"> MessageSysFlag.TRANSACTION_PREPARED_TYPE;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// hook：发送消息校验</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">hasCheckForbiddenHook</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                CheckForbiddenContext checkForbiddenContext </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CheckForbiddenContext</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                checkForbiddenContext.</span><span style="color:#B392F0;">setNameSrvAddr</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.defaultMQProducer.</span><span style="color:#B392F0;">getNamesrvAddr</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">                checkForbiddenContext.</span><span style="color:#B392F0;">setGroup</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.defaultMQProducer.</span><span style="color:#B392F0;">getProducerGroup</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">                checkForbiddenContext.</span><span style="color:#B392F0;">setCommunicationMode</span><span style="color:#E1E4E8;">(communicationMode);</span></span>
<span class="line"><span style="color:#E1E4E8;">                checkForbiddenContext.</span><span style="color:#B392F0;">setBrokerAddr</span><span style="color:#E1E4E8;">(brokerAddr);</span></span>
<span class="line"><span style="color:#E1E4E8;">                checkForbiddenContext.</span><span style="color:#B392F0;">setMessage</span><span style="color:#E1E4E8;">(msg);</span></span>
<span class="line"><span style="color:#E1E4E8;">                checkForbiddenContext.</span><span style="color:#B392F0;">setMq</span><span style="color:#E1E4E8;">(mq);</span></span>
<span class="line"><span style="color:#E1E4E8;">                checkForbiddenContext.</span><span style="color:#B392F0;">setUnitMode</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">isUnitMode</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">executeCheckForbiddenHook</span><span style="color:#E1E4E8;">(checkForbiddenContext);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// hook：发送消息前逻辑</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">hasSendMessageHook</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                context </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SendMessageContext</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                context.</span><span style="color:#B392F0;">setProducer</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                context.</span><span style="color:#B392F0;">setProducerGroup</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.defaultMQProducer.</span><span style="color:#B392F0;">getProducerGroup</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">                context.</span><span style="color:#B392F0;">setCommunicationMode</span><span style="color:#E1E4E8;">(communicationMode);</span></span>
<span class="line"><span style="color:#E1E4E8;">                context.</span><span style="color:#B392F0;">setBornHost</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.defaultMQProducer.</span><span style="color:#B392F0;">getClientIP</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">                context.</span><span style="color:#B392F0;">setBrokerAddr</span><span style="color:#E1E4E8;">(brokerAddr);</span></span>
<span class="line"><span style="color:#E1E4E8;">                context.</span><span style="color:#B392F0;">setMessage</span><span style="color:#E1E4E8;">(msg);</span></span>
<span class="line"><span style="color:#E1E4E8;">                context.</span><span style="color:#B392F0;">setMq</span><span style="color:#E1E4E8;">(mq);</span></span>
<span class="line"><span style="color:#E1E4E8;">                String isTrans </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> msg.</span><span style="color:#B392F0;">getProperty</span><span style="color:#E1E4E8;">(MessageConst.PROPERTY_TRANSACTION_PREPARED);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (isTrans </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> isTrans.</span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;true&quot;</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    context.</span><span style="color:#B392F0;">setMsgType</span><span style="color:#E1E4E8;">(MessageType.Trans_Msg_Half);</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (msg.</span><span style="color:#B392F0;">getProperty</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;__STARTDELIVERTIME&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> msg.</span><span style="color:#B392F0;">getProperty</span><span style="color:#E1E4E8;">(MessageConst.PROPERTY_DELAY_TIME_LEVEL) </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    context.</span><span style="color:#B392F0;">setMsgType</span><span style="color:#E1E4E8;">(MessageType.Delay_Msg);</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">executeSendMessageHookBefore</span><span style="color:#E1E4E8;">(context);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 构建发送消息请求</span></span>
<span class="line"><span style="color:#E1E4E8;">            SendMessageRequestHeader requestHeader </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SendMessageRequestHeader</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            requestHeader.</span><span style="color:#B392F0;">setProducerGroup</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.defaultMQProducer.</span><span style="color:#B392F0;">getProducerGroup</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">            requestHeader.</span><span style="color:#B392F0;">setTopic</span><span style="color:#E1E4E8;">(msg.</span><span style="color:#B392F0;">getTopic</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">            requestHeader.</span><span style="color:#B392F0;">setDefaultTopic</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.defaultMQProducer.</span><span style="color:#B392F0;">getCreateTopicKey</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">            requestHeader.</span><span style="color:#B392F0;">setDefaultTopicQueueNums</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.defaultMQProducer.</span><span style="color:#B392F0;">getDefaultTopicQueueNums</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">            requestHeader.</span><span style="color:#B392F0;">setQueueId</span><span style="color:#E1E4E8;">(mq.</span><span style="color:#B392F0;">getQueueId</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">            requestHeader.</span><span style="color:#B392F0;">setSysFlag</span><span style="color:#E1E4E8;">(sysFlag);</span></span>
<span class="line"><span style="color:#E1E4E8;">            requestHeader.</span><span style="color:#B392F0;">setBornTimestamp</span><span style="color:#E1E4E8;">(System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">            requestHeader.</span><span style="color:#B392F0;">setFlag</span><span style="color:#E1E4E8;">(msg.</span><span style="color:#B392F0;">getFlag</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">            requestHeader.</span><span style="color:#B392F0;">setProperties</span><span style="color:#E1E4E8;">(MessageDecoder.</span><span style="color:#B392F0;">messageProperties2String</span><span style="color:#E1E4E8;">(msg.</span><span style="color:#B392F0;">getProperties</span><span style="color:#E1E4E8;">()));</span></span>
<span class="line"><span style="color:#E1E4E8;">            requestHeader.</span><span style="color:#B392F0;">setReconsumeTimes</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            requestHeader.</span><span style="color:#B392F0;">setUnitMode</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">isUnitMode</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (requestHeader.</span><span style="color:#B392F0;">getTopic</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">startsWith</span><span style="color:#E1E4E8;">(MixAll.RETRY_GROUP_TOPIC_PREFIX)) { </span><span style="color:#6A737D;">// 消息重发Topic</span></span>
<span class="line"><span style="color:#E1E4E8;">                String reconsumeTimes </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> MessageAccessor.</span><span style="color:#B392F0;">getReconsumeTime</span><span style="color:#E1E4E8;">(msg);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (reconsumeTimes </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    requestHeader.</span><span style="color:#B392F0;">setReconsumeTimes</span><span style="color:#E1E4E8;">(Integer.</span><span style="color:#B392F0;">valueOf</span><span style="color:#E1E4E8;">(reconsumeTimes));</span></span>
<span class="line"><span style="color:#E1E4E8;">                    MessageAccessor.</span><span style="color:#B392F0;">clearProperty</span><span style="color:#E1E4E8;">(msg, MessageConst.PROPERTY_RECONSUME_TIME);</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">                String maxReconsumeTimes </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> MessageAccessor.</span><span style="color:#B392F0;">getMaxReconsumeTimes</span><span style="color:#E1E4E8;">(msg);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (maxReconsumeTimes </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    requestHeader.</span><span style="color:#B392F0;">setMaxReconsumeTimes</span><span style="color:#E1E4E8;">(Integer.</span><span style="color:#B392F0;">valueOf</span><span style="color:#E1E4E8;">(maxReconsumeTimes));</span></span>
<span class="line"><span style="color:#E1E4E8;">                    MessageAccessor.</span><span style="color:#B392F0;">clearProperty</span><span style="color:#E1E4E8;">(msg, MessageConst.PROPERTY_MAX_RECONSUME_TIMES);</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 发送消息</span></span>
<span class="line"><span style="color:#E1E4E8;">            SendResult sendResult </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (communicationMode) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> ASYNC</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                    sendResult </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.mQClientFactory.</span><span style="color:#B392F0;">getMQClientAPIImpl</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">sendMessage</span><span style="color:#E1E4E8;">(</span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">                        brokerAddr, </span><span style="color:#6A737D;">// 1</span></span>
<span class="line"><span style="color:#E1E4E8;">                        mq.</span><span style="color:#B392F0;">getBrokerName</span><span style="color:#E1E4E8;">(), </span><span style="color:#6A737D;">// 2</span></span>
<span class="line"><span style="color:#E1E4E8;">                        msg, </span><span style="color:#6A737D;">// 3</span></span>
<span class="line"><span style="color:#E1E4E8;">                        requestHeader, </span><span style="color:#6A737D;">// 4</span></span>
<span class="line"><span style="color:#E1E4E8;">                        timeout, </span><span style="color:#6A737D;">// 5</span></span>
<span class="line"><span style="color:#E1E4E8;">                        communicationMode, </span><span style="color:#6A737D;">// 6</span></span>
<span class="line"><span style="color:#E1E4E8;">                        sendCallback, </span><span style="color:#6A737D;">// 7</span></span>
<span class="line"><span style="color:#E1E4E8;">                        topicPublishInfo, </span><span style="color:#6A737D;">// 8</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.mQClientFactory, </span><span style="color:#6A737D;">// 9</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.defaultMQProducer.</span><span style="color:#B392F0;">getRetryTimesWhenSendAsyncFailed</span><span style="color:#E1E4E8;">(), </span><span style="color:#6A737D;">// 10</span></span>
<span class="line"><span style="color:#E1E4E8;">                        context, </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> ONEWAY</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> SYNC</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                    sendResult </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.mQClientFactory.</span><span style="color:#B392F0;">getMQClientAPIImpl</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">sendMessage</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">                        brokerAddr,</span></span>
<span class="line"><span style="color:#E1E4E8;">                        mq.</span><span style="color:#B392F0;">getBrokerName</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">                        msg,</span></span>
<span class="line"><span style="color:#E1E4E8;">                        requestHeader,</span></span>
<span class="line"><span style="color:#E1E4E8;">                        timeout,</span></span>
<span class="line"><span style="color:#E1E4E8;">                        communicationMode,</span></span>
<span class="line"><span style="color:#E1E4E8;">                        context,</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">default:</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">assert</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// hook：发送消息后逻辑</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">hasSendMessageHook</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                context.</span><span style="color:#B392F0;">setSendResult</span><span style="color:#E1E4E8;">(sendResult);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">executeSendMessageHookAfter</span><span style="color:#E1E4E8;">(context);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 返回发送结果</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> sendResult;</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (RemotingException </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">hasSendMessageHook</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                context.</span><span style="color:#B392F0;">setException</span><span style="color:#E1E4E8;">(e);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">executeSendMessageHookAfter</span><span style="color:#E1E4E8;">(context);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> e;</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (MQBrokerException </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">hasSendMessageHook</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                context.</span><span style="color:#B392F0;">setException</span><span style="color:#E1E4E8;">(e);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">executeSendMessageHookAfter</span><span style="color:#E1E4E8;">(context);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> e;</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (InterruptedException </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">hasSendMessageHook</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                context.</span><span style="color:#B392F0;">setException</span><span style="color:#E1E4E8;">(e);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">executeSendMessageHookAfter</span><span style="color:#E1E4E8;">(context);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> e;</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">finally</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            msg.</span><span style="color:#B392F0;">setBody</span><span style="color:#E1E4E8;">(prevBody);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// broker为空抛出异常</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MQClientException</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;The broker[&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> mq.</span><span style="color:#B392F0;">getBrokerName</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;] not exist&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> SendResult </span><span style="color:#6F42C1;">sendKernelImpl</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> Message msg, </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">                                  </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> MessageQueue mq, </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">                                  </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> CommunicationMode communicationMode, </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">                                  </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> SendCallback sendCallback, </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">                                  </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> TopicPublishInfo topicPublishInfo, </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">                                  </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> timeout) throws MQClientException, RemotingException, MQBrokerException, InterruptedException {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 获取 broker地址</span></span>
<span class="line"><span style="color:#24292E;">    String brokerAddr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.mQClientFactory.</span><span style="color:#6F42C1;">findBrokerAddressInPublish</span><span style="color:#24292E;">(mq.</span><span style="color:#6F42C1;">getBrokerName</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> brokerAddr) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">tryToFindTopicPublishInfo</span><span style="color:#24292E;">(mq.</span><span style="color:#6F42C1;">getTopic</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        brokerAddr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.mQClientFactory.</span><span style="color:#6F42C1;">findBrokerAddressInPublish</span><span style="color:#24292E;">(mq.</span><span style="color:#6F42C1;">getBrokerName</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">    SendMessageContext context </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (brokerAddr </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 是否使用broker vip通道。broker会开启两个端口对外服务。</span></span>
<span class="line"><span style="color:#24292E;">        brokerAddr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> MixAll.</span><span style="color:#6F42C1;">brokerVIPChannel</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.defaultMQProducer.</span><span style="color:#6F42C1;">isSendMessageWithVIPChannel</span><span style="color:#24292E;">(), brokerAddr);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">byte</span><span style="color:#24292E;">[] prevBody </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> msg.</span><span style="color:#6F42C1;">getBody</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// 记录消息内容。下面逻辑可能改变消息内容，例如消息压缩。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 设置唯一编号</span></span>
<span class="line"><span style="color:#24292E;">            MessageClientIDSetter.</span><span style="color:#6F42C1;">setUniqID</span><span style="color:#24292E;">(msg);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 消息压缩</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> sysFlag </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">tryToCompressMessage</span><span style="color:#24292E;">(msg)) {</span></span>
<span class="line"><span style="color:#24292E;">                sysFlag </span><span style="color:#D73A49;">|=</span><span style="color:#24292E;"> MessageSysFlag.COMPRESSED_FLAG;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 事务</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String tranMsg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> msg.</span><span style="color:#6F42C1;">getProperty</span><span style="color:#24292E;">(MessageConst.PROPERTY_TRANSACTION_PREPARED);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (tranMsg </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> Boolean.</span><span style="color:#6F42C1;">parseBoolean</span><span style="color:#24292E;">(tranMsg)) {</span></span>
<span class="line"><span style="color:#24292E;">                sysFlag </span><span style="color:#D73A49;">|=</span><span style="color:#24292E;"> MessageSysFlag.TRANSACTION_PREPARED_TYPE;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// hook：发送消息校验</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">hasCheckForbiddenHook</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">                CheckForbiddenContext checkForbiddenContext </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CheckForbiddenContext</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                checkForbiddenContext.</span><span style="color:#6F42C1;">setNameSrvAddr</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.defaultMQProducer.</span><span style="color:#6F42C1;">getNamesrvAddr</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                checkForbiddenContext.</span><span style="color:#6F42C1;">setGroup</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.defaultMQProducer.</span><span style="color:#6F42C1;">getProducerGroup</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                checkForbiddenContext.</span><span style="color:#6F42C1;">setCommunicationMode</span><span style="color:#24292E;">(communicationMode);</span></span>
<span class="line"><span style="color:#24292E;">                checkForbiddenContext.</span><span style="color:#6F42C1;">setBrokerAddr</span><span style="color:#24292E;">(brokerAddr);</span></span>
<span class="line"><span style="color:#24292E;">                checkForbiddenContext.</span><span style="color:#6F42C1;">setMessage</span><span style="color:#24292E;">(msg);</span></span>
<span class="line"><span style="color:#24292E;">                checkForbiddenContext.</span><span style="color:#6F42C1;">setMq</span><span style="color:#24292E;">(mq);</span></span>
<span class="line"><span style="color:#24292E;">                checkForbiddenContext.</span><span style="color:#6F42C1;">setUnitMode</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">isUnitMode</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">executeCheckForbiddenHook</span><span style="color:#24292E;">(checkForbiddenContext);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// hook：发送消息前逻辑</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">hasSendMessageHook</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">                context </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SendMessageContext</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                context.</span><span style="color:#6F42C1;">setProducer</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                context.</span><span style="color:#6F42C1;">setProducerGroup</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.defaultMQProducer.</span><span style="color:#6F42C1;">getProducerGroup</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                context.</span><span style="color:#6F42C1;">setCommunicationMode</span><span style="color:#24292E;">(communicationMode);</span></span>
<span class="line"><span style="color:#24292E;">                context.</span><span style="color:#6F42C1;">setBornHost</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.defaultMQProducer.</span><span style="color:#6F42C1;">getClientIP</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                context.</span><span style="color:#6F42C1;">setBrokerAddr</span><span style="color:#24292E;">(brokerAddr);</span></span>
<span class="line"><span style="color:#24292E;">                context.</span><span style="color:#6F42C1;">setMessage</span><span style="color:#24292E;">(msg);</span></span>
<span class="line"><span style="color:#24292E;">                context.</span><span style="color:#6F42C1;">setMq</span><span style="color:#24292E;">(mq);</span></span>
<span class="line"><span style="color:#24292E;">                String isTrans </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> msg.</span><span style="color:#6F42C1;">getProperty</span><span style="color:#24292E;">(MessageConst.PROPERTY_TRANSACTION_PREPARED);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (isTrans </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> isTrans.</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;true&quot;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">                    context.</span><span style="color:#6F42C1;">setMsgType</span><span style="color:#24292E;">(MessageType.Trans_Msg_Half);</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (msg.</span><span style="color:#6F42C1;">getProperty</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;__STARTDELIVERTIME&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> msg.</span><span style="color:#6F42C1;">getProperty</span><span style="color:#24292E;">(MessageConst.PROPERTY_DELAY_TIME_LEVEL) </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                    context.</span><span style="color:#6F42C1;">setMsgType</span><span style="color:#24292E;">(MessageType.Delay_Msg);</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">executeSendMessageHookBefore</span><span style="color:#24292E;">(context);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 构建发送消息请求</span></span>
<span class="line"><span style="color:#24292E;">            SendMessageRequestHeader requestHeader </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SendMessageRequestHeader</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            requestHeader.</span><span style="color:#6F42C1;">setProducerGroup</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.defaultMQProducer.</span><span style="color:#6F42C1;">getProducerGroup</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">            requestHeader.</span><span style="color:#6F42C1;">setTopic</span><span style="color:#24292E;">(msg.</span><span style="color:#6F42C1;">getTopic</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">            requestHeader.</span><span style="color:#6F42C1;">setDefaultTopic</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.defaultMQProducer.</span><span style="color:#6F42C1;">getCreateTopicKey</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">            requestHeader.</span><span style="color:#6F42C1;">setDefaultTopicQueueNums</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.defaultMQProducer.</span><span style="color:#6F42C1;">getDefaultTopicQueueNums</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">            requestHeader.</span><span style="color:#6F42C1;">setQueueId</span><span style="color:#24292E;">(mq.</span><span style="color:#6F42C1;">getQueueId</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">            requestHeader.</span><span style="color:#6F42C1;">setSysFlag</span><span style="color:#24292E;">(sysFlag);</span></span>
<span class="line"><span style="color:#24292E;">            requestHeader.</span><span style="color:#6F42C1;">setBornTimestamp</span><span style="color:#24292E;">(System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">            requestHeader.</span><span style="color:#6F42C1;">setFlag</span><span style="color:#24292E;">(msg.</span><span style="color:#6F42C1;">getFlag</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">            requestHeader.</span><span style="color:#6F42C1;">setProperties</span><span style="color:#24292E;">(MessageDecoder.</span><span style="color:#6F42C1;">messageProperties2String</span><span style="color:#24292E;">(msg.</span><span style="color:#6F42C1;">getProperties</span><span style="color:#24292E;">()));</span></span>
<span class="line"><span style="color:#24292E;">            requestHeader.</span><span style="color:#6F42C1;">setReconsumeTimes</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            requestHeader.</span><span style="color:#6F42C1;">setUnitMode</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">isUnitMode</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (requestHeader.</span><span style="color:#6F42C1;">getTopic</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">startsWith</span><span style="color:#24292E;">(MixAll.RETRY_GROUP_TOPIC_PREFIX)) { </span><span style="color:#6A737D;">// 消息重发Topic</span></span>
<span class="line"><span style="color:#24292E;">                String reconsumeTimes </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> MessageAccessor.</span><span style="color:#6F42C1;">getReconsumeTime</span><span style="color:#24292E;">(msg);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (reconsumeTimes </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                    requestHeader.</span><span style="color:#6F42C1;">setReconsumeTimes</span><span style="color:#24292E;">(Integer.</span><span style="color:#6F42C1;">valueOf</span><span style="color:#24292E;">(reconsumeTimes));</span></span>
<span class="line"><span style="color:#24292E;">                    MessageAccessor.</span><span style="color:#6F42C1;">clearProperty</span><span style="color:#24292E;">(msg, MessageConst.PROPERTY_RECONSUME_TIME);</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">                String maxReconsumeTimes </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> MessageAccessor.</span><span style="color:#6F42C1;">getMaxReconsumeTimes</span><span style="color:#24292E;">(msg);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (maxReconsumeTimes </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                    requestHeader.</span><span style="color:#6F42C1;">setMaxReconsumeTimes</span><span style="color:#24292E;">(Integer.</span><span style="color:#6F42C1;">valueOf</span><span style="color:#24292E;">(maxReconsumeTimes));</span></span>
<span class="line"><span style="color:#24292E;">                    MessageAccessor.</span><span style="color:#6F42C1;">clearProperty</span><span style="color:#24292E;">(msg, MessageConst.PROPERTY_MAX_RECONSUME_TIMES);</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 发送消息</span></span>
<span class="line"><span style="color:#24292E;">            SendResult sendResult </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (communicationMode) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> ASYNC</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">                    sendResult </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.mQClientFactory.</span><span style="color:#6F42C1;">getMQClientAPIImpl</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">sendMessage</span><span style="color:#24292E;">(</span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">                        brokerAddr, </span><span style="color:#6A737D;">// 1</span></span>
<span class="line"><span style="color:#24292E;">                        mq.</span><span style="color:#6F42C1;">getBrokerName</span><span style="color:#24292E;">(), </span><span style="color:#6A737D;">// 2</span></span>
<span class="line"><span style="color:#24292E;">                        msg, </span><span style="color:#6A737D;">// 3</span></span>
<span class="line"><span style="color:#24292E;">                        requestHeader, </span><span style="color:#6A737D;">// 4</span></span>
<span class="line"><span style="color:#24292E;">                        timeout, </span><span style="color:#6A737D;">// 5</span></span>
<span class="line"><span style="color:#24292E;">                        communicationMode, </span><span style="color:#6A737D;">// 6</span></span>
<span class="line"><span style="color:#24292E;">                        sendCallback, </span><span style="color:#6A737D;">// 7</span></span>
<span class="line"><span style="color:#24292E;">                        topicPublishInfo, </span><span style="color:#6A737D;">// 8</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.mQClientFactory, </span><span style="color:#6A737D;">// 9</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.defaultMQProducer.</span><span style="color:#6F42C1;">getRetryTimesWhenSendAsyncFailed</span><span style="color:#24292E;">(), </span><span style="color:#6A737D;">// 10</span></span>
<span class="line"><span style="color:#24292E;">                        context, </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> ONEWAY</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> SYNC</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">                    sendResult </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.mQClientFactory.</span><span style="color:#6F42C1;">getMQClientAPIImpl</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">sendMessage</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">                        brokerAddr,</span></span>
<span class="line"><span style="color:#24292E;">                        mq.</span><span style="color:#6F42C1;">getBrokerName</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">                        msg,</span></span>
<span class="line"><span style="color:#24292E;">                        requestHeader,</span></span>
<span class="line"><span style="color:#24292E;">                        timeout,</span></span>
<span class="line"><span style="color:#24292E;">                        communicationMode,</span></span>
<span class="line"><span style="color:#24292E;">                        context,</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">default:</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">assert</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// hook：发送消息后逻辑</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">hasSendMessageHook</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">                context.</span><span style="color:#6F42C1;">setSendResult</span><span style="color:#24292E;">(sendResult);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">executeSendMessageHookAfter</span><span style="color:#24292E;">(context);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 返回发送结果</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> sendResult;</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (RemotingException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">hasSendMessageHook</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">                context.</span><span style="color:#6F42C1;">setException</span><span style="color:#24292E;">(e);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">executeSendMessageHookAfter</span><span style="color:#24292E;">(context);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> e;</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (MQBrokerException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">hasSendMessageHook</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">                context.</span><span style="color:#6F42C1;">setException</span><span style="color:#24292E;">(e);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">executeSendMessageHookAfter</span><span style="color:#24292E;">(context);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> e;</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (InterruptedException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">hasSendMessageHook</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">                context.</span><span style="color:#6F42C1;">setException</span><span style="color:#24292E;">(e);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">executeSendMessageHookAfter</span><span style="color:#24292E;">(context);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> e;</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">finally</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            msg.</span><span style="color:#6F42C1;">setBody</span><span style="color:#24292E;">(prevBody);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// broker为空抛出异常</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MQClientException</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;The broker[&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> mq.</span><span style="color:#6F42C1;">getBrokerName</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;] not exist&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h5 id="broker-发送消息" tabindex="-1">Broker 发送消息 <a class="header-anchor" href="#broker-发送消息" aria-label="Permalink to &quot;Broker 发送消息&quot;">​</a></h5><p><img src="https://cdn.jsdelivr.net/gh/liuxiaowei2018/image/repo/202405301656254.png" alt="image-20220706111637175"></p><p>SendMessageProcessor#sendMessage</p><p>AbstractSendMessageProcessor#msgCheck</p><p>DefaultMessageStore#putMessage</p><h4 id="message-存储" tabindex="-1">Message 存储 <a class="header-anchor" href="#message-存储" aria-label="Permalink to &quot;Message 存储&quot;">​</a></h4><p>CommitLog</p>`,62),e=[o];function t(c,r,E,y,i,F){return n(),a("div",null,e)}const A=s(p,[["render",t]]);export{m as __pageData,A as default};
