import{_ as s,o as a,c as l,Q as n}from"./chunks/framework.8048b864.js";const g=JSON.parse('{"title":"Docker","description":"","frontmatter":{},"headers":[],"relativePath":"笔记/docker.md","filePath":"笔记/docker.md","lastUpdated":1718961457000}'),p={name:"笔记/docker.md"},o=n(`<h1 id="docker" tabindex="-1">Docker <a class="header-anchor" href="#docker" aria-label="Permalink to &quot;Docker&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#使用总结">使用总结</a><ul><li><a href="#如何文件拷贝">如何文件拷贝？</a></li><li><a href="#如何手动创建网络">如何手动创建网络？</a></li><li><a href="#docker访问加密">Docker访问加密</a></li></ul></li></ul></nav><h2 id="使用总结" tabindex="-1">使用总结 <a class="header-anchor" href="#使用总结" aria-label="Permalink to &quot;使用总结&quot;">​</a></h2><h3 id="如何文件拷贝" tabindex="-1">如何文件拷贝？ <a class="header-anchor" href="#如何文件拷贝" aria-label="Permalink to &quot;如何文件拷贝？&quot;">​</a></h3><blockquote><p>从主机拷贝到容器内</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cp</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./ik</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">05</span><span style="color:#9ECBFF;">cbbcbebcc2:/usr/share/elasticsearch/plugins</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cp</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./ik</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">05</span><span style="color:#032F62;">cbbcbebcc2:/usr/share/elasticsearch/plugins</span></span></code></pre></div><blockquote><p>从容器内拷贝文件到主机上</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cp</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">05</span><span style="color:#9ECBFF;">cbbcbebcc2:/usr/share/elasticsearch/config/elasticsearch.yml</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./config/elasticsearch.yml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cp</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">05</span><span style="color:#032F62;">cbbcbebcc2:/usr/share/elasticsearch/config/elasticsearch.yml</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./config/elasticsearch.yml</span></span></code></pre></div><h3 id="如何手动创建网络" tabindex="-1">如何手动创建网络？ <a class="header-anchor" href="#如何手动创建网络" aria-label="Permalink to &quot;如何手动创建网络？&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">network</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bridge</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mynetwork</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">network</span><span style="color:#24292E;"> </span><span style="color:#032F62;">create</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bridge</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mynetwork</span></span></code></pre></div><h3 id="docker访问加密" tabindex="-1">Docker访问加密 <a class="header-anchor" href="#docker访问加密" aria-label="Permalink to &quot;Docker访问加密&quot;">​</a></h3><h4 id="制作证书及秘钥" tabindex="-1">制作证书及秘钥 <a class="header-anchor" href="#制作证书及秘钥" aria-label="Permalink to &quot;制作证书及秘钥&quot;">​</a></h4><blockquote><p>使用OpenSSL制作CA机构证书、服务端证书和客户端证书，以下操作均在安装Docker的Linux服务器上进行。</p></blockquote><ul><li>首先创建一个目录用于存储生成的证书和秘钥；</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/home/docker-ca</span><span style="color:#E1E4E8;"> &amp;&amp; </span><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/home/docker-ca</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/home/docker-ca</span><span style="color:#24292E;"> &amp;&amp; </span><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/home/docker-ca</span></span></code></pre></div><ul><li>创建CA证书私钥，期间需要输入两次用户名和密码，生成文件为<code>ca-key.pem</code>；<strong>123456</strong></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">openssl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">genrsa</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-aes256</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-out</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ca-key.pem</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4096</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">openssl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">genrsa</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-aes256</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-out</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ca-key.pem</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4096</span></span></code></pre></div><ul><li>根据私钥创建CA证书，期间需要输入上一步设置的私钥密码，生成文件为<code>ca.pem</code>；</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">openssl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">req</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-x509</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-days</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">365</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-key</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ca-key.pem</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-sha256</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-subj</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;/CN=*&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-out</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ca.pem</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">openssl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">req</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-x509</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-days</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">365</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-key</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ca-key.pem</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-sha256</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-subj</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/CN=*&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-out</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ca.pem</span></span></code></pre></div><ul><li>创建服务端私钥，生成文件为<code>server-key.pem</code>；</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">openssl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">genrsa</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-out</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server-key.pem</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4096</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">openssl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">genrsa</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-out</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server-key.pem</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4096</span></span></code></pre></div><ul><li>创建服务端证书签名请求文件，用于CA证书给服务端证书签名，生成文件<code>server.csr</code>；</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">openssl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">req</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-subj</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;/CN=*&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-sha256</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-key</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server-key.pem</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-out</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server.csr</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">openssl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">req</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-subj</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/CN=*&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-sha256</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-key</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server-key.pem</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-out</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server.csr</span></span></code></pre></div><ul><li>创建CA证书签名好的服务端证书，期间需要输入CA证书私钥密码，生成文件为<code>server-cert.pem</code>；</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">openssl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">x509</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-req</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-days</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">365</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-sha256</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-in</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server.csr</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-CA</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ca.pem</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-CAkey</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ca-key.pem</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-CAcreateserial</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-out</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server-cert.pem</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">openssl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">x509</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-req</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-days</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">365</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-sha256</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-in</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server.csr</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-CA</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ca.pem</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-CAkey</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ca-key.pem</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-CAcreateserial</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-out</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server-cert.pem</span></span></code></pre></div><ul><li>创建客户端私钥，生成文件为<code>key.pem</code>；</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">openssl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">genrsa</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-out</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">key.pem</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4096</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">openssl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">genrsa</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-out</span><span style="color:#24292E;"> </span><span style="color:#032F62;">key.pem</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4096</span></span></code></pre></div><ul><li>创建客户端证书签名请求文件，用于CA证书给客户证书签名，生成文件<code>client.csr</code>；</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">openssl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">req</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-subj</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;/CN=client&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-key</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">key.pem</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-out</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">client.csr</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">openssl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">req</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-subj</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/CN=client&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-key</span><span style="color:#24292E;"> </span><span style="color:#032F62;">key.pem</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-out</span><span style="color:#24292E;"> </span><span style="color:#032F62;">client.csr</span></span></code></pre></div><ul><li>为了让秘钥适合客户端认证，创建一个扩展配置文件<code>extfile-client.cnf</code>；</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">extendedKeyUsage</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clientAuth</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">extfile-client.cnf</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">extendedKeyUsage</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clientAuth</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">extfile-client.cnf</span></span></code></pre></div><ul><li>创建CA证书签名好的客户端证书，期间需要输入CA证书私钥密码，生成文件为<code>cert.pem</code>；</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">openssl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">x509</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-req</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-days</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">365</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-sha256</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-in</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">client.csr</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-CA</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ca.pem</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-CAkey</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ca-key.pem</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-CAcreateserial</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-out</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cert.pem</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-extfile</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">extfile-client.cnf</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">openssl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">x509</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-req</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-days</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">365</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-sha256</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-in</span><span style="color:#24292E;"> </span><span style="color:#032F62;">client.csr</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-CA</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ca.pem</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-CAkey</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ca-key.pem</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-CAcreateserial</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-out</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cert.pem</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-extfile</span><span style="color:#24292E;"> </span><span style="color:#032F62;">extfile-client.cnf</span></span></code></pre></div><ul><li>删除创建过程中多余的文件；</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">rm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-rf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ca.srl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">server.csr</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">client.csr</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">extfile-client.cnf</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">rm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-rf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ca.srl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">server.csr</span><span style="color:#24292E;"> </span><span style="color:#032F62;">client.csr</span><span style="color:#24292E;"> </span><span style="color:#032F62;">extfile-client.cnf</span></span></code></pre></div><ul><li>最终生成文件如下，有了它们我们就可以进行基于TLS的安全访问了。</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">ca.pem CA证书</span></span>
<span class="line"><span style="color:#e1e4e8;">ca-key.pem CA证书私钥</span></span>
<span class="line"><span style="color:#e1e4e8;">server-cert.pem 服务端证书</span></span>
<span class="line"><span style="color:#e1e4e8;">server-key.pem 服务端证书私钥</span></span>
<span class="line"><span style="color:#e1e4e8;">cert.pem 客户端证书</span></span>
<span class="line"><span style="color:#e1e4e8;">key.pem 客户端证书私钥</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">ca.pem CA证书</span></span>
<span class="line"><span style="color:#24292e;">ca-key.pem CA证书私钥</span></span>
<span class="line"><span style="color:#24292e;">server-cert.pem 服务端证书</span></span>
<span class="line"><span style="color:#24292e;">server-key.pem 服务端证书私钥</span></span>
<span class="line"><span style="color:#24292e;">cert.pem 客户端证书</span></span>
<span class="line"><span style="color:#24292e;">key.pem 客户端证书私钥</span></span></code></pre></div><h4 id="配置docker支持tls" tabindex="-1">配置Docker支持TLS <a class="header-anchor" href="#配置docker支持tls" aria-label="Permalink to &quot;配置Docker支持TLS&quot;">​</a></h4><ul><li>用vim编辑器修改docker.service文件；</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">vi</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/usr/lib/systemd/system/docker.service</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">vi</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/lib/systemd/system/docker.service</span></span></code></pre></div><ul><li>修改以<code>ExecStart</code>开头的配置，开启TLS认证，并配置好CA证书、服务端证书和服务端私钥，增加内容如下：</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">-H</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tcp://0.0.0.0:2375</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--tlsverify</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--tlscacert=/home/docker-ca/ca.pem</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--tlscert=/home/docker-ca/server-cert.pem</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--tlskey=/home/docker-ca/server-key.pem</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">-H</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tcp://0.0.0.0:2375</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--tlsverify</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--tlscacert=/home/docker-ca/ca.pem</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--tlscert=/home/docker-ca/server-cert.pem</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--tlskey=/home/docker-ca/server-key.pem</span></span></code></pre></div><ul><li>重启Docker服务，这样我们的Docker服务就支持使用TLS进行远程访问了！</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">daemon-reload</span><span style="color:#E1E4E8;"> &amp;&amp; </span><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">restart</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">daemon-reload</span><span style="color:#24292E;"> &amp;&amp; </span><span style="color:#6F42C1;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">restart</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker</span></span></code></pre></div><h4 id="客户端访问" tabindex="-1">客户端访问 <a class="header-anchor" href="#客户端访问" aria-label="Permalink to &quot;客户端访问&quot;">​</a></h4><ul><li><p>TLS不再支持<code>http</code>了，需要改用<code>https</code>，修改<code>&lt;dockerHost&gt;</code>配置为<code>https</code>；</p></li><li><p>需要添加对应的客户端证书才能访问；</p></li><li><p>将如下文件复制到指定目录，这里复制到了<code>E:\\Docker\\env\\docker-ca</code>；</p></li><li><p>该目录配置在插件的<code>&lt;dockerCertPath&gt;</code>节点下，最终插件配置如下；</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;com.spotify&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;docker-maven-plugin&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;1.2.2&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">executions</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">execution</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;">&gt;build-image&lt;/</span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">phase</span><span style="color:#E1E4E8;">&gt;package&lt;/</span><span style="color:#85E89D;">phase</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">goals</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;</span><span style="color:#85E89D;">goal</span><span style="color:#E1E4E8;">&gt;build&lt;/</span><span style="color:#85E89D;">goal</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;/</span><span style="color:#85E89D;">goals</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;/</span><span style="color:#85E89D;">execution</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">executions</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">configuration</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">imageName</span><span style="color:#E1E4E8;">&gt;cola/\${project.artifactId}:\${project.version}&lt;/</span><span style="color:#85E89D;">imageName</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">dockerHost</span><span style="color:#E1E4E8;">&gt;https://81.68.218.181:2375&lt;/</span><span style="color:#85E89D;">dockerHost</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">baseImage</span><span style="color:#E1E4E8;">&gt;java:8&lt;/</span><span style="color:#85E89D;">baseImage</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">entryPoint</span><span style="color:#E1E4E8;">&gt;[&quot;java&quot;, &quot;-jar&quot;,&quot;/\${project.build.finalName}.jar&quot;]</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;/</span><span style="color:#85E89D;">entryPoint</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">dockerCertPath</span><span style="color:#E1E4E8;">&gt;E:\\Docker\\env\\docker-ca&lt;/</span><span style="color:#85E89D;">dockerCertPath</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">resources</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">resource</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;</span><span style="color:#85E89D;">targetPath</span><span style="color:#E1E4E8;">&gt;/&lt;/</span><span style="color:#85E89D;">targetPath</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;</span><span style="color:#85E89D;">directory</span><span style="color:#E1E4E8;">&gt;\${project.build.directory}&lt;/</span><span style="color:#85E89D;">directory</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;</span><span style="color:#85E89D;">include</span><span style="color:#E1E4E8;">&gt;\${project.build.finalName}.jar&lt;/</span><span style="color:#85E89D;">include</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;/</span><span style="color:#85E89D;">resource</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;/</span><span style="color:#85E89D;">resources</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">configuration</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;com.spotify&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;docker-maven-plugin&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;1.2.2&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">executions</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">execution</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">id</span><span style="color:#24292E;">&gt;build-image&lt;/</span><span style="color:#22863A;">id</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">phase</span><span style="color:#24292E;">&gt;package&lt;/</span><span style="color:#22863A;">phase</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">goals</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">goal</span><span style="color:#24292E;">&gt;build&lt;/</span><span style="color:#22863A;">goal</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;/</span><span style="color:#22863A;">goals</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">execution</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">executions</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">configuration</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">imageName</span><span style="color:#24292E;">&gt;cola/\${project.artifactId}:\${project.version}&lt;/</span><span style="color:#22863A;">imageName</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">dockerHost</span><span style="color:#24292E;">&gt;https://81.68.218.181:2375&lt;/</span><span style="color:#22863A;">dockerHost</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">baseImage</span><span style="color:#24292E;">&gt;java:8&lt;/</span><span style="color:#22863A;">baseImage</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">entryPoint</span><span style="color:#24292E;">&gt;[&quot;java&quot;, &quot;-jar&quot;,&quot;/\${project.build.finalName}.jar&quot;]</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">entryPoint</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">dockerCertPath</span><span style="color:#24292E;">&gt;E:\\Docker\\env\\docker-ca&lt;/</span><span style="color:#22863A;">dockerCertPath</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">resources</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">resource</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">targetPath</span><span style="color:#24292E;">&gt;/&lt;/</span><span style="color:#22863A;">targetPath</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">directory</span><span style="color:#24292E;">&gt;\${project.build.directory}&lt;/</span><span style="color:#22863A;">directory</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">include</span><span style="color:#24292E;">&gt;\${project.build.finalName}.jar&lt;/</span><span style="color:#22863A;">include</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;/</span><span style="color:#22863A;">resource</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">resources</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">configuration</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;">&gt;</span></span></code></pre></div></li></ul>`,46),e=[o];function t(c,r,y,E,i,d){return a(),l("div",null,e)}const h=s(p,[["render",t]]);export{g as __pageData,h as default};
