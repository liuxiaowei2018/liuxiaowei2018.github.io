import{_ as s,c as a,o as n,N as l}from"./chunks/framework.0799945b.js";const F=JSON.parse('{"title":"数据结构","description":"","frontmatter":{},"headers":[],"relativePath":"study/algorithm/滑动窗口.md"}'),p={name:"study/algorithm/滑动窗口.md"},o=l(`<h1 id="数据结构" tabindex="-1">数据结构 <a class="header-anchor" href="#数据结构" aria-label="Permalink to &quot;数据结构&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#滑动窗口">滑动窗口</a><ul><li><a href="#无重复字符的最长子串">无重复字符的最长子串</a></li><li><a href="#_1438-绝对差不超过限制的最长连续子数组">1438.绝对差不超过限制的最长连续子数组</a></li><li><a href="#_395-至少有k个重复字符的最长子串">395.至少有K个重复字符的最长子串</a></li></ul></li></ul></nav><h2 id="滑动窗口" tabindex="-1">滑动窗口 <a class="header-anchor" href="#滑动窗口" aria-label="Permalink to &quot;滑动窗口&quot;">​</a></h2><h3 id="无重复字符的最长子串" tabindex="-1">无重复字符的最长子串 <a class="header-anchor" href="#无重复字符的最长子串" aria-label="Permalink to &quot;无重复字符的最长子串&quot;">​</a></h3><blockquote><p>给定一个字符串，请你找出其中不含有重复字符的**「最长子串」**的长度。</p></blockquote><p>示例 1:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">输入: s = &quot;abcabcbb&quot; </span></span>
<span class="line"><span style="color:#A6ACCD;">输出: 3 </span></span>
<span class="line"><span style="color:#A6ACCD;">解释: 因为无重复字符的最长子串是 &quot;abc&quot;，所以其长度为 3</span></span></code></pre></div><p>示例 2:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">输入: s = &quot;bbbbb&quot; </span></span>
<span class="line"><span style="color:#A6ACCD;">输出: 1</span></span>
<span class="line"><span style="color:#A6ACCD;">解释: 因为无重复字符的最长子串是 &quot;b&quot;，所以其长度为 1</span></span></code></pre></div><p>示例 3:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">输入: s = &quot;pwwkew&quot; </span></span>
<span class="line"><span style="color:#A6ACCD;">输出: 3</span></span>
<span class="line"><span style="color:#A6ACCD;">解释: 因为无重复字符的最长子串是 &quot;wke&quot;，所以其长度为 3。</span></span>
<span class="line"><span style="color:#A6ACCD;">     请注意，你的答案必须是 子串 的长度，&quot;pwke&quot; 是一个子序列，不是子串。</span></span></code></pre></div><p>示例 4:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">输入: s = &quot;&quot; </span></span>
<span class="line"><span style="color:#A6ACCD;">输出: 0</span></span></code></pre></div><p>提示：</p><ul><li>0 &lt;= s.length &lt;= 5 *10^4</li><li><code>s</code> 由英文字母、数字、符号和空格组成</li></ul><h4 id="双指针-哈希表解法-滑动窗口" tabindex="-1">双指针 + 哈希表解法（滑动窗口） <a class="header-anchor" href="#双指针-哈希表解法-滑动窗口" aria-label="Permalink to &quot;双指针 + 哈希表解法（滑动窗口）&quot;">​</a></h4><blockquote><p>定义两个指针 <code>i</code>，<code>j</code>，表示当前处理到的子串是 <code>[i,j]</code>，<code>[i,j]</code> 始终满足无重复字符。</p><p>从前往后进行扫描，同时维护一个哈希表记录 <code>[i,j]</code> 中每个字符出现的次数。</p><p>遍历过程中，<code>j</code> 不断自增，同时将第 <code>j</code> 个字符在哈希表中出现的次数加一。</p><p>当满足 <code>map.get(r) &gt; 1</code> 代表此前出现过第 <code>j</code> 位对应的字符。此时应该更新 <code>i</code> 的位置（使其右移），直到不满足 <code>map.get(r) &gt; 1</code> ，代表 <code>[i,j]</code> 恢复满足无重复字符的条件。</p><p>同时使用 <code>[i,j]</code> 长度更新最大长度。</p></blockquote><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Solution</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">lengthOfLongestSubstring</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">s</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 从前往后进行扫描，同时维护一个哈希表记录 [i,j] 中每个字符出现的次数。</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">Map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">Character</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Integer</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> map </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">HashMap</span><span style="color:#89DDFF;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> ans </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 定义两个指针 i，j，表示当前处理到的子串是 [i,j]，[i,j] 始终满足无重复字符。</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> j </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> j </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">length</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> j</span><span style="color:#89DDFF;">++)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> r </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">charAt</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">j</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">// 遍历过程中，j 不断自增，同时将第 j 个字符在哈希表中出现的次数加一。</span></span>
<span class="line"><span style="color:#A6ACCD;">            map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">put</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">r</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getOrDefault</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">r</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">// 当满足 map.get(r) &gt; 1 代表此前出现过第 j 位对应的字符。</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">r</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> l </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> s</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">charAt</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">                </span><span style="color:#676E95;font-style:italic;">// 左指针右移后需要将哈希表中已有的字符串出现的次数-1</span></span>
<span class="line"><span style="color:#A6ACCD;">                map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">put</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">l</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">l</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">                </span><span style="color:#676E95;font-style:italic;">// 此时应该更新 i 的位置（使其右移），直到不满足 map.get(r) &gt; 1</span></span>
<span class="line"><span style="color:#A6ACCD;">                i</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">// 同时使用 [i,j] 长度更新最大长度。</span></span>
<span class="line"><span style="color:#A6ACCD;">            ans </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">max</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ans</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> j </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 哈希表中反馈子序列</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">map</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> ans</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> s </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pwwkew</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">lengthOfLongestSubstring</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">s</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><blockquote><p>时间复杂度：虽然有两层循环，但每个字符在哈希表中最多只会被插入和删除一次，复杂度为O(N)</p><p>空间复杂度：使用了哈希表进行字符记录，复杂度为O(N)</p></blockquote><h3 id="_1438-绝对差不超过限制的最长连续子数组" tabindex="-1">1438.绝对差不超过限制的最长连续子数组 <a class="header-anchor" href="#_1438-绝对差不超过限制的最长连续子数组" aria-label="Permalink to &quot;1438.绝对差不超过限制的最长连续子数组&quot;">​</a></h3><blockquote><p>给你一个整数数组 nums ，和一个表示限制的整数 limit，请你返回最长连续子数组的长度，该子数组中的任意两个元素之间的绝对差必须小于或者等于 limit 。</p><p>如果不存在满足条件的子数组，则返回 0 。</p></blockquote><p>示例 1：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">输入：nums = [8,2,4,7], limit = 4</span></span>
<span class="line"><span style="color:#A6ACCD;">输出：2 </span></span>
<span class="line"><span style="color:#A6ACCD;">解释：所有子数组如下：</span></span>
<span class="line"><span style="color:#A6ACCD;">[8] 最大绝对差 |8-8| = 0 &lt;= 4.</span></span>
<span class="line"><span style="color:#A6ACCD;">[8,2] 最大绝对差 |8-2| = 6 &gt; 4. </span></span>
<span class="line"><span style="color:#A6ACCD;">[8,2,4] 最大绝对差 |8-2| = 6 &gt; 4.</span></span>
<span class="line"><span style="color:#A6ACCD;">[8,2,4,7] 最大绝对差 |8-2| = 6 &gt; 4.</span></span>
<span class="line"><span style="color:#A6ACCD;">[2] 最大绝对差 |2-2| = 0 &lt;= 4.</span></span>
<span class="line"><span style="color:#A6ACCD;">[2,4] 最大绝对差 |2-4| = 2 &lt;= 4.</span></span>
<span class="line"><span style="color:#A6ACCD;">[2,4,7] 最大绝对差 |2-7| = 5 &gt; 4.</span></span>
<span class="line"><span style="color:#A6ACCD;">[4] 最大绝对差 |4-4| = 0 &lt;= 4.</span></span>
<span class="line"><span style="color:#A6ACCD;">[4,7] 最大绝对差 |4-7| = 3 &lt;= 4.</span></span>
<span class="line"><span style="color:#A6ACCD;">[7] 最大绝对差 |7-7| = 0 &lt;= 4. </span></span>
<span class="line"><span style="color:#A6ACCD;">因此，满足题意的最长子数组的长度为 2 。</span></span></code></pre></div><p>示例 2：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">输入：nums = [10,1,2,4,7,2], limit = 5</span></span>
<span class="line"><span style="color:#A6ACCD;">输出：4 </span></span>
<span class="line"><span style="color:#A6ACCD;">解释：满足题意的最长子数组是 [2,4,7,2]，其最大绝对差 |2-7| = 5 &lt;= 5 。</span></span></code></pre></div><p>示例 3：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">输入：nums = [4,2,2,2,4,4,2,2], limit = 0</span></span>
<span class="line"><span style="color:#A6ACCD;">输出：3</span></span></code></pre></div><p>提示：</p><ul><li>1 &lt;= nums.length &lt;= 10^5</li><li>1 &lt;= nums[i] &lt;= 10^9</li><li>0 &lt;= limit &lt;= 10^9</li></ul><h4 id="双指针-解法" tabindex="-1">双指针 解法 <a class="header-anchor" href="#双指针-解法" aria-label="Permalink to &quot;双指针 解法&quot;">​</a></h4><blockquote><p>始终让右端点 <code>r</code> 右移，当不满足条件时让 <code>l</code> 进行右移。</p><p>同时，还是使用「单调队列」保存我们的区间最值</p></blockquote><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"></span></code></pre></div><h3 id="_395-至少有k个重复字符的最长子串" tabindex="-1">395.至少有K个重复字符的最长子串 <a class="header-anchor" href="#_395-至少有k个重复字符的最长子串" aria-label="Permalink to &quot;395.至少有K个重复字符的最长子串&quot;">​</a></h3><blockquote><p>给你一个字符串 s 和一个整数 k ，请你找出 s 中的最长子串， 要求该子串中的每一字符出现次数都不少于 k</p><p>返回这一子串的长度。</p></blockquote><p>示例 1：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">输入：s = &quot;aaabb&quot;, k = 3</span></span>
<span class="line"><span style="color:#A6ACCD;">输出：3</span></span>
<span class="line"><span style="color:#A6ACCD;">解释：最长子串为 &quot;aaa&quot; ，其中 &#39;a&#39; 重复了 3 次。</span></span></code></pre></div><p>示例 2：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">输入：s = &quot;ababbc&quot;, k = 2</span></span>
<span class="line"><span style="color:#A6ACCD;">输出：5</span></span>
<span class="line"><span style="color:#A6ACCD;">解释：最长子串为 &quot;ababb&quot; ，其中 &#39;a&#39; 重复了 2 次， &#39;b&#39; 重复了 3 次。</span></span></code></pre></div><p>提示：</p><ul><li>1 &lt;= s.length &lt;=10^4</li><li>s 仅由小写英文字母组成</li><li>1 &lt;= k &lt;=10^5</li></ul>`,40),e=[o];function t(c,r,D,y,C,A){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{F as __pageData,d as default};
