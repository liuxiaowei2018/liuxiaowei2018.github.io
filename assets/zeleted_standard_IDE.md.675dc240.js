import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.8048b864.js";const p="/assets/image-20211227101639339.4ec69f60.png",o="/assets/image-20211227101705573.828f33d2.png",e="/assets/image-20220406185340536.98cc02d3.png",t="/assets/image-20220326122823285.b678cf60.png",c="/assets/image-20220326125138697.974caf70.png",r="/assets/image-20220326125212669.889e6b20.png",E="/assets/image-20220326125726762.7ddaf117.png",y="/assets/image-20220326125930896.afcab647.png",i="/assets/image-20220326130701407.59068a97.png",d="/assets/image-20220326131101917.35ff145c.png",g="/assets/image-20220111100823166.89148790.png",u="/assets/image-20220111100900380.d3aaf849.png",h="/assets/image-20220111100913708.2d4ed89f.png",m="/assets/image-20220111101053389.e1033b69.png",b="/assets/image-20220111101114027.f67906ed.png",v="/assets/image-20220111101136796.8a71904c.png",D="/assets/image-20220406184713838.efd581ad.png",F="/assets/1248052-20210518170524298-715334460.fc937b86.png",A="/assets/1248052-20210518170534318-329317752.9308ada3.png",L=JSON.parse('{"title":"IDE","description":"","frontmatter":{},"headers":[],"relativePath":"zeleted/standard/IDE.md","filePath":"zeleted/standard/IDE.md","lastUpdated":1697176108000}'),k={name:"zeleted/standard/IDE.md"},C=l(`<h1 id="ide" tabindex="-1">IDE <a class="header-anchor" href="#ide" aria-label="Permalink to &quot;IDE&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#工具篇">工具篇</a><ul><li><a href="#idea">IDEA</a></li><li><a href="#vscode">VsCode</a></li><li><a href="#maven">Maven</a></li><li><a href="#git">Git</a></li></ul></li><li><a href="#应用篇">应用篇</a></li></ul></nav><h2 id="工具篇" tabindex="-1">工具篇 <a class="header-anchor" href="#工具篇" aria-label="Permalink to &quot;工具篇&quot;">​</a></h2><h3 id="idea" tabindex="-1">IDEA <a class="header-anchor" href="#idea" aria-label="Permalink to &quot;IDEA&quot;">​</a></h3><h5 id="idea-内存设置" tabindex="-1">IDEA.内存设置 <a class="header-anchor" href="#idea-内存设置" aria-label="Permalink to &quot;IDEA.内存设置&quot;">​</a></h5><blockquote><p><code>文件</code></p><p>./IntelliJ IDEA 2020.1\\bin\\idea.exe.vmoptions</p><p><code>参数</code></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#最小启动内存参数</span></span>
<span class="line"><span style="color:#9ECBFF;">-Xms1024m</span></span>
<span class="line"><span style="color:#6A737D;">#最大运行内存参数</span></span>
<span class="line"><span style="color:#9ECBFF;">-Xmx2048m</span></span>
<span class="line"><span style="color:#6A737D;">#保留代码占用的内存容量参数</span></span>
<span class="line"><span style="color:#9ECBFF;">-XX:ReservedCodeCacheSize=500m</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#最小启动内存参数</span></span>
<span class="line"><span style="color:#032F62;">-Xms1024m</span></span>
<span class="line"><span style="color:#6A737D;">#最大运行内存参数</span></span>
<span class="line"><span style="color:#032F62;">-Xmx2048m</span></span>
<span class="line"><span style="color:#6A737D;">#保留代码占用的内存容量参数</span></span>
<span class="line"><span style="color:#032F62;">-XX:ReservedCodeCacheSize=500m</span></span></code></pre></div></blockquote><h5 id="idea-模板设置" tabindex="-1">IDEA.模板设置 <a class="header-anchor" href="#idea-模板设置" aria-label="Permalink to &quot;IDEA.模板设置&quot;">​</a></h5><blockquote><p>类模板</p><p>Editor--&gt;File and Code Templates--&gt;File Header</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">* \${TODO} </span></span>
<span class="line"><span style="color:#6A737D;">* </span><span style="color:#F97583;">@author</span><span style="color:#6A737D;"> liuxiaowei</span></span>
<span class="line"><span style="color:#6A737D;">* @date \${YEAR}年\${MONTH}月\${DAY}日 \${TIME}</span></span>
<span class="line"><span style="color:#6A737D;">* @Description \${TODO}</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">* \${TODO} </span></span>
<span class="line"><span style="color:#6A737D;">* </span><span style="color:#D73A49;">@author</span><span style="color:#6A737D;"> liuxiaowei</span></span>
<span class="line"><span style="color:#6A737D;">* @date \${YEAR}年\${MONTH}月\${DAY}日 \${TIME}</span></span>
<span class="line"><span style="color:#6A737D;">* @Description \${TODO}</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre></div></blockquote><blockquote><p>方法模板</p><p><img src="`+p+`" alt="image-20211227101639339"></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">*</span></span>
<span class="line"><span style="color:#e1e4e8;">* @author liuxiaowei</span></span>
<span class="line"><span style="color:#e1e4e8;">* @return $return$</span></span>
<span class="line"><span style="color:#e1e4e8;">*/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">*</span></span>
<span class="line"><span style="color:#24292e;">* @author liuxiaowei</span></span>
<span class="line"><span style="color:#24292e;">* @return $return$</span></span>
<span class="line"><span style="color:#24292e;">*/</span></span></code></pre></div><p><img src="`+o+`" alt="image-20211227101705573"></p><p><code>param</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">groovyScript(&quot;def result = &#39;&#39;;def params = \\&quot;\${_1}\\&quot;.replaceAll(&#39;[\\\\\\\\[|\\\\\\\\]|\\\\\\\\s]&#39;, &#39;&#39;).split(&#39;,&#39;).toList(); for(i = 0; i &lt; params.size(); i++) {if(params[i] != &#39;&#39;)result+=&#39;* @param &#39; + params[i] + ((i &lt; params.size() - 1) ? &#39;\\\\r\\\\n &#39; : &#39;&#39;)}; return result == &#39;&#39; ? null : &#39;\\\\r\\\\n &#39; + result&quot;, methodParameters())</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">groovyScript(&quot;def result = &#39;&#39;;def params = \\&quot;\${_1}\\&quot;.replaceAll(&#39;[\\\\\\\\[|\\\\\\\\]|\\\\\\\\s]&#39;, &#39;&#39;).split(&#39;,&#39;).toList(); for(i = 0; i &lt; params.size(); i++) {if(params[i] != &#39;&#39;)result+=&#39;* @param &#39; + params[i] + ((i &lt; params.size() - 1) ? &#39;\\\\r\\\\n &#39; : &#39;&#39;)}; return result == &#39;&#39; ? null : &#39;\\\\r\\\\n &#39; + result&quot;, methodParameters())</span></span></code></pre></div><p><code>return</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">groovyScript(&quot;return \\&quot;\${_1}\\&quot; == &#39;void&#39; ? null : &#39;\\\\r\\\\n * @return &#39; + \\&quot;\${_1}\\&quot;&quot;, methodReturnType())</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">groovyScript(&quot;return \\&quot;\${_1}\\&quot; == &#39;void&#39; ? null : &#39;\\\\r\\\\n * @return &#39; + \\&quot;\${_1}\\&quot;&quot;, methodReturnType())</span></span></code></pre></div></blockquote><h5 id="idea-常见错误" tabindex="-1">IDEA.常见错误 <a class="header-anchor" href="#idea-常见错误" aria-label="Permalink to &quot;IDEA.常见错误&quot;">​</a></h5><p><code>依赖报错解决方法</code></p><blockquote><div class="language-apl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">apl</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">mvn idea:module</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">mvn idea:module</span></span></code></pre></div></blockquote><p><code>依赖无法下载</code></p><blockquote><p><code>IDEA-&gt;File-&gt;Setting-&gt;Maven-&gt;Imporing-&gt;VM options for importer</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">-Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">-Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true</span></span></code></pre></div></blockquote><p><code>maven无法compile</code></p><blockquote><p><code>IDEA-&gt;File-&gt;Setting-&gt;Maven-&gt;Runner-&gt;VM options</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">-Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -Dmaven.wagon.http.ssl.ignore.validity.dates=true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">-Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -Dmaven.wagon.http.ssl.ignore.validity.dates=true</span></span></code></pre></div></blockquote><p><code>Idea中重建maven模块，dependencies引入为空</code></p><blockquote><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">idea会默认删除的模块不再用，所以将删除模块的pom文件忽略掉，所以如果重建了相同名字的模块，依赖是引不进来的。</span></span>
<span class="line"><span style="color:#e1e4e8;">   1、删除新建的有问题的模块</span></span>
<span class="line"><span style="color:#e1e4e8;">       2、打开项目中.idea/misc.xml,将&lt;option&gt;&lt;set&gt;&lt;错误的option/&gt;&lt;set/&gt;&lt;/option&gt;删除，对应刚删除的模块名</span></span>
<span class="line"><span style="color:#e1e4e8;">       3、重新加入模块</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">idea会默认删除的模块不再用，所以将删除模块的pom文件忽略掉，所以如果重建了相同名字的模块，依赖是引不进来的。</span></span>
<span class="line"><span style="color:#24292e;">   1、删除新建的有问题的模块</span></span>
<span class="line"><span style="color:#24292e;">       2、打开项目中.idea/misc.xml,将&lt;option&gt;&lt;set&gt;&lt;错误的option/&gt;&lt;set/&gt;&lt;/option&gt;删除，对应刚删除的模块名</span></span>
<span class="line"><span style="color:#24292e;">       3、重新加入模块</span></span></code></pre></div></blockquote><p><code>maven无法拉取阿里云镜像</code></p><blockquote><p><code>maven.settings文件</code></p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">mirror</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">       &lt;</span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;">&gt;aliyun&lt;/</span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">       &lt;</span><span style="color:#85E89D;">mirrorOf</span><span style="color:#E1E4E8;">&gt;public&lt;/</span><span style="color:#85E89D;">mirrorOf</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">       &lt;</span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">&gt;阿里云公共仓库&lt;/</span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">       &lt;</span><span style="color:#85E89D;">url</span><span style="color:#E1E4E8;">&gt;https://maven.aliyun.com/repository/public&lt;/</span><span style="color:#85E89D;">url</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">mirror</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">mirror</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">       &lt;</span><span style="color:#22863A;">id</span><span style="color:#24292E;">&gt;aliyun&lt;/</span><span style="color:#22863A;">id</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">       &lt;</span><span style="color:#22863A;">mirrorOf</span><span style="color:#24292E;">&gt;public&lt;/</span><span style="color:#22863A;">mirrorOf</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">       &lt;</span><span style="color:#22863A;">name</span><span style="color:#24292E;">&gt;阿里云公共仓库&lt;/</span><span style="color:#22863A;">name</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">       &lt;</span><span style="color:#22863A;">url</span><span style="color:#24292E;">&gt;https://maven.aliyun.com/repository/public&lt;/</span><span style="color:#22863A;">url</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">mirror</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p><code>SSL证书验证忽略</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">IDEA的File-&gt;Setting中进行配置，设置忽略SSL证书的验证</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">IDEA的File-&gt;Setting中进行配置，设置忽略SSL证书的验证</span></span></code></pre></div></blockquote><h5 id="idea-自动提示" tabindex="-1">IDEA.自动提示 <a class="header-anchor" href="#idea-自动提示" aria-label="Permalink to &quot;IDEA.自动提示&quot;">​</a></h5><blockquote><p>IDE是通过读取配置信息的元数据而实现自动提示的，而元数据在目录<code>META-INF</code>中的<code>spring-configuration-metadata.json</code> 或者 <code>additional-spring-configuration-metadata.json</code></p></blockquote><p>工程中添加以下jar包</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-boot-configuration-processor&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">optional</span><span style="color:#E1E4E8;">&gt;true&lt;/</span><span style="color:#85E89D;">optional</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-boot-configuration-processor&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">optional</span><span style="color:#24292E;">&gt;true&lt;/</span><span style="color:#22863A;">optional</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>搜索<code>Annotation Processor</code>并设置<code>Enable annotation processing</code></p><p><img src="`+e+`" alt="image-20220406185340536"></p><p>项目在重新编译后就会自动生成<code>spring-configuration-metadata.json</code>文件，自定义的配置实现自动提示</p><h5 id="idea-插件" tabindex="-1">IDEA.插件 <a class="header-anchor" href="#idea-插件" aria-label="Permalink to &quot;IDEA.插件&quot;">​</a></h5><blockquote><p><code>springboot依赖插件</code></p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">build</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">   &lt;</span><span style="color:#85E89D;">plugins</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">       &lt;</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">           &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">           &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-boot-maven-plugin&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">       &lt;/</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">   &lt;/</span><span style="color:#85E89D;">plugins</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">build</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">build</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">   &lt;</span><span style="color:#22863A;">plugins</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">       &lt;</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">           &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">           &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-boot-maven-plugin&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">       &lt;/</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">   &lt;/</span><span style="color:#22863A;">plugins</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">build</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p><code>Key Promoter X</code> <code>CodeGlance</code> <code>SonarLint</code> <code>GenerateO2O</code> <code>.ignore</code></p><p><code>Save Actions</code> <code>arthsa idea</code> <code>ArthasHotSwap</code> <code>Alibaba Cloud Toolkit</code></p><p><code>AllFormat</code> <code>VisualVM Launcher3</code> <code>CamelCase</code> <code>Alibaba Guidelines</code></p><p><code>Grep Console</code> <code>SequenceDiagram</code> <code>MOMO Code Sec Inspector</code></p><p><code>LeetCode Editor</code> <code>idea-yapi</code> <code>sequenceDiagram</code> <code>JUnit 5 Mockito code generator</code></p><p><code>activate-power-mode</code> <code>Rainbow Brackets</code> <code>cyan Light Theme</code><code>stackoverflow</code> <code>GsonFormatPlus</code> <code>any-rule</code> <code>Translation</code></p><p><code>MybatisLogFormat</code> <code>MybatisX</code> <code>MyBatisCodeHelperPro</code></p><p><code>Maven Helper</code> <code>Lombok</code> <code>Codota</code> <code>JRebel</code> <code>Git Commit Template</code></p><p><code> IDEA MapStruct</code></p></blockquote><h5 id="idea调试源码" tabindex="-1">IDEA调试源码 <a class="header-anchor" href="#idea调试源码" aria-label="Permalink to &quot;IDEA调试源码&quot;">​</a></h5><h6 id="类继承-图面板" tabindex="-1">[类继承]图面板 <a class="header-anchor" href="#类继承-图面板" aria-label="Permalink to &quot;[类继承]图面板&quot;">​</a></h6><p>快捷键<strong>Ctrl+Alt+Shift+U</strong></p><blockquote><p>选中点击后会生成：</p><p><img src="`+t+'" alt="image-20220326122823285"></p><p>选中其中的某一个类或者接口，点击右键出现上下文选择菜单，选择自己的子类「Ctrl+Alt+B」或者父类「Ctrl+Alt+P」</p><p><strong>查看类</strong></p><p>另一种方式来查看，那就是 Ctrl + H 快捷键。</p></blockquote><h6 id="方法调用方" tabindex="-1">方法调用方 <a class="header-anchor" href="#方法调用方" aria-label="Permalink to &quot;方法调用方&quot;">​</a></h6><p>快捷键<strong>ctrl + alt + h</strong></p><blockquote><p>有些场景，则需要结合<code>alt + 7</code> 快捷键。</p></blockquote><h6 id="debug调试" tabindex="-1">Debug调试 <a class="header-anchor" href="#debug调试" aria-label="Permalink to &quot;Debug调试&quot;">​</a></h6><blockquote><p><strong>表达式计算</strong></p><p>当调试运行到需要计算的表达式的时候,<strong>使用快捷键 Alt+F8可以计算表达式</strong></p></blockquote><blockquote><p><strong>条件断点</strong></p><p>设置条件，当条件满足时，到 这步才会停下来</p></blockquote><blockquote><p><strong>中断Debug</strong></p><p>通过Force Return，即强制返回来避免后续的流程。</p><p>点击Force Return，弹出Return Value的窗口，强制<strong>返回方法值</strong>或者<strong>设置表达式</strong>，从而不再进行后续的流程。</p><p><img src="'+c+'" alt="image-20220326125138697"></p><p><img src="'+r+'" alt="image-20220326125212669"></p></blockquote><blockquote><p><strong>断点回退</strong></p><p>在调用栈方法上选择要回退的方法，右键选择Drop Frame，回退到该方法的上一个方法调用处</p></blockquote><blockquote><p><strong>多线程调试</strong></p><p>IDEA在Debug时默认阻塞级别是ALL，会阻塞其它线程，只有在当前调试线程走完时才会走其它线程。可以在View Breakpoints里选择Thread，如下图，然后点击Make Default设置为默认选项。</p><p>切换线程，在下图中Frames的下拉列表里，可以切换当前的线程，如下我这里有两个Debug的线程，切换另外一个则进入另一个Debug的线程。</p><p><img src="'+E+'" alt="image-20220326125726762"></p><p><img src="'+y+'" alt="image-20220326125930896"></p></blockquote><blockquote><p><strong>断点处添加 log</strong></p><p>在正常加断点的地方使用快捷键 <code>Shift + 鼠标左键</code>，就会弹出下面的内容</p><p><img src="'+i+'" alt="image-20220326130701407"></p><p>勾选上 <code>Evaluate and log</code>, 并自定义你想查看的 log/变量, 这样以 Debug 模式运行程序（正常模式运行，不会打印这些 log）</p><p>可以勾选上面图片绿色框线的 <code>&quot;Breakpoint hit&quot; message</code> ---&gt;Breakpoint reached</p><p>更详细的信息，勾选上 <code>Stack trace</code> ---&gt;堆栈信息</p></blockquote><blockquote><p><strong>字段断点</strong></p><p>使用：</p><ol><li><p>在字段定义处鼠标左键添加断点（会出现「眼睛」的图标）</p></li><li><p>在「眼睛」图标上鼠标右键</p></li><li><p>在弹框中勾选上<code>Field access</code> 和<code>Field modification</code> 两个选项</p><p>如果修改字段值的方法比较多，也可以在 <code>Condition</code> 的地方定义断点进入条件</p><p><img src="'+d+'" alt="image-20220326131101917"></p></li></ol></blockquote><blockquote><p><strong>异常断点</strong></p><p><code>Exception Breakpoints</code>, 当抛出异常时，在 catch 的地方打上断点，可以通过下图的几个位置获取栈顶异常类型</p><p>比如这里的 <code>NumberFormatException</code></p><p><img src="'+g+'" alt="image-20220111100823166"></p><p>获取异常类型，按照如下步骤添加异常断点：</p><p><img src="'+u+'" alt="image-20220111100900380"></p><p><img src="'+h+'" alt="image-20220111100913708">!</p><p>重新以 Debug 模式运行程序：程序「一路绿灯式」定位到抛出异常的位置，同时指出当时的变量信息</p></blockquote><blockquote><p><strong>方法断点</strong></p><p>在接口方法上添加断点（快捷键 <code>cmd+F8</code>/<code>ctrl+F8</code>）：</p><ol><li><p>鼠标左键在方法处点击断点（♦️形状）</p></li><li><p>断点上鼠标右键</p><p>当以 Debug 模式运行程序的时候，会自动进入实现类的方法（注意断点形状）：</p><p><img src="'+m+'" alt="image-20220111101053389"></p><p><img src="'+b+'" alt="image-20220111101114027"></p></li></ol></blockquote><blockquote><p><code>断点明细图</code></p><p><img src="'+v+`" alt="image-20220111101136796"></p></blockquote><h5 id="idea-编译jdk" tabindex="-1">IDEA.编译jdk <a class="header-anchor" href="#idea-编译jdk" aria-label="Permalink to &quot;IDEA.编译jdk&quot;">​</a></h5><blockquote><p>1.在安装的jdk1.8路径下，找到src.zip和javafx-src.zip压缩文件,选择一个合适的目录 复制过来一份</p><p>2.接着新建两个文件夹 javafx-src 和 src，将两个压缩包分别放入两个文件夹，并解压</p><p>3.新建项目完成之后，点击file&gt;project structure,然后选中SDKs，切换到Sourcepath选项</p><p>4.将原先的src.zip和javafx-src.zip依赖，“-”减号删去，“+”好新建你本地解压后的src和javafx-src依赖，之后我们点击apply</p><p>5.然后点击file --&gt; Setting --&gt; Build,Execution,Deployment --&gt; Debugger --&gt; Stepping把Do not step into the classes中的ajva.*，javax.*取消勾选，其他的随意, 点击apply。</p><p>6.完成！</p></blockquote><h3 id="vscode" tabindex="-1">VsCode <a class="header-anchor" href="#vscode" aria-label="Permalink to &quot;VsCode&quot;">​</a></h3><h5 id="vscode-插件" tabindex="-1">VsCode.插件 <a class="header-anchor" href="#vscode-插件" aria-label="Permalink to &quot;VsCode.插件&quot;">​</a></h5><blockquote><p>Vetur —— 语法高亮、智能感知、Emmet 等</p><p>包含格式化功能， Alt+Shift+F （格式化全文），Ctrl+K Ctrl+F（格式化选中代码，两个 Ctrl需要同时按着）</p><p>EsLint —— 语法纠错 Auto Close Tag —— 自动闭合 HTML/XML 标签 Auto Rename Tag —— 自动完成另一侧标签的同步修改 JavaScript(ES6) code snippets — — ES6 语 法 智 能 提 示 以 及 快 速 输 入 ， 除 js 外 还 支持.ts，.jsx，.tsx，.html，.vue， HTML CSS Support —— 让 html 标签上写 class 智能提示当前项目所支持的样式 HTML Snippets —— html 快速自动补全 Open in browser —— 浏览器快速打开 Live Server —— 以内嵌服务器方式打开 Chinese (Simplified) Language Pack for Visual Studio Code —— 中文语言包</p></blockquote><h3 id="maven" tabindex="-1">Maven <a class="header-anchor" href="#maven" aria-label="Permalink to &quot;Maven&quot;">​</a></h3><h5 id="maven-依赖查找" tabindex="-1">Maven.依赖查找 <a class="header-anchor" href="#maven-依赖查找" aria-label="Permalink to &quot;Maven.依赖查找&quot;">​</a></h5><blockquote><p>当需要依赖时，会从仓库中取查找，优先顺序为</p><blockquote><p>本地仓库 &gt; 私服(如果配置了的话) &gt; 公共仓库(如果配置了的话) &gt; 中央仓库</p></blockquote></blockquote><h5 id="maven-生命周期" tabindex="-1">Maven.生命周期 <a class="header-anchor" href="#maven-生命周期" aria-label="Permalink to &quot;Maven.生命周期&quot;">​</a></h5><blockquote><p>Clean Lifecycle 在进行真正的构建之前进行一些清理工作。 Default Lifecycle 构建的核心部分，编译，测试，打包，部署等等。 Site Lifecycle 生成项目报告，站点，发布站点。</p></blockquote><blockquote><p>依赖生命周期</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;G&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;A&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;V&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">scope</span><span style="color:#E1E4E8;">&gt;compile&lt;/</span><span style="color:#85E89D;">scope</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;G&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;A&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;V&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">scope</span><span style="color:#24292E;">&gt;compile&lt;/</span><span style="color:#22863A;">scope</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><table><thead><tr><th>标识</th><th>生命周期</th></tr></thead><tbody><tr><td>compile</td><td>缺省值，适用于所有阶段（测试运行，编译，运行，打包）</td></tr><tr><td>provided</td><td>类似compile，期望JDK、容器或使用者会提供这个依赖。如servlet-api.jar；适用于（测试运行，编译）阶段</td></tr><tr><td>runtime</td><td>只在运行时使用，如 mysql的驱动jar，适用于（运行，测试运行）阶段</td></tr><tr><td>test</td><td>只在测试时使用，适用于（编译，测试运行）阶段，如 junit.jar</td></tr><tr><td>system</td><td>Maven不会在仓库中查找对应依赖，在本地磁盘目录中查找；适用于（编译，测试运行，运行）阶段</td></tr></tbody></table></blockquote><h5 id="maven-指令" tabindex="-1">Maven.指令 <a class="header-anchor" href="#maven-指令" aria-label="Permalink to &quot;Maven.指令&quot;">​</a></h5><blockquote><p><code>clean</code> 删除 target 目录及内容 <code>validate</code><code>compile</code> 将 src/main/java 下的文件编译为 class 文件输出到 target目录下 <code>test</code> 执行src/test/java下的单元测试类 <code>package</code> 对于 java 工程执行 package 打成 jar 包，对于web 工程打成war包 <code>verify</code><code>install</code> 将 maven 打成 jar 包或 war 包发布到本地仓库 <code>site</code> 生成项目报告，站点，发布站点 <code>depoly</code> 将最终的包复制到远程的仓库</p></blockquote><h5 id="maven-手动打包" tabindex="-1">Maven.手动打包 <a class="header-anchor" href="#maven-手动打包" aria-label="Permalink to &quot;Maven.手动打包&quot;">​</a></h5><blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">mvn install</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">install</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">file </span></span>
<span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">Dfile</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">D</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">\\canal.client</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1.1</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">0</span><span style="color:#E1E4E8;">.jar </span></span>
<span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">DgroupId</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">com.alibaba.otter </span></span>
<span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">DartifactId</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">canal.client </span></span>
<span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">Dversion</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1.1</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">0</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">Dpackaging</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">jar</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">mvn install</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">install</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">file </span></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;">Dfile</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">D</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">\\canal.client</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1.1</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">0</span><span style="color:#24292E;">.jar </span></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;">DgroupId</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">com.alibaba.otter </span></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;">DartifactId</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">canal.client </span></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;">Dversion</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1.1</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">0</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;">Dpackaging</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">jar</span></span></code></pre></div></blockquote><h5 id="maven-全量打包" tabindex="-1">Maven.全量打包 <a class="header-anchor" href="#maven-全量打包" aria-label="Permalink to &quot;Maven.全量打包&quot;">​</a></h5><blockquote><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">build</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">   &lt;</span><span style="color:#85E89D;">plugins</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">         &lt;</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;maven-compiler-plugin&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;3.6.1&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;</span><span style="color:#85E89D;">configuration</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    &lt;</span><span style="color:#85E89D;">source</span><span style="color:#E1E4E8;">&gt;1.8&lt;/</span><span style="color:#85E89D;">source</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    &lt;</span><span style="color:#85E89D;">target</span><span style="color:#E1E4E8;">&gt;1.8&lt;/</span><span style="color:#85E89D;">target</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;/</span><span style="color:#85E89D;">configuration</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">         &lt;/</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">         &lt;</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;maven-assembly-plugin&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;</span><span style="color:#85E89D;">configuration</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    &lt;</span><span style="color:#85E89D;">descriptorRefs</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                        &lt;</span><span style="color:#85E89D;">descriptorRef</span><span style="color:#E1E4E8;">&gt;jar-with-dependencies&lt;/</span><span style="color:#85E89D;">descriptorRef</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    &lt;/</span><span style="color:#85E89D;">descriptorRefs</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;/</span><span style="color:#85E89D;">configuration</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;</span><span style="color:#85E89D;">executions</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    &lt;</span><span style="color:#85E89D;">execution</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                        &lt;</span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;">&gt;make-assembly&lt;/</span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                        &lt;</span><span style="color:#85E89D;">phase</span><span style="color:#E1E4E8;">&gt;package&lt;/</span><span style="color:#85E89D;">phase</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                        &lt;</span><span style="color:#85E89D;">goals</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                            &lt;</span><span style="color:#85E89D;">goal</span><span style="color:#E1E4E8;">&gt;single&lt;/</span><span style="color:#85E89D;">goal</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                        &lt;/</span><span style="color:#85E89D;">goals</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    &lt;/</span><span style="color:#85E89D;">execution</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;/</span><span style="color:#85E89D;">executions</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">         &lt;/</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">   &lt;/</span><span style="color:#85E89D;">plugins</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">build</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">build</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">   &lt;</span><span style="color:#22863A;">plugins</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">         &lt;</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;maven-compiler-plugin&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;3.6.1&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">configuration</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                    &lt;</span><span style="color:#22863A;">source</span><span style="color:#24292E;">&gt;1.8&lt;/</span><span style="color:#22863A;">source</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                    &lt;</span><span style="color:#22863A;">target</span><span style="color:#24292E;">&gt;1.8&lt;/</span><span style="color:#22863A;">target</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;/</span><span style="color:#22863A;">configuration</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">         &lt;/</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">         &lt;</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;maven-assembly-plugin&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">configuration</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                    &lt;</span><span style="color:#22863A;">descriptorRefs</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                        &lt;</span><span style="color:#22863A;">descriptorRef</span><span style="color:#24292E;">&gt;jar-with-dependencies&lt;/</span><span style="color:#22863A;">descriptorRef</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                    &lt;/</span><span style="color:#22863A;">descriptorRefs</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;/</span><span style="color:#22863A;">configuration</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">executions</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                    &lt;</span><span style="color:#22863A;">execution</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                        &lt;</span><span style="color:#22863A;">id</span><span style="color:#24292E;">&gt;make-assembly&lt;/</span><span style="color:#22863A;">id</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                        &lt;</span><span style="color:#22863A;">phase</span><span style="color:#24292E;">&gt;package&lt;/</span><span style="color:#22863A;">phase</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                        &lt;</span><span style="color:#22863A;">goals</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                            &lt;</span><span style="color:#22863A;">goal</span><span style="color:#24292E;">&gt;single&lt;/</span><span style="color:#22863A;">goal</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                        &lt;/</span><span style="color:#22863A;">goals</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                    &lt;/</span><span style="color:#22863A;">execution</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;/</span><span style="color:#22863A;">executions</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">         &lt;/</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">   &lt;/</span><span style="color:#22863A;">plugins</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">build</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>mvn clean package</p></blockquote><h3 id="git" tabindex="-1">Git <a class="header-anchor" href="#git" aria-label="Permalink to &quot;Git&quot;">​</a></h3><h5 id="git-常见错误解决方案" tabindex="-1">Git.常见错误解决方案 <a class="header-anchor" href="#git-常见错误解决方案" aria-label="Permalink to &quot;Git.常见错误解决方案&quot;">​</a></h5><p><code>git commit后，如何撤销commit</code></p><blockquote><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">git reset --soft HEAD^</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">HEAD^  表示上一个版本，即上一次的commit，也可以写成HEAD~1</span></span>
<span class="line"><span style="color:#e1e4e8;">如果进行两次的commit，想要都撤回，可以使用HEAD~2</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">--soft</span></span>
<span class="line"><span style="color:#e1e4e8;">不删除工作空间的改动代码 ，撤销commit，不撤销git add file</span></span>
<span class="line"><span style="color:#e1e4e8;">--hard</span></span>
<span class="line"><span style="color:#e1e4e8;">删除工作空间的改动代码，撤销commit且撤销add</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">git reset --soft HEAD^</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">HEAD^  表示上一个版本，即上一次的commit，也可以写成HEAD~1</span></span>
<span class="line"><span style="color:#24292e;">如果进行两次的commit，想要都撤回，可以使用HEAD~2</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">--soft</span></span>
<span class="line"><span style="color:#24292e;">不删除工作空间的改动代码 ，撤销commit，不撤销git add file</span></span>
<span class="line"><span style="color:#24292e;">--hard</span></span>
<span class="line"><span style="color:#24292e;">删除工作空间的改动代码，撤销commit且撤销add</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">如果commit注释写错了，先要改一下注释，有其他方法也能实现，如：</span></span>
<span class="line"><span style="color:#e1e4e8;">git commit --amend</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">如果commit注释写错了，先要改一下注释，有其他方法也能实现，如：</span></span>
<span class="line"><span style="color:#24292e;">git commit --amend</span></span></code></pre></div></blockquote><h2 id="应用篇" tabindex="-1">应用篇 <a class="header-anchor" href="#应用篇" aria-label="Permalink to &quot;应用篇&quot;">​</a></h2><h4 id="lombok" tabindex="-1">lombok <a class="header-anchor" href="#lombok" aria-label="Permalink to &quot;lombok&quot;">​</a></h4><h5 id="lombok-通用构造对象模板" tabindex="-1">lombok.通用构造对象模板 <a class="header-anchor" href="#lombok-通用构造对象模板" aria-label="Permalink to &quot;lombok.通用构造对象模板&quot;">​</a></h5><blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Data</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">AllArgsConstructor</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">NoArgsConstructor</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">EqualsAndHashCode</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">callSuper</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Accessors</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">chain</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">JsonIgnoreProperties</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">ignoreUnknown</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">JsonInclude</span><span style="color:#E1E4E8;">(JsonInclude.Include.NON_NULL)</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">XxxDTO</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Serializable</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> serialVersionUID </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">2958932327783069143L</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Data</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">AllArgsConstructor</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">NoArgsConstructor</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">EqualsAndHashCode</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">callSuper</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Accessors</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">chain</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">JsonIgnoreProperties</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">ignoreUnknown</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">JsonInclude</span><span style="color:#24292E;">(JsonInclude.Include.NON_NULL)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">XxxDTO</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Serializable</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> serialVersionUID </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2958932327783069143L</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span></code></pre></div></blockquote><h4 id="springbooot" tabindex="-1">springBooot <a class="header-anchor" href="#springbooot" aria-label="Permalink to &quot;springBooot&quot;">​</a></h4><h5 id="springbooot-版本对照" tabindex="-1">springBooot.版本对照 <a class="header-anchor" href="#springbooot-版本对照" aria-label="Permalink to &quot;springBooot.版本对照&quot;">​</a></h5><blockquote><p>Spring-Cloud-Alibaba版本说明：<a href="https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E" target="_blank" rel="noreferrer">https://github.com/alibaba/spring-cloud-alibaba/wiki/版本说明</a></p><p>SpringCloudAlibaba中文社区地址: <a href="https://github.com/alibaba/spring-cloud-alibaba/blob/master/README-zh.md" target="_blank" rel="noreferrer">https://github.com/alibaba/spring-cloud-alibaba/blob/master/README-zh.md</a></p><p>SpringBoot和SpringCloud版本对应信息查询地址：<a href="https://start.spring.io/actuator/info" target="_blank" rel="noreferrer">https://start.spring.io/actuator/info</a></p></blockquote><p><strong>SpringBoot和SpringCloud版本关系</strong></p><p><img src="`+D+'" alt="image-20220406184713838"></p><p><strong>SpringBoot、SpringCloud、SpringCloudAlibaba版本对应关系</strong></p><p><img src="'+F+'" alt="img"></p><p><strong>Spring Cloud Alibaba与组件版本关系</strong></p><p><img src="'+A+`" alt="img"></p><h5 id="springbooot-单元测试模板" tabindex="-1">springBooot.单元测试模板 <a class="header-anchor" href="#springbooot-单元测试模板" aria-label="Permalink to &quot;springBooot.单元测试模板&quot;">​</a></h5><blockquote><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">   &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">   &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-boot-starter-test&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">       &lt;</span><span style="color:#85E89D;">scope</span><span style="color:#E1E4E8;">&gt;test&lt;/</span><span style="color:#85E89D;">scope</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">   &lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">   &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">   &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-boot-starter-test&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">       &lt;</span><span style="color:#22863A;">scope</span><span style="color:#24292E;">&gt;test&lt;/</span><span style="color:#22863A;">scope</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">   &lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">SpringBootTest</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">RunWith</span><span style="color:#E1E4E8;">(SpringRunner.class)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Slf4j</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">XxxTest</span><span style="color:#E1E4E8;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">SpringBootTest</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">RunWith</span><span style="color:#24292E;">(SpringRunner.class)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Slf4j</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">XxxTest</span><span style="color:#24292E;"> {}</span></span></code></pre></div><p><code>ApplicationTest.java</code></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">SpringBootTest</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">classes</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> XxxApplication.class)</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">XxxTest</span><span style="color:#E1E4E8;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">SpringBootTest</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">classes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> XxxApplication.class)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">XxxTest</span><span style="color:#24292E;"> {}</span></span></code></pre></div></blockquote><h5 id="springbooot-链式启动" tabindex="-1">springBooot.链式启动 <a class="header-anchor" href="#springbooot-链式启动" aria-label="Permalink to &quot;springBooot.链式启动&quot;">​</a></h5><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SpringApplicationBuilder</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">sources</span><span style="color:#E1E4E8;">(Parent.class)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">child</span><span style="color:#E1E4E8;">(Application.class)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">bannerMode</span><span style="color:#E1E4E8;">(Banner.Mode.OFF)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">run</span><span style="color:#E1E4E8;">(args);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SpringApplicationBuilder</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">sources</span><span style="color:#24292E;">(Parent.class)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">child</span><span style="color:#24292E;">(Application.class)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">bannerMode</span><span style="color:#24292E;">(Banner.Mode.OFF)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">run</span><span style="color:#24292E;">(args);</span></span></code></pre></div><h5 id="springbooot-添加本地-jar" tabindex="-1">springBooot.添加本地 jar <a class="header-anchor" href="#springbooot-添加本地-jar" aria-label="Permalink to &quot;springBooot.添加本地 jar&quot;">​</a></h5><blockquote><p>步骤</p><ol><li>添加 jar 文件到项目中 resources/lib/xxx.jar</li><li>安装 jar 包到 maven 本地仓库</li></ol><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">build</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">plugins</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">          &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">          &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-boot-maven-plugin&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;/</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">          &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.apache.maven.plugins&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">          &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;maven-install-plugin&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">          &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;2.5.2&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">          &lt;</span><span style="color:#85E89D;">executions</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">              &lt;</span><span style="color:#85E89D;">execution</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                  &lt;</span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;">&gt;install-demo-jar&lt;/</span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                  &lt;</span><span style="color:#85E89D;">phase</span><span style="color:#E1E4E8;">&gt;clean&lt;/</span><span style="color:#85E89D;">phase</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                  &lt;</span><span style="color:#85E89D;">configuration</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                      &lt;</span><span style="color:#85E89D;">file</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                          \${project.basedir}/src/main/resources/lib/demo.jar</span></span>
<span class="line"><span style="color:#E1E4E8;">                      &lt;/</span><span style="color:#85E89D;">file</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                      &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;com.javalover&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                      &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;demo&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                      &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;1.0&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                      &lt;</span><span style="color:#85E89D;">packaging</span><span style="color:#E1E4E8;">&gt;jar&lt;/</span><span style="color:#85E89D;">packaging</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                      &lt;</span><span style="color:#85E89D;">generatePom</span><span style="color:#E1E4E8;">&gt;true&lt;/</span><span style="color:#85E89D;">generatePom</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                  &lt;/</span><span style="color:#85E89D;">configuration</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                  &lt;</span><span style="color:#85E89D;">goals</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                      &lt;</span><span style="color:#85E89D;">goal</span><span style="color:#E1E4E8;">&gt;install-file&lt;/</span><span style="color:#85E89D;">goal</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                  &lt;/</span><span style="color:#85E89D;">goals</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">              &lt;/</span><span style="color:#85E89D;">execution</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">          &lt;/</span><span style="color:#85E89D;">executions</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;/</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">plugins</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">build</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">build</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">plugins</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">          &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">          &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-boot-maven-plugin&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;/</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">          &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.apache.maven.plugins&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">          &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;maven-install-plugin&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">          &lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;2.5.2&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">          &lt;</span><span style="color:#22863A;">executions</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">              &lt;</span><span style="color:#22863A;">execution</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                  &lt;</span><span style="color:#22863A;">id</span><span style="color:#24292E;">&gt;install-demo-jar&lt;/</span><span style="color:#22863A;">id</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                  &lt;</span><span style="color:#22863A;">phase</span><span style="color:#24292E;">&gt;clean&lt;/</span><span style="color:#22863A;">phase</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                  &lt;</span><span style="color:#22863A;">configuration</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                      &lt;</span><span style="color:#22863A;">file</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                          \${project.basedir}/src/main/resources/lib/demo.jar</span></span>
<span class="line"><span style="color:#24292E;">                      &lt;/</span><span style="color:#22863A;">file</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                      &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;com.javalover&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                      &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;demo&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                      &lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;1.0&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                      &lt;</span><span style="color:#22863A;">packaging</span><span style="color:#24292E;">&gt;jar&lt;/</span><span style="color:#22863A;">packaging</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                      &lt;</span><span style="color:#22863A;">generatePom</span><span style="color:#24292E;">&gt;true&lt;/</span><span style="color:#22863A;">generatePom</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                  &lt;/</span><span style="color:#22863A;">configuration</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                  &lt;</span><span style="color:#22863A;">goals</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                      &lt;</span><span style="color:#22863A;">goal</span><span style="color:#24292E;">&gt;install-file&lt;/</span><span style="color:#22863A;">goal</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                  &lt;/</span><span style="color:#22863A;">goals</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">              &lt;/</span><span style="color:#22863A;">execution</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">          &lt;/</span><span style="color:#22863A;">executions</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;/</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">plugins</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">build</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>3.运行<code>mvn clean</code></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#FDAEB7;font-style:italic;">INFO</span><span style="color:#E1E4E8;">] Installing /Users/jalon/Project/SpringBootProject/demo/src/main/resources/lib/demo.jar to /Users/jalon/.m</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">/repository/com/javalover/demo/</span><span style="color:#79B8FF;">1.0</span><span style="color:#E1E4E8;">/demo</span><span style="color:#79B8FF;">-1.0</span><span style="color:#E1E4E8;">.jar\`</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#B31D28;font-style:italic;">INFO</span><span style="color:#24292E;">] Installing /Users/jalon/Project/SpringBootProject/demo/src/main/resources/lib/demo.jar to /Users/jalon/.m</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">/repository/com/javalover/demo/</span><span style="color:#005CC5;">1.0</span><span style="color:#24292E;">/demo</span><span style="color:#005CC5;">-1.0</span><span style="color:#24292E;">.jar\`</span></span></code></pre></div></blockquote><h4 id="redis" tabindex="-1">redis <a class="header-anchor" href="#redis" aria-label="Permalink to &quot;redis&quot;">​</a></h4><h5 id="旁路缓存" tabindex="-1">旁路缓存 <a class="header-anchor" href="#旁路缓存" aria-label="Permalink to &quot;旁路缓存&quot;">​</a></h5><blockquote><p><code> 读流程</code></p><ol><li>读的时候，先读缓存，缓存命中的话，直接返回数据</li><li>缓存没有命中的话，就去读数据库，从数据库取出数据，放入缓存后，同时返回响应。</li></ol><p><code>写流程</code></p><p>更新时 先删除缓存再更新数据库，再延时1s左右删除缓存</p></blockquote><h4 id="mysql" tabindex="-1">mysql <a class="header-anchor" href="#mysql" aria-label="Permalink to &quot;mysql&quot;">​</a></h4><h5 id="mysql-查某项重复的数据" tabindex="-1">mysql.查某项重复的数据 <a class="header-anchor" href="#mysql-查某项重复的数据" aria-label="Permalink to &quot;mysql.查某项重复的数据&quot;">​</a></h5><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> XX表 </span><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> 重复项 </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> 重复项 </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> XX表 </span><span style="color:#F97583;">GROUP BY</span><span style="color:#E1E4E8;"> 重复项 </span><span style="color:#F97583;">HAVING</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">count</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> XX表 </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> 重复项 </span><span style="color:#D73A49;">in</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> 重复项 </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> XX表 </span><span style="color:#D73A49;">GROUP BY</span><span style="color:#24292E;"> 重复项 </span><span style="color:#D73A49;">HAVING</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">count</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span></code></pre></div><h4 id="java" tabindex="-1">java <a class="header-anchor" href="#java" aria-label="Permalink to &quot;java&quot;">​</a></h4><h5 id="java-枚举值获取" tabindex="-1">java.枚举值获取 <a class="header-anchor" href="#java-枚举值获取" aria-label="Permalink to &quot;java.枚举值获取&quot;">​</a></h5><blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">enum</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Enum</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">A</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;1desc&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#79B8FF;">B</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;2desc&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#79B8FF;">C</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;3desc&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> value;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String desc;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">Enum</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">, String </span><span style="color:#FFAB70;">desc</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> value;</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.desc </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> desc;</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getValue</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value;</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">getDesc</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> desc;</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">   /**</span></span>
<span class="line"><span style="color:#6A737D;">   * 根据value获取desc</span></span>
<span class="line"><span style="color:#6A737D;">   *</span></span>
<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#FFAB70;">value</span><span style="color:#6A737D;"> value</span></span>
<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> desc</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">getDescByValue</span><span style="color:#E1E4E8;">(@</span><span style="color:#F97583;">NonNull</span><span style="color:#E1E4E8;"> Integer </span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Optional.</span><span style="color:#B392F0;">ofNullable</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">getByValue</span><span style="color:#E1E4E8;">(value)).</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(Enum</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">getDesc).</span><span style="color:#B392F0;">orElse</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">   /**</span></span>
<span class="line"><span style="color:#6A737D;">   * 根据value获取当前枚举对象</span></span>
<span class="line"><span style="color:#6A737D;">   *</span></span>
<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#FFAB70;">value</span><span style="color:#6A737D;"> value</span></span>
<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> this</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Enum </span><span style="color:#B392F0;">getByValue</span><span style="color:#E1E4E8;">(@</span><span style="color:#F97583;">NonNull</span><span style="color:#E1E4E8;"> Integer </span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">       Objects.</span><span style="color:#B392F0;">requireNonNull</span><span style="color:#E1E4E8;">(value);</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (Enum anEnum </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">values</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (Objects.</span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(anEnum.value, value)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">               </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> anEnum;</span></span>
<span class="line"><span style="color:#E1E4E8;">           }</span></span>
<span class="line"><span style="color:#E1E4E8;">       }</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">enum</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Enum</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">A</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;1desc&quot;</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">B</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;2desc&quot;</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">C</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;3desc&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> value;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String desc;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">Enum</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">value</span><span style="color:#24292E;">, String </span><span style="color:#E36209;">desc</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> value;</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.desc </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> desc;</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getValue</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> value;</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">getDesc</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> desc;</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">   /**</span></span>
<span class="line"><span style="color:#6A737D;">   * 根据value获取desc</span></span>
<span class="line"><span style="color:#6A737D;">   *</span></span>
<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">value</span><span style="color:#6A737D;"> value</span></span>
<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> desc</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">getDescByValue</span><span style="color:#24292E;">(@</span><span style="color:#D73A49;">NonNull</span><span style="color:#24292E;"> Integer </span><span style="color:#E36209;">value</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Optional.</span><span style="color:#6F42C1;">ofNullable</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">getByValue</span><span style="color:#24292E;">(value)).</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(Enum</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">getDesc).</span><span style="color:#6F42C1;">orElse</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">   /**</span></span>
<span class="line"><span style="color:#6A737D;">   * 根据value获取当前枚举对象</span></span>
<span class="line"><span style="color:#6A737D;">   *</span></span>
<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">value</span><span style="color:#6A737D;"> value</span></span>
<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> this</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Enum </span><span style="color:#6F42C1;">getByValue</span><span style="color:#24292E;">(@</span><span style="color:#D73A49;">NonNull</span><span style="color:#24292E;"> Integer </span><span style="color:#E36209;">value</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">       Objects.</span><span style="color:#6F42C1;">requireNonNull</span><span style="color:#24292E;">(value);</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (Enum anEnum </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">values</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (Objects.</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(anEnum.value, value)) {</span></span>
<span class="line"><span style="color:#24292E;">               </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> anEnum;</span></span>
<span class="line"><span style="color:#24292E;">           }</span></span>
<span class="line"><span style="color:#24292E;">       }</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><code>map获取</code></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Map&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">Enum</span><span style="color:#E1E4E8;">&gt; maps </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> HashMap&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 类加载时把此枚举类中的属性做个映射存入map中</span></span>
<span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (Enum anEnum </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">values</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      maps.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(anEnum.value, anEnum);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Enum </span><span style="color:#B392F0;">getByValue</span><span style="color:#E1E4E8;">(@</span><span style="color:#F97583;">NonNull</span><span style="color:#E1E4E8;"> Integer value) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  Objects.</span><span style="color:#B392F0;">requireNonNull</span><span style="color:#E1E4E8;">(value);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> maps.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(value);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Map&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">Enum</span><span style="color:#24292E;">&gt; maps </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashMap&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 类加载时把此枚举类中的属性做个映射存入map中</span></span>
<span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (Enum anEnum </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">values</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">      maps.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(anEnum.value, anEnum);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Enum </span><span style="color:#6F42C1;">getByValue</span><span style="color:#24292E;">(@</span><span style="color:#D73A49;">NonNull</span><span style="color:#24292E;"> Integer value) {</span></span>
<span class="line"><span style="color:#24292E;">  Objects.</span><span style="color:#6F42C1;">requireNonNull</span><span style="color:#24292E;">(value);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> maps.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(value);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><code>条件获取</code></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Enum </span><span style="color:#B392F0;">getByValue</span><span style="color:#E1E4E8;">(@</span><span style="color:#F97583;">NonNull</span><span style="color:#E1E4E8;"> Integer value) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  Objects.</span><span style="color:#B392F0;">requireNonNull</span><span style="color:#E1E4E8;">(value);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (value) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> A;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> B;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> C;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">default:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IllegalStateException</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Unexpected value: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> value);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Enum </span><span style="color:#6F42C1;">getByValue</span><span style="color:#24292E;">(@</span><span style="color:#D73A49;">NonNull</span><span style="color:#24292E;"> Integer value) {</span></span>
<span class="line"><span style="color:#24292E;">  Objects.</span><span style="color:#6F42C1;">requireNonNull</span><span style="color:#24292E;">(value);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (value) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> A;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> B;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> C;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">default:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IllegalStateException</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Unexpected value: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> value);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></blockquote><h5 id="java-threadlocal优化" tabindex="-1">java.ThreadLocal优化 <a class="header-anchor" href="#java-threadlocal优化" aria-label="Permalink to &quot;java.ThreadLocal优化&quot;">​</a></h5><blockquote><p><code>TransmittableThreadLocal</code></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//1.ThreadLocal全链路信息存储</span></span>
<span class="line"><span style="color:#6A737D;">//2.解决父子线程数据传递问题</span></span>
<span class="line"><span style="color:#6A737D;">//3.解决线程池数据传递问题</span></span>
<span class="line"><span style="color:#E1E4E8;">ThreadLocal&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; threadLocal </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> TransmittableThreadLocal&lt;&gt;();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//1.ThreadLocal全链路信息存储</span></span>
<span class="line"><span style="color:#6A737D;">//2.解决父子线程数据传递问题</span></span>
<span class="line"><span style="color:#6A737D;">//3.解决线程池数据传递问题</span></span>
<span class="line"><span style="color:#24292E;">ThreadLocal&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; threadLocal </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> TransmittableThreadLocal&lt;&gt;();</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">TransmittableThreadLocal&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; context </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> TransmittableThreadLocal&lt;&gt;();</span></span>
<span class="line"><span style="color:#6A737D;">// =====================================================</span></span>
<span class="line"><span style="color:#6A737D;">// 在父线程中设置</span></span>
<span class="line"><span style="color:#E1E4E8;">context.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;value-set-in-parent&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// =====================================================</span></span>
<span class="line"><span style="color:#6A737D;">// 在子线程中可以读取，值是&quot;value-set-in-parent&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">String value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> context.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">TransmittableThreadLocal&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; context </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> TransmittableThreadLocal&lt;&gt;();</span></span>
<span class="line"><span style="color:#6A737D;">// =====================================================</span></span>
<span class="line"><span style="color:#6A737D;">// 在父线程中设置</span></span>
<span class="line"><span style="color:#24292E;">context.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;value-set-in-parent&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// =====================================================</span></span>
<span class="line"><span style="color:#6A737D;">// 在子线程中可以读取，值是&quot;value-set-in-parent&quot;</span></span>
<span class="line"><span style="color:#24292E;">String value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> context.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">();</span></span></code></pre></div></blockquote><h5 id="java-stream-多字段分组求和" tabindex="-1">java.stream.多字段分组求和 <a class="header-anchor" href="#java-stream-多字段分组求和" aria-label="Permalink to &quot;java.stream.多字段分组求和&quot;">​</a></h5><blockquote><p><code>增加一个 getKey()方法，返回多个字段组成的唯一key，比如通过下划线连接</code></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 分组统计</span></span>
<span class="line"><span style="color:#E1E4E8;">Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">Long</span><span style="color:#E1E4E8;">&gt; countMap </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> records.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors.</span><span style="color:#B392F0;">groupingBy</span><span style="color:#E1E4E8;">(o </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> o.</span><span style="color:#B392F0;">getProductType</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;_&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> o.</span><span style="color:#B392F0;">getCountry</span><span style="color:#E1E4E8;">(), Collectors.</span><span style="color:#B392F0;">counting</span><span style="color:#E1E4E8;">()));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">List&lt;</span><span style="color:#F97583;">Record</span><span style="color:#E1E4E8;">&gt; countRecords </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> countMap.</span><span style="color:#B392F0;">keySet</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(key </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] temp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> key.</span><span style="color:#B392F0;">split</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;_&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">String productType </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> temp[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">String country </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> temp[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">Record record </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Record</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">record.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;device_type&quot;</span><span style="color:#E1E4E8;">, productType);</span></span>
<span class="line"><span style="color:#E1E4E8;">record.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;location&quot;</span><span style="color:#E1E4E8;">, country;</span></span>
<span class="line"><span style="color:#E1E4E8;">record.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;count&quot;</span><span style="color:#E1E4E8;">, countMap.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(key).</span><span style="color:#B392F0;">intValue</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> record;</span></span>
<span class="line"><span style="color:#E1E4E8;">}).</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors.</span><span style="color:#B392F0;">toList</span><span style="color:#E1E4E8;">());</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 分组统计</span></span>
<span class="line"><span style="color:#24292E;">Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">Long</span><span style="color:#24292E;">&gt; countMap </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> records.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">groupingBy</span><span style="color:#24292E;">(o </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> o.</span><span style="color:#6F42C1;">getProductType</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;_&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> o.</span><span style="color:#6F42C1;">getCountry</span><span style="color:#24292E;">(), Collectors.</span><span style="color:#6F42C1;">counting</span><span style="color:#24292E;">()));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">List&lt;</span><span style="color:#D73A49;">Record</span><span style="color:#24292E;">&gt; countRecords </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> countMap.</span><span style="color:#6F42C1;">keySet</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(key </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] temp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> key.</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;_&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">String productType </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> temp[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">String country </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> temp[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">Record record </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Record</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">record.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;device_type&quot;</span><span style="color:#24292E;">, productType);</span></span>
<span class="line"><span style="color:#24292E;">record.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;location&quot;</span><span style="color:#24292E;">, country;</span></span>
<span class="line"><span style="color:#24292E;">record.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;count&quot;</span><span style="color:#24292E;">, countMap.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(key).</span><span style="color:#6F42C1;">intValue</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> record;</span></span>
<span class="line"><span style="color:#24292E;">}).</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">toList</span><span style="color:#24292E;">());</span></span></code></pre></div></blockquote><h5 id="java-stream-list转为map汇总" tabindex="-1">java.stream.List转为Map汇总 <a class="header-anchor" href="#java-stream-list转为map汇总" aria-label="Permalink to &quot;java.stream.List转为Map汇总&quot;">​</a></h5><blockquote><p>Stream将List转换为Map，使用Collectors.toMap方法进行转换</p><p>背景：User类，类中分别有id，name,age三个属性。List集合,userList，存储User对象</p><p>1、指定key-value，value是<strong>对象中的某个属性值</strong>。</p><p>Map&lt;Integer,String&gt; userMap1 = userList.stream().collect(Collectors.toMap(User::getId,User::getName));</p><p>2、指定key-value，value是<strong>对象本身</strong>，User-&gt;User 是一个返回本身的lambda表达式</p><p>Map&lt;Integer,User&gt; userMap2 = userList.stream().collect(Collectors.toMap(User::getId,User-&gt;User));</p><p>3、指定key-value，value是对象本身，Function.identity()是简洁写法，也是返回对象本身</p><p>Map&lt;Integer,User&gt; userMap3 = userList.stream().collect(Collectors.toMap(User::getId, Function.identity()));</p><p>4、指定key-value，value是对象本身，<strong>Function.identity()是简洁写法，也是返回对象本身，key 冲突的解决办法，这里选择第二个key覆盖第一个key</strong>。</p><p>Map&lt;Integer,User&gt; userMap4 = userList.stream().collect(Collectors.toMap(User::getId, Function.identity(),(key1,key2)-&gt;key2));</p></blockquote><h5 id="java-stream-左对称差集-交集" tabindex="-1">java.stream.左对称差集&amp;交集 <a class="header-anchor" href="#java-stream-左对称差集-交集" aria-label="Permalink to &quot;java.stream.左对称差集&amp;交集&quot;">​</a></h5><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">List&lt;Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">Object</span><span style="color:#E1E4E8;">&gt;&gt; list3 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> list1.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">parallel</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">(a </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> list2.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">	                        .</span><span style="color:#B392F0;">noneMatch</span><span style="color:#E1E4E8;">(b</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> Objects.</span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(a.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;">), b.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;">))))</span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors.</span><span style="color:#B392F0;">toList</span><span style="color:#E1E4E8;">());</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">List&lt;Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">&gt;&gt; list3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> list1.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">parallel</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(a </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> list2.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">	                        .</span><span style="color:#6F42C1;">noneMatch</span><span style="color:#24292E;">(b</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> Objects.</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(a.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">), b.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">))))</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">toList</span><span style="color:#24292E;">());</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">List&lt;Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">Object</span><span style="color:#E1E4E8;">&gt;&gt; list3 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> list1.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">parallel</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">(a </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> list2.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">	                        .</span><span style="color:#B392F0;">anyMatch</span><span style="color:#E1E4E8;">(b</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> Objects.</span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(a.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;">), b.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;">))))</span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors.</span><span style="color:#B392F0;">toList</span><span style="color:#E1E4E8;">());</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">List&lt;Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">&gt;&gt; list3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> list1.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">parallel</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(a </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> list2.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">	                        .</span><span style="color:#6F42C1;">anyMatch</span><span style="color:#24292E;">(b</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> Objects.</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(a.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">), b.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">))))</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">toList</span><span style="color:#24292E;">());</span></span></code></pre></div>`,105),q=[C];function f(B,I,j,x,S,M){return a(),n("div",null,q)}const P=s(k,[["render",f]]);export{L as __pageData,P as default};
