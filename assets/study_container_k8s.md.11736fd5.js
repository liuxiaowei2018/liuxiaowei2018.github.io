import{_ as e,c as a,o as s,N as l}from"./chunks/framework.0799945b.js";const n="/assets/640.5d529f7a.webp",o="/assets/640-16397125997272.392eb719.webp",r="/assets/640-16397126133914.68976135.webp",t="/assets/640-16397126371816.ce88ade6.webp",p="/assets/image-20230612114707880.143d184b.png",c="/assets/image-20230612114734047.5d5992a5.png",i="/assets/image-20230612114757814.0a7a4e1e.png",h="/assets/image-20230612114815803.442af343.png",d="/assets/image-20230612114829935.9ee438cd.png",u="/assets/image-20230612114902090.854b21bb.png",y="/assets/image-20230612114955566.e193a57c.png",v=JSON.parse('{"title":"K8s","description":"","frontmatter":{},"headers":[],"relativePath":"study/container/k8s.md"}'),C={name:"study/container/k8s.md"},m=l('<h1 id="k8s" tabindex="-1">K8s <a class="header-anchor" href="#k8s" aria-label="Permalink to &quot;K8s&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#kubernetes">Kubernetes</a><ul><li><a href="#node">Node</a></li><li><a href="#deployment">Deployment</a></li><li><a href="#pod">Pod</a></li><li><a href="#service">Service</a></li></ul></li><li><a href="#minikube">Minikube</a></li><li><a href="#rancher">Rancher</a><ul><li><a href="#安装rancher">安装Rancher</a></li><li><a href="#rancher部署应用">Rancher部署应用</a></li></ul></li></ul></nav><p>Kubernetes用于自动部署，扩展和管理容器化应用程序的开源系统。它将组成应用程序的容器组合成逻辑单元，以便于管理和服务发现。</p><p>Kubernetes具有如下特性：</p><ul><li>服务发现与负载均衡：无需修改你的应用程序即可使用陌生的服务发现机制。</li><li>存储编排：自动挂载所选存储系统，包括本地存储。</li><li>Secret和配置管理：部署更新Secrets和应用程序的配置时不必重新构建容器镜像，且不必将软件堆栈配置中的秘密信息暴露出来。</li><li>批量执行：除了服务之外，Kubernetes还可以管理你的批处理和CI工作负载，在期望时替换掉失效的容器。</li><li>水平扩缩：使用一个简单的命令、一个UI或基于CPU使用情况自动对应用程序进行扩缩。</li><li>自动化上线和回滚：Kubernetes会分步骤地将针对应用或其配置的更改上线，同时监视应用程序运行状况以确保你不会同时终止所有实例。</li><li>自动装箱：根据资源需求和其他约束自动放置容器，同时避免影响可用性。</li><li>自我修复：重新启动失败的容器，在节点死亡时替换并重新调度容器，杀死不响应用户定义的健康检查的容器。</li></ul><h2 id="kubernetes" tabindex="-1">Kubernetes <a class="header-anchor" href="#kubernetes" aria-label="Permalink to &quot;Kubernetes&quot;">​</a></h2><h3 id="node" tabindex="-1">Node <a class="header-anchor" href="#node" aria-label="Permalink to &quot;Node&quot;">​</a></h3><p>Kubernetes集群是指Kubernetes协调一个高可用计算机集群，每个计算机作为独立单元互相连接工作。</p><p>一个Kubernetes集群包含两种类型的资源：</p><ul><li>Master：负责管理整个集群。协调集群中的所有活动，例如调度应用、维护应用的所需状态、应用扩容以及推出新的更新。</li><li>Node：用于托管正在运行的应用。可以是一个虚拟机或者物理机，它在Kubernetes集群中充当工作机器的角色，每个Node都有Kubelet，它管理Node而且是Node与Master通信的代理，Node还具有用于处理容器操作的工具，例如Docker或rkt。</li></ul><p><img src="'+n+'" alt="图片"></p><h3 id="deployment" tabindex="-1">Deployment <a class="header-anchor" href="#deployment" aria-label="Permalink to &quot;Deployment&quot;">​</a></h3><p>Deployment负责创建和更新应用程序的实例。创建Deployment后，Kubernetes Master 将应用程序实例调度到集群中的各个节点上。如果托管实例的节点关闭或被删除，Deployment控制器会将该实例替换为群集中另一个节点上的实例。这提供了一种自我修复机制来解决机器故障维护问题。</p><p>可以使用Kubernetes命令行界面Kubectl创建和管理Deployment。Kubectl使用Kubernetes API与集群进行交互。</p><p><img src="'+o+'" alt="图片"></p><h3 id="pod" tabindex="-1">Pod <a class="header-anchor" href="#pod" aria-label="Permalink to &quot;Pod&quot;">​</a></h3><p>Pod相当于<code>逻辑主机</code>的概念，负责托管应用实例。包括一个或多个应用程序容器（如 Docker），以及这些容器的一些共享资源（共享存储、网络、运行信息等）。</p><p><img src="'+r+'" alt="图片"></p><h3 id="service" tabindex="-1">Service <a class="header-anchor" href="#service" aria-label="Permalink to &quot;Service&quot;">​</a></h3><p>Service是一个抽象层，它定义了一组Pod的逻辑集，并为这些Pod支持外部流量暴露、负载平衡和服务发现。</p><p>尽管每个Pod 都有一个唯一的IP地址，但是如果没有Service，这些IP不会暴露在群集外部。Service允许您的应用程序接收流量。Service也可以用在ServiceSpec标记type的方式暴露，type类型如下：</p><ul><li>ClusterIP（默认）：在集群的内部IP上公开Service。这种类型使得Service只能从集群内访问。</li><li>NodePort：使用NAT在集群中每个选定Node的相同端口上公开Service。使用<code>&lt;NodeIP&gt;:&lt;NodePort&gt;</code>从集群外部访问Service。是ClusterIP的超集。</li><li>LoadBalancer：在当前云中创建一个外部负载均衡器(如果支持的话)，并为Service分配一个固定的外部IP。是NodePort的超集。</li><li>ExternalName：通过返回带有该名称的CNAME记录，使用任意名称（由spec中的externalName指定）公开Service。不使用代理。</li></ul><p><img src="'+t+`" alt="图片"></p><h2 id="minikube" tabindex="-1">Minikube <a class="header-anchor" href="#minikube" aria-label="Permalink to &quot;Minikube&quot;">​</a></h2><p>Minikube是一种轻量级的Kubernetes实现，可在本地计算机上创建VM并部署仅包含一个节点的简单集群，Minikube可用于Linux、MacOS和Windows系统。Minikube CLI提供了用于引导集群工作的多种操作，包括启动、停止、查看状态和删除。</p><h2 id="rancher" tabindex="-1">Rancher <a class="header-anchor" href="#rancher" aria-label="Permalink to &quot;Rancher&quot;">​</a></h2><p>Rancher是一个开源的企业级全栈化容器部署及管理平台。Rancher为容器提供一系列基础架构服务：CNI兼容的网络服务、存储服务、主机管理、负载均衡、防火墙……Rancher让上述服务跨越公有云、私有云、虚拟机、物理机环境运行，真正实现一键式应用部署和管理。</p><blockquote><p>官方文档：<a href="https://www.cnrancher.com/" target="_blank" rel="noreferrer">https://www.cnrancher.com/</a></p></blockquote><h3 id="安装rancher" tabindex="-1">安装Rancher <a class="header-anchor" href="#安装rancher" aria-label="Permalink to &quot;安装Rancher&quot;">​</a></h3><h4 id="docker安装" tabindex="-1">docker安装 <a class="header-anchor" href="#docker安装" aria-label="Permalink to &quot;docker安装&quot;">​</a></h4><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#CentOS 7.0默认使用的是firewall作为防火墙</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#查看防火墙状态</span></span>
<span class="line"><span style="color:#FFCB6B;">firewall-cmd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--state</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#停止firewall</span></span>
<span class="line"><span style="color:#FFCB6B;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stop</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">firewalld.service</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#禁止firewall开机启动</span></span>
<span class="line"><span style="color:#FFCB6B;">systemctl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">disable</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">firewalld.service</span></span></code></pre></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#下载Rancher镜像</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rancher/server</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#启动Rancher容器</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--restart=unless-stopped</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8888</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">8080</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rancher</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--privileged</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rancher/server</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#查看rancher登录密码 </span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">logs</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">容器ID</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">2&gt;&amp;1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">grep</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Bootstrap Password:</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><blockquote><p>访问地址：<a href="http://81.68.218.181:8888/" target="_blank" rel="noreferrer">http://81.68.218.181:8888/</a></p></blockquote><h4 id="添加环境" tabindex="-1">添加环境 <a class="header-anchor" href="#添加环境" aria-label="Permalink to &quot;添加环境&quot;">​</a></h4><blockquote><p>Rancher 支持将资源分组归属到多个环境。 每个环境具有自己独立的基础架构资源及服务，并由一个或多个用户、团队或组织所管理。</p></blockquote><p>选择“Default --&gt;环境管理” 菜单，然后点击“添加环境”按钮，填写名称、描述、选择环境模板，最后点击“创建”按钮，完成环境创建。</p><p><img src="`+p+'" alt="image-20230612114707880"></p><h4 id="添加主机" tabindex="-1">添加主机 <a class="header-anchor" href="#添加主机" aria-label="Permalink to &quot;添加主机&quot;">​</a></h4><p><img src="'+c+'" alt="image-20230612114734047"></p><p><img src="'+i+'" alt="image-20230612114757814"></p><p><img src="'+h+'" alt="image-20230612114815803"></p><p><img src="'+d+'" alt="image-20230612114829935"></p><h4 id="添加应用" tabindex="-1">添加应用 <a class="header-anchor" href="#添加应用" aria-label="Permalink to &quot;添加应用&quot;">​</a></h4><p><img src="'+u+'" alt="image-20230612114902090"></p><h3 id="rancher部署应用" tabindex="-1">Rancher部署应用 <a class="header-anchor" href="#rancher部署应用" aria-label="Permalink to &quot;Rancher部署应用&quot;">​</a></h3><p><img src="'+y+'" alt="image-20230612114955566"></p>',46),b=[m];function D(k,f,_,g,A,P){return s(),a("div",null,b)}const E=e(C,[["render",D]]);export{v as __pageData,E as default};
