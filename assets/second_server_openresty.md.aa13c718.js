import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.8048b864.js";const p="/assets/image-20220402123208037.9680df40.png",o="/assets/image-20220402123357661.97843549.png",e="/assets/image-20220402123411282.b28b4c87.png",t="/assets/image-20220402123433056.52eba2ae.png",c="/assets/image-20220402123447611.99fe6e7a.png",r="/assets/image-20220402123544268.c9dc35cb.png",y="/assets/image-20220402123628101.0ff70c99.png",i="/assets/image-20220402123655105.ff8cdf31.png",E="/assets/image-20220402123711468.27fd89ab.png",u="/assets/image-20220402124454704.1ce9d9a0.png",d="/assets/image-20220402130921980.496ac1ac.png",F="/assets/image-20220402120923965.522945e1.png",h="/assets/image-20220402120952443.4c71cd9f.png",g="/assets/image-20220402121028277.69287791.png",m="/assets/image-20220402121050839.8d28f878.png",w=JSON.parse('{"title":"OpenResty","description":"","frontmatter":{},"headers":[],"relativePath":"second/server/openresty.md","filePath":"second/server/openresty.md","lastUpdated":null}'),b={name:"second/server/openresty.md"},q=l('<h1 id="openresty" tabindex="-1">OpenResty <a class="header-anchor" href="#openresty" aria-label="Permalink to &quot;OpenResty&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#_1、openresty应用">1、OpenResty应用</a><ul><li><a href="#环境搭建">环境搭建</a></li><li><a href="#lua入门">Lua入门</a></li><li><a href="#入门案例">入门案例</a></li><li><a href="#twemproxy-redis">twemproxy+redis</a></li><li><a href="#openresty模板渲染">Openresty模板渲染</a></li></ul></li><li><a href="#_2、openresty扩展">2、OpenResty扩展</a><ul><li><a href="#常用架构">常用架构</a></li></ul></li></ul></nav><blockquote><p>官方文档：<a href="https://openresty.org/cn/" target="_blank" rel="noreferrer">https://openresty.org/cn/</a></p></blockquote><blockquote><p>OpenResty® 是一个基于 Nginx 与 Lua 的高性能 Web 平台，其内部集成了大量精良的 Lua 库、第三方模块以及大多数的依赖项。用于方便地搭建能够处理超高并发、扩展性极高的动态 Web 应用、Web 服务和动态网关。</p><p>openResty® 通过汇聚各种设计精良的 Nginx 模块（主要由 OpenResty 团队自主开发），从而将 Nginx 有效地变成一个强大的通用 Web 应用平台。这样，Web 开发人员和系统工程师可以使用 Lua 脚本语言调动 Nginx 支持的各种 C 以及 Lua 模块，快速构造出足以胜任 10K 乃至 1000K 以上单机并发连接的高性能 Web 应用系统。</p><p>OpenResty® 的目标是让你的Web服务直接跑在 Nginx 服务内部，充分利用 Nginx 的非阻塞 I/O 模型，不仅仅对 HTTP 客户端请求,甚至于对远程后端诸如 MySQL、PostgreSQL、Memcached 以及 Redis 等都进行一致的高性能响应。</p></blockquote><h2 id="_1、openresty应用" tabindex="-1">1、OpenResty应用 <a class="header-anchor" href="#_1、openresty应用" aria-label="Permalink to &quot;1、OpenResty应用&quot;">​</a></h2><h3 id="环境搭建" tabindex="-1">环境搭建 <a class="header-anchor" href="#环境搭建" aria-label="Permalink to &quot;环境搭建&quot;">​</a></h3><h4 id="linux安装openresty" tabindex="-1">Linux安装openresty <a class="header-anchor" href="#linux安装openresty" aria-label="Permalink to &quot;Linux安装openresty&quot;">​</a></h4><blockquote><p><code>解压</code></p><p>tar -xzvf openresty-VERSION.tar.gz</p><p><code>进入 openresty-VERSION/ 目录, 然后输入以下命令配置:</code></p><p>./configure</p><p>默认, --prefix=/usr/local/openresty 程序会被安装到/usr/local/openresty目录</p><p><code>安装</code></p><p>OpenResty 依赖库有： perl 5.6.1+, libreadline, libpcre, libssl</p><p>yum install readline-devel pcre-devel openssl-devel perl gcc</p><p>Make &amp;&amp; make install</p></blockquote><h4 id="linux安装lua" tabindex="-1">Linux安装Lua <a class="header-anchor" href="#linux安装lua" aria-label="Permalink to &quot;Linux安装Lua&quot;">​</a></h4><blockquote><p>tar zxf lua-5.3.4.tar.gz</p><p>cd lua-5.3.4</p><p>make linux test</p><p>make install</p></blockquote><h3 id="lua入门" tabindex="-1">Lua入门 <a class="header-anchor" href="#lua入门" aria-label="Permalink to &quot;Lua入门&quot;">​</a></h3><h4 id="数据类型与变量" tabindex="-1">数据类型与变量 <a class="header-anchor" href="#数据类型与变量" aria-label="Permalink to &quot;数据类型与变量&quot;">​</a></h4><p><img src="'+p+`" alt="image-20220402123208037"></p><p>Lua 变量有三种类型：全局变量、局部变量、表中的域。</p><p>Lua 中的变量全是全局变量，那怕是语句块或是函数里，除非用 local 显式声明为局部变量。</p><p>局部变量的作用域为从声明位置开始到所在语句块结束。</p><p>变量的默认值均为 nil。</p><h4 id="运算符" tabindex="-1">运算符 <a class="header-anchor" href="#运算符" aria-label="Permalink to &quot;运算符&quot;">​</a></h4><h5 id="赋值运算符" tabindex="-1">赋值运算符 <a class="header-anchor" href="#赋值运算符" aria-label="Permalink to &quot;赋值运算符&quot;">​</a></h5><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 赋值</span></span>
<span class="line"><span style="color:#E1E4E8;">str</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;helllo&quot;</span><span style="color:#F97583;">..</span><span style="color:#9ECBFF;">&quot;world&quot; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(str)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">a,b</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">20</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(a,b)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">c,d,e</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(c,d,e)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">x,y</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(x,y)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 赋值</span></span>
<span class="line"><span style="color:#24292E;">str</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;helllo&quot;</span><span style="color:#D73A49;">..</span><span style="color:#032F62;">&quot;world&quot; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(str)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">a,b</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">20</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(a,b)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">c,d,e</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(c,d,e)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">x,y</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(x,y)</span></span></code></pre></div><h5 id="算术运算符" tabindex="-1">算术运算符 <a class="header-anchor" href="#算术运算符" aria-label="Permalink to &quot;算术运算符&quot;">​</a></h5><p><img src="`+o+'" alt="image-20220402123357661"></p><h5 id="关系运算符" tabindex="-1">关系运算符 <a class="header-anchor" href="#关系运算符" aria-label="Permalink to &quot;关系运算符&quot;">​</a></h5><p><img src="'+e+'" alt="image-20220402123411282"></p><h5 id="逻辑运算符" tabindex="-1">逻辑运算符 <a class="header-anchor" href="#逻辑运算符" aria-label="Permalink to &quot;逻辑运算符&quot;">​</a></h5><p><img src="'+t+'" alt="image-20220402123433056"></p><h5 id="其它运算符" tabindex="-1">其它运算符 <a class="header-anchor" href="#其它运算符" aria-label="Permalink to &quot;其它运算符&quot;">​</a></h5><p><img src="'+c+'" alt="image-20220402123447611"></p><h4 id="流程控制" tabindex="-1">流程控制 <a class="header-anchor" href="#流程控制" aria-label="Permalink to &quot;流程控制&quot;">​</a></h4><h5 id="条件" tabindex="-1">条件 <a class="header-anchor" href="#条件" aria-label="Permalink to &quot;条件&quot;">​</a></h5><p><img src="'+r+`" alt="image-20220402123544268"></p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 条件</span></span>
<span class="line"><span style="color:#6A737D;">-- if</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;ok&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">end</span></span>
<span class="line"><span style="color:#6A737D;">-- if else</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">a,b</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">20</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(a</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">b)</span></span>
<span class="line"><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(a)</span></span>
<span class="line"><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(b)</span></span>
<span class="line"><span style="color:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">-- if 嵌套</span></span>
<span class="line"><span style="color:#E1E4E8;">c</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">20</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(c</span><span style="color:#F97583;">&gt;</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(c</span><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(c</span><span style="color:#F97583;">..</span><span style="color:#9ECBFF;">&quot;的值在10到30之间&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">end</span></span>
<span class="line"><span style="color:#F97583;">end</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 条件</span></span>
<span class="line"><span style="color:#6A737D;">-- if</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ok&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span>
<span class="line"><span style="color:#6A737D;">-- if else</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">a,b</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">20</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(a</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">b)</span></span>
<span class="line"><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(a)</span></span>
<span class="line"><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(b)</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">-- if 嵌套</span></span>
<span class="line"><span style="color:#24292E;">c</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">20</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;">(c</span><span style="color:#D73A49;">&gt;</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(c</span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(c</span><span style="color:#D73A49;">..</span><span style="color:#032F62;">&quot;的值在10到30之间&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">end</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span></code></pre></div><h5 id="循环" tabindex="-1">循环 <a class="header-anchor" href="#循环" aria-label="Permalink to &quot;循环&quot;">​</a></h5><p><img src="`+y+'" alt="image-20220402123628101"></p><p>for循环分为数值for循环与泛型for循环</p><p><strong>数值for循环</strong></p><p><img src="'+i+'" alt="image-20220402123655105"></p><p><strong>泛型for循环</strong></p><p><img src="'+E+`" alt="image-20220402123711468"></p><h4 id="lua数组" tabindex="-1">Lua数组 <a class="header-anchor" href="#lua数组" aria-label="Permalink to &quot;Lua数组&quot;">​</a></h4><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 数组(大小不固定，下标是从1开始)</span></span>
<span class="line"><span style="color:#E1E4E8;">arr</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;aaa&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;bbb&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;ccc&quot;</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">-- 使用数值for通过下标来遍历数组</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> i</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">#</span><span style="color:#E1E4E8;">arr</span></span>
<span class="line"><span style="color:#F97583;">do</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(arr[i])</span></span>
<span class="line"><span style="color:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">--使用泛型for遍历数组</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> i,v </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ipairs</span><span style="color:#E1E4E8;">(arr) </span><span style="color:#F97583;">do</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(i,v) </span><span style="color:#F97583;">end</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 数组(大小不固定，下标是从1开始)</span></span>
<span class="line"><span style="color:#24292E;">arr</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;aaa&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;bbb&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;ccc&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">-- 使用数值for通过下标来遍历数组</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">#</span><span style="color:#24292E;">arr</span></span>
<span class="line"><span style="color:#D73A49;">do</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(arr[i])</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">--使用泛型for遍历数组</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i,v </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ipairs</span><span style="color:#24292E;">(arr) </span><span style="color:#D73A49;">do</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(i,v) </span><span style="color:#D73A49;">end</span></span></code></pre></div><h4 id="lua函数" tabindex="-1">Lua函数 <a class="header-anchor" href="#lua函数" aria-label="Permalink to &quot;Lua函数&quot;">​</a></h4><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">optional_function_scope </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">function_name</span><span style="color:#E1E4E8;">( argument1, argument2, argument3..., </span><span style="color:#B392F0;">argumentn</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    function_body</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> result_params_comma_separated</span></span>
<span class="line"><span style="color:#F97583;">end</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">optional_function_scope </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">function_name</span><span style="color:#24292E;">( argument1, argument2, argument3..., </span><span style="color:#6F42C1;">argumentn</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    function_body</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> result_params_comma_separated</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span></code></pre></div><ul><li><p>optional_function_scope: 该参数是可选的制定函数是全局函数还是局部函数，未设置该参数默认为全局函数，设置函数为局部函数需要使用关键字 local。</p></li><li><p>function_name: 指定函数名称。</p></li><li><p>argument1, argument2, argument3..., argumentn: 函数参数，多个参数以逗号隔开，函数也可以不带参数。</p></li><li><p>function_body: 函数体，函数中需要执行的代码语句块。</p></li><li><p>result_params_comma_separated: 函数返回值，Lua语言函数可以返回多个值，每个值以逗号隔开。</p></li></ul><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 函数</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sum</span><span style="color:#E1E4E8;">(a,b) </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> a</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">b</span></span>
<span class="line"><span style="color:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">c</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">sum</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(c)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">------------------------------</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">fun</span><span style="color:#E1E4E8;">(a,b,c,d)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> a</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,b</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,c</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">r1,r2</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">fun</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(r1,r2)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 函数</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sum</span><span style="color:#24292E;">(a,b) </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> a</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">b</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">c</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">sum</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(c)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">------------------------------</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">fun</span><span style="color:#24292E;">(a,b,c,d)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> a</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,b</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,c</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">r1,r2</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">fun</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(r1,r2)</span></span></code></pre></div><h4 id="lua-table" tabindex="-1">Lua table <a class="header-anchor" href="#lua-table" aria-label="Permalink to &quot;Lua table&quot;">​</a></h4><blockquote><p>table 是 Lua 的一种数据结构用来帮助我们创建不同的数据类型，如：数字、字典等。</p><p>Lua table 使用关联型数组，你可以用任意类型的值来作数组的索引，但这个值不能是 nil。</p><p>Lua table 是不固定大小的，你可以根据自己需要进行扩容。</p><p>Lua也是通过table来解决模块（module）、包（package）和对象（Object）的。 例如string.format表示使用&quot;format&quot;来索引table string。</p></blockquote><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- table</span></span>
<span class="line"><span style="color:#E1E4E8;">mytable</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{}</span></span>
<span class="line"><span style="color:#E1E4E8;">mytable.</span><span style="color:#B392F0;">first</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;tom&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">mytable.</span><span style="color:#B392F0;">second</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;james&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(mytable[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(mytable.</span><span style="color:#B392F0;">first</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(mytable[</span><span style="color:#9ECBFF;">&quot;second&quot;</span><span style="color:#E1E4E8;">])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- table</span></span>
<span class="line"><span style="color:#24292E;">mytable</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{}</span></span>
<span class="line"><span style="color:#24292E;">mytable.</span><span style="color:#6F42C1;">first</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;tom&quot;</span></span>
<span class="line"><span style="color:#24292E;">mytable.</span><span style="color:#6F42C1;">second</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;james&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(mytable[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(mytable.</span><span style="color:#6F42C1;">first</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(mytable[</span><span style="color:#032F62;">&quot;second&quot;</span><span style="color:#24292E;">])</span></span></code></pre></div><h4 id="lua模块与包" tabindex="-1">Lua模块与包 <a class="header-anchor" href="#lua模块与包" aria-label="Permalink to &quot;Lua模块与包&quot;">​</a></h4><blockquote><p>模块类似于一个封装库，从 Lua 5.1 开始，Lua 加入了标准的模块管理机制，可以把一些公用的代码放在一个文件里，以 API 接口的形式在其他地方调用，有利于代码的重用和降低代码耦合度。</p><p>Lua 的模块是由变量、函数等已知元素组成的 table，因此创建一个模块很简单，就是创建一个 table，然后把需要导出的常量、函数放入其中，最后返回这个 table 就行</p><p><code>module.lua</code></p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">module</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">index</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">sum</span><span style="color:#E1E4E8;">(a,b)</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> a</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">b</span></span>
<span class="line"><span style="color:#F97583;">end</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">module</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">index</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">module</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">sum</span><span style="color:#24292E;">(a,b)</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> a</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">b</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span></code></pre></div><p><code>test.lua</code></p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;module&quot;</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">index</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">sum</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">require</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;module&quot;</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">index</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">sum</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">))</span></span></code></pre></div><p><img src="`+u+`" alt="image-20220402124454704"></p></blockquote><h3 id="入门案例" tabindex="-1">入门案例 <a class="header-anchor" href="#入门案例" aria-label="Permalink to &quot;入门案例&quot;">​</a></h3><h4 id="helloworld" tabindex="-1">helloWorld <a class="header-anchor" href="#helloworld" aria-label="Permalink to &quot;helloWorld&quot;">​</a></h4><p>openresty 1.9.3.1 及以下版本，请使用 content_by_lua 命令；在 openresty 1.9.3.2 以上，content_by_lua 改成了 content_by_lua_block。</p><p>可使用 nginx -V 命令查看版本号</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">location </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">#</span><span style="color:#E1E4E8;">root   html;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">#</span><span style="color:#E1E4E8;">index  index.</span><span style="color:#B392F0;">html</span><span style="color:#E1E4E8;"> index.</span><span style="color:#B392F0;">htm</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    default_type text</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">html;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">content_by_lua_block</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        ngx.</span><span style="color:#79B8FF;">say</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;hello world&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">location </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">#</span><span style="color:#24292E;">root   html;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">#</span><span style="color:#24292E;">index  index.</span><span style="color:#6F42C1;">html</span><span style="color:#24292E;"> index.</span><span style="color:#6F42C1;">htm</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    default_type text</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">html;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">content_by_lua_block</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        ngx.</span><span style="color:#005CC5;">say</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;hello world&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>使用content_by_lua_file 来引入一个lua文件</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">location </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">#</span><span style="color:#E1E4E8;">root   html;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">#</span><span style="color:#E1E4E8;">index  index.</span><span style="color:#B392F0;">html</span><span style="color:#E1E4E8;"> index.</span><span style="color:#B392F0;">htm</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    default_type text</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">html;</span></span>
<span class="line"><span style="color:#E1E4E8;">    content_by_lua_file </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">usr</span><span style="color:#F97583;">/local/</span><span style="color:#E1E4E8;">openresty</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">nginx</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">conf</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">my.</span><span style="color:#B392F0;">lua</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">location </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">#</span><span style="color:#24292E;">root   html;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">#</span><span style="color:#24292E;">index  index.</span><span style="color:#6F42C1;">html</span><span style="color:#24292E;"> index.</span><span style="color:#6F42C1;">htm</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    default_type text</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">html;</span></span>
<span class="line"><span style="color:#24292E;">    content_by_lua_file </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">usr</span><span style="color:#D73A49;">/local/</span><span style="color:#24292E;">openresty</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">nginx</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">conf</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">my.</span><span style="color:#6F42C1;">lua</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="获取http请求信息" tabindex="-1">获取http请求信息 <a class="header-anchor" href="#获取http请求信息" aria-label="Permalink to &quot;获取http请求信息&quot;">​</a></h4><p>获取uri参数</p><p>获取一个 uri 有两个方法：ngx.req.get_uri_args、ngx.req.get_post_args，二者主要的区别是参数来源有区别</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 获取get请求参数</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> arg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ngx.</span><span style="color:#B392F0;">req</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">get_uri_args</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> k,v </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">pairs</span><span style="color:#E1E4E8;">(arg) </span><span style="color:#F97583;">do</span></span>
<span class="line"><span style="color:#E1E4E8;">   ngx.</span><span style="color:#79B8FF;">say</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;[GET ] key:&quot;</span><span style="color:#E1E4E8;">, k, </span><span style="color:#9ECBFF;">&quot; v:&quot;</span><span style="color:#E1E4E8;">, v)</span></span>
<span class="line"><span style="color:#E1E4E8;">   ngx.</span><span style="color:#79B8FF;">say</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;&lt;br&gt;&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">-- 获取post请求时 请求参数</span></span>
<span class="line"><span style="color:#E1E4E8;">ngx.</span><span style="color:#B392F0;">req</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">read_body</span><span style="color:#E1E4E8;">() </span><span style="color:#6A737D;">-- 解析 body 参数之前一定要先读取 body</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> arg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ngx.</span><span style="color:#B392F0;">req</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">get_post_args</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> k,v </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">pairs</span><span style="color:#E1E4E8;">(arg) </span><span style="color:#F97583;">do</span></span>
<span class="line"><span style="color:#E1E4E8;">   ngx.</span><span style="color:#79B8FF;">say</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;[POST] key:&quot;</span><span style="color:#E1E4E8;">, k, </span><span style="color:#9ECBFF;">&quot; v:&quot;</span><span style="color:#E1E4E8;">, v)</span></span>
<span class="line"><span style="color:#E1E4E8;">    ngx.</span><span style="color:#79B8FF;">say</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;&lt;br&gt;&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">end</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 获取get请求参数</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> arg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ngx.</span><span style="color:#6F42C1;">req</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">get_uri_args</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> k,v </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">pairs</span><span style="color:#24292E;">(arg) </span><span style="color:#D73A49;">do</span></span>
<span class="line"><span style="color:#24292E;">   ngx.</span><span style="color:#005CC5;">say</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;[GET ] key:&quot;</span><span style="color:#24292E;">, k, </span><span style="color:#032F62;">&quot; v:&quot;</span><span style="color:#24292E;">, v)</span></span>
<span class="line"><span style="color:#24292E;">   ngx.</span><span style="color:#005CC5;">say</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;&lt;br&gt;&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">-- 获取post请求时 请求参数</span></span>
<span class="line"><span style="color:#24292E;">ngx.</span><span style="color:#6F42C1;">req</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">read_body</span><span style="color:#24292E;">() </span><span style="color:#6A737D;">-- 解析 body 参数之前一定要先读取 body</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> arg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ngx.</span><span style="color:#6F42C1;">req</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">get_post_args</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> k,v </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">pairs</span><span style="color:#24292E;">(arg) </span><span style="color:#D73A49;">do</span></span>
<span class="line"><span style="color:#24292E;">   ngx.</span><span style="color:#005CC5;">say</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;[POST] key:&quot;</span><span style="color:#24292E;">, k, </span><span style="color:#032F62;">&quot; v:&quot;</span><span style="color:#24292E;">, v)</span></span>
<span class="line"><span style="color:#24292E;">    ngx.</span><span style="color:#005CC5;">say</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;&lt;br&gt;&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span></code></pre></div><p>获取header</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 获取header</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> headers </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ngx.</span><span style="color:#B392F0;">req</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">get_headers</span><span style="color:#E1E4E8;">()  </span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> k,v </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">pairs</span><span style="color:#E1E4E8;">(headers) </span><span style="color:#F97583;">do</span></span>
<span class="line"><span style="color:#E1E4E8;">   ngx.</span><span style="color:#79B8FF;">say</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;[header] name:&quot;</span><span style="color:#E1E4E8;">, k, </span><span style="color:#9ECBFF;">&quot; v:&quot;</span><span style="color:#E1E4E8;">, v)</span></span>
<span class="line"><span style="color:#E1E4E8;">    ngx.</span><span style="color:#79B8FF;">say</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;&lt;br&gt;&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">end</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 获取header</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> headers </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ngx.</span><span style="color:#6F42C1;">req</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">get_headers</span><span style="color:#24292E;">()  </span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> k,v </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">pairs</span><span style="color:#24292E;">(headers) </span><span style="color:#D73A49;">do</span></span>
<span class="line"><span style="color:#24292E;">   ngx.</span><span style="color:#005CC5;">say</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;[header] name:&quot;</span><span style="color:#24292E;">, k, </span><span style="color:#032F62;">&quot; v:&quot;</span><span style="color:#24292E;">, v)</span></span>
<span class="line"><span style="color:#24292E;">    ngx.</span><span style="color:#005CC5;">say</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;&lt;br&gt;&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span></code></pre></div><p>获取body</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 获取body信息</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> data </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ngx.</span><span style="color:#B392F0;">req</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">get_body_data</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">ngx.</span><span style="color:#79B8FF;">say</span><span style="color:#E1E4E8;">(data)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 获取body信息</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ngx.</span><span style="color:#6F42C1;">req</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">get_body_data</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">ngx.</span><span style="color:#005CC5;">say</span><span style="color:#24292E;">(data)</span></span></code></pre></div><p>ngx.req.get_body_data() 读请求体，会偶尔出现读取不到直接返回 nil 的情况。如果请求体尚未被读取，请先调用 <a href="#ngxreqread_body">ngx.req.read_body</a> (或打开 <a href="#lua_need_request_body">lua_need_request_body</a> 选项强制本模块读取请求体，此方法不推荐）</p><h4 id="操作redis" tabindex="-1">操作redis <a class="header-anchor" href="#操作redis" aria-label="Permalink to &quot;操作redis&quot;">​</a></h4><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> redis </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">require</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;resty.redis&quot;</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> red </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">redis</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">new</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">red</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">set_timeout</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">-- 1 sec</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> ok, err </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">red</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">connect</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;192.168.93.134&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">6379</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> ok </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">	ngx.</span><span style="color:#79B8FF;">say</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;failed to connect: &quot;</span><span style="color:#E1E4E8;">, err)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">return</span></span>
<span class="line"><span style="color:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">-- 请注意这里 auth 的调用过程</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> count</span></span>
<span class="line"><span style="color:#E1E4E8;">count, err </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">red</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">get_reused_times</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> count </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">	ok, err </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">red</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">auth</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;admin&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> ok </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">		ngx.</span><span style="color:#79B8FF;">say</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;failed to auth: &quot;</span><span style="color:#E1E4E8;">, err)</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">end</span></span>
<span class="line"><span style="color:#F97583;">elseif</span><span style="color:#E1E4E8;"> err </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">	ngx.</span><span style="color:#79B8FF;">say</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;failed to get reused times: &quot;</span><span style="color:#E1E4E8;">, err)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">return</span></span>
<span class="line"><span style="color:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">ok, err </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">red</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;itcast&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;good school&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> ok </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">	ngx.</span><span style="color:#79B8FF;">say</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;failed to set itcast: &quot;</span><span style="color:#E1E4E8;">, err)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">return</span></span>
<span class="line"><span style="color:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">ngx.</span><span style="color:#79B8FF;">say</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;set result: &quot;</span><span style="color:#E1E4E8;">, ok)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">-- 连接池大小是100个，并且设置最大的空闲时间是 10 秒</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> ok, err </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">red</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">set_keepalive</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10000</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> ok </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">	ngx.</span><span style="color:#79B8FF;">say</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;failed to set keepalive: &quot;</span><span style="color:#E1E4E8;">, err)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">return</span></span>
<span class="line"><span style="color:#F97583;">end</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> redis </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">require</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;resty.redis&quot;</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> red </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">redis</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">new</span><span style="color:#24292E;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">red</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">set_timeout</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">-- 1 sec</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> ok, err </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">red</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">connect</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;192.168.93.134&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">6379</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> ok </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">	ngx.</span><span style="color:#005CC5;">say</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;failed to connect: &quot;</span><span style="color:#24292E;">, err)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">-- 请注意这里 auth 的调用过程</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> count</span></span>
<span class="line"><span style="color:#24292E;">count, err </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">red</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">get_reused_times</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> count </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">	ok, err </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">red</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">auth</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;admin&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> ok </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">		ngx.</span><span style="color:#005CC5;">say</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;failed to auth: &quot;</span><span style="color:#24292E;">, err)</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">end</span></span>
<span class="line"><span style="color:#D73A49;">elseif</span><span style="color:#24292E;"> err </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">	ngx.</span><span style="color:#005CC5;">say</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;failed to get reused times: &quot;</span><span style="color:#24292E;">, err)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">ok, err </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">red</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;itcast&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;good school&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> ok </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">	ngx.</span><span style="color:#005CC5;">say</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;failed to set itcast: &quot;</span><span style="color:#24292E;">, err)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">ngx.</span><span style="color:#005CC5;">say</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;set result: &quot;</span><span style="color:#24292E;">, ok)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">-- 连接池大小是100个，并且设置最大的空闲时间是 10 秒</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> ok, err </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">red</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">set_keepalive</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10000</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> ok </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">	ngx.</span><span style="color:#005CC5;">say</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;failed to set keepalive: &quot;</span><span style="color:#24292E;">, err)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">return</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span></code></pre></div><h3 id="twemproxy-redis" tabindex="-1">twemproxy+redis <a class="header-anchor" href="#twemproxy-redis" aria-label="Permalink to &quot;twemproxy+redis&quot;">​</a></h3><blockquote><p>Twemproxy是Twitter开发的一个redis代理proxy, Twemproxy通过引入一个代理层，可以将其后端的多台Redis或Memcached实例进行统一管理与分配，使应用程序只需要在Twemproxy上进行操作，而不用关心后面具体有多少个真实的Redis或Memcached存储.简单说，就是有了Twemproxy，客户端不直接访问Redis服务器，而是通过twemproxy 代理中间件间接访问</p><p>1）支持失败节点自动删除</p><p>可以设置重新连接该节点的时间</p><p>可以设置连接多少次之后删除该节点</p><p>2）支持设置HashTag</p><p>通过HashTag可以自己设定将两个key哈希到同一个实例上去</p><p>3）减少与redis的直接连接数</p><p>保持与redis的长连接</p><p>减少了客户端直接与服务器连接的连接数量</p><p>4）自动分片到后端多个redis实例上</p><p>多种hash算法：md5、crc16、crc32 、crc32a、fnv1_64、fnv1a_64、fnv1_32、fnv1a_32、hsieh、murmur、jenkins</p><p>多种分片算法：ketama(一致性hash算法的一种实现)、modula、random</p><p>可以设置后端实例的权重</p><p>5）避免单点问题</p><p>可以平行部署多个代理层,通过HAProxy做负载均衡，将redis的读写分散到多个twemproxy上。</p><p>6）支持状态监控</p><p>可设置状态监控ip和端口，访问ip和端口可以得到一个json格式的状态信息串</p><p>可设置监控信息刷新间隔时间</p><p>7）使用 pipelining 处理请求和响应</p><p>连接复用，内存复用</p><p>将多个连接请求，组成reids pipelining统一向redis请求</p><p>8）并不是支持所有redis命令</p><p>不支持redis的事务操作</p><p>使用SIDFF, SDIFFSTORE, SINTER, SINTERSTORE, SMOVE, SUNION and SUNIONSTORE命令需要保证key都在同一个分片上。</p></blockquote><h4 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h4><p>使用一个twemproxy+两台redis（未做主从）</p><p>实际部署中需要使用keepalived解决twemproxy单点问题，并且需要做redis主从。</p><p>机器1 twemproxy</p><p>机器2 redis</p><p>机器3 redis</p><blockquote><p>机器1</p><p><code>安装 autoconf</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz</span></span>
<span class="line"><span style="color:#e1e4e8;">tar -zxvf autoconf-2.69.tar.gz</span></span>
<span class="line"><span style="color:#e1e4e8;">cd autoconf-2.69</span></span>
<span class="line"><span style="color:#e1e4e8;">./configure &amp;&amp; make &amp;&amp; make install</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wget http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz</span></span>
<span class="line"><span style="color:#24292e;">tar -zxvf autoconf-2.69.tar.gz</span></span>
<span class="line"><span style="color:#24292e;">cd autoconf-2.69</span></span>
<span class="line"><span style="color:#24292e;">./configure &amp;&amp; make &amp;&amp; make install</span></span></code></pre></div><p><code>安装automake</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wget http://ftp.gnu.org/gnu/automake/automake-1.15.tar.gz</span></span>
<span class="line"><span style="color:#e1e4e8;">tar -zvxf automake-1.15.tar.gz</span></span>
<span class="line"><span style="color:#e1e4e8;">cd automake-1.15</span></span>
<span class="line"><span style="color:#e1e4e8;">./configure &amp;&amp; make &amp;&amp; make install</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wget http://ftp.gnu.org/gnu/automake/automake-1.15.tar.gz</span></span>
<span class="line"><span style="color:#24292e;">tar -zvxf automake-1.15.tar.gz</span></span>
<span class="line"><span style="color:#24292e;">cd automake-1.15</span></span>
<span class="line"><span style="color:#24292e;">./configure &amp;&amp; make &amp;&amp; make install</span></span></code></pre></div><p><code>安装libtool</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wget https://ftp.gnu.org/gnu/libtool/libtool-2.4.6.tar.gz</span></span>
<span class="line"><span style="color:#e1e4e8;">tar -zvxf libtool-2.4.6.tar.gz</span></span>
<span class="line"><span style="color:#e1e4e8;">cd libtool-2.4.6</span></span>
<span class="line"><span style="color:#e1e4e8;">./configure &amp;&amp; make &amp;&amp; make install</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wget https://ftp.gnu.org/gnu/libtool/libtool-2.4.6.tar.gz</span></span>
<span class="line"><span style="color:#24292e;">tar -zvxf libtool-2.4.6.tar.gz</span></span>
<span class="line"><span style="color:#24292e;">cd libtool-2.4.6</span></span>
<span class="line"><span style="color:#24292e;">./configure &amp;&amp; make &amp;&amp; make install</span></span></code></pre></div><p><code>安装twemproxy</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wget https://github.com/twitter/twemproxy/archive/master.zip</span></span>
<span class="line"><span style="color:#e1e4e8;">unzip master</span></span>
<span class="line"><span style="color:#e1e4e8;">cd twemproxy-master</span></span>
<span class="line"><span style="color:#e1e4e8;">aclocal</span></span>
<span class="line"><span style="color:#e1e4e8;">autoreconf -f -i -Wall,no-obsolete</span></span>
<span class="line"><span style="color:#e1e4e8;">mkdir /usr/local/twemproxy</span></span>
<span class="line"><span style="color:#e1e4e8;">./configure --prefix=/usr/local/twemproxy/</span></span>
<span class="line"><span style="color:#e1e4e8;">make &amp;&amp; make install</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wget https://github.com/twitter/twemproxy/archive/master.zip</span></span>
<span class="line"><span style="color:#24292e;">unzip master</span></span>
<span class="line"><span style="color:#24292e;">cd twemproxy-master</span></span>
<span class="line"><span style="color:#24292e;">aclocal</span></span>
<span class="line"><span style="color:#24292e;">autoreconf -f -i -Wall,no-obsolete</span></span>
<span class="line"><span style="color:#24292e;">mkdir /usr/local/twemproxy</span></span>
<span class="line"><span style="color:#24292e;">./configure --prefix=/usr/local/twemproxy/</span></span>
<span class="line"><span style="color:#24292e;">make &amp;&amp; make install</span></span></code></pre></div><p><code>配置twemproxy</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">将twemproxy-master下的conf目录复制到/usr/local/twemproxy下</span></span>
<span class="line"><span style="color:#e1e4e8;">cp -r ./conf /usr/local/twemproxy/</span></span>
<span class="line"><span style="color:#e1e4e8;">cd /usr/local/twemproxy/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">将twemproxy-master下的conf目录复制到/usr/local/twemproxy下</span></span>
<span class="line"><span style="color:#24292e;">cp -r ./conf /usr/local/twemproxy/</span></span>
<span class="line"><span style="color:#24292e;">cd /usr/local/twemproxy/</span></span></code></pre></div><p><code>修改conf目录下nutcracker.yml文件内容</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">alpha:</span></span>
<span class="line"><span style="color:#e1e4e8;"> listen: 192.168.93.134:22121</span></span>
<span class="line"><span style="color:#e1e4e8;"> hash: fnv1a_64</span></span>
<span class="line"><span style="color:#e1e4e8;"> distribution: ketama</span></span>
<span class="line"><span style="color:#e1e4e8;"> auto_eject_hosts: true</span></span>
<span class="line"><span style="color:#e1e4e8;"> redis: true</span></span>
<span class="line"><span style="color:#e1e4e8;"> server_retry_timeout: 2000</span></span>
<span class="line"><span style="color:#e1e4e8;"> server_failure_limit: 1</span></span>
<span class="line"><span style="color:#e1e4e8;"> servers:</span></span>
<span class="line"><span style="color:#e1e4e8;">  - 192.168.93.133:6379:1</span></span>
<span class="line"><span style="color:#e1e4e8;">  - 192.168.93.134:6379:1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">alpha:</span></span>
<span class="line"><span style="color:#24292e;"> listen: 192.168.93.134:22121</span></span>
<span class="line"><span style="color:#24292e;"> hash: fnv1a_64</span></span>
<span class="line"><span style="color:#24292e;"> distribution: ketama</span></span>
<span class="line"><span style="color:#24292e;"> auto_eject_hosts: true</span></span>
<span class="line"><span style="color:#24292e;"> redis: true</span></span>
<span class="line"><span style="color:#24292e;"> server_retry_timeout: 2000</span></span>
<span class="line"><span style="color:#24292e;"> server_failure_limit: 1</span></span>
<span class="line"><span style="color:#24292e;"> servers:</span></span>
<span class="line"><span style="color:#24292e;">  - 192.168.93.133:6379:1</span></span>
<span class="line"><span style="color:#24292e;">  - 192.168.93.134:6379:1</span></span></code></pre></div><p>启动twemproxy</p><p>注意 机器2与机器3上的redis要启动。</p><p>并需要关闭防火墙 service iptables stop</p><p>redis集群方案是ruby redis</p><p>测试</p><p><img src="`+d+`" alt="image-20220402130921980"></p></blockquote><h3 id="openresty模板渲染" tabindex="-1">Openresty模板渲染 <a class="header-anchor" href="#openresty模板渲染" aria-label="Permalink to &quot;Openresty模板渲染&quot;">​</a></h3><p>导入lua-resty-template</p><blockquote><p>下载 <a href="http://luarocks.org/modules/bungle/lua-resty-template" target="_blank" rel="noreferrer">http://luarocks.org/modules/bungle/lua-resty-template</a></p><p>将template.lua文件复制到openresty/lualib/resty/目录下</p></blockquote><p>nginx.conf</p><blockquote><p>设置模板路径：set $template_root /usr/local/openresty/nginx/html/templates;</p><p>设置mimeType类型：default_type text/html;</p><p>导入lua文件:content_by_lua_file /usr/local/openresty/nginx/conf/*.lua</p></blockquote><p>lua脚本文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"># 示例1</span></span>
<span class="line"><span style="color:#e1e4e8;">local template = require &quot;resty.template&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">content={ </span></span>
<span class="line"><span style="color:#e1e4e8;">	message = &quot;Hello, World!&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">	names = {&quot;james&quot;,&quot;fox&quot;,&quot;tony&quot;}</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span>
<span class="line"><span style="color:#e1e4e8;">template.render(&quot;demo.html&quot;, content)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"># 示例1</span></span>
<span class="line"><span style="color:#24292e;">local template = require &quot;resty.template&quot;</span></span>
<span class="line"><span style="color:#24292e;">content={ </span></span>
<span class="line"><span style="color:#24292e;">	message = &quot;Hello, World!&quot;,</span></span>
<span class="line"><span style="color:#24292e;">	names = {&quot;james&quot;,&quot;fox&quot;,&quot;tony&quot;}</span></span>
<span class="line"><span style="color:#24292e;">}</span></span>
<span class="line"><span style="color:#24292e;">template.render(&quot;demo.html&quot;, content)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"># 示例2</span></span>
<span class="line"><span style="color:#e1e4e8;">local template = require &quot;resty.template&quot;  </span></span>
<span class="line"><span style="color:#e1e4e8;">local redis = require &quot;resty.redis_iresty&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">local red = redis:new()</span></span>
<span class="line"><span style="color:#e1e4e8;">local msg = red:get(&quot;num&quot;)</span></span>
<span class="line"><span style="color:#e1e4e8;">if ngx.null==msg then</span></span>
<span class="line"><span style="color:#e1e4e8;">	return ngx.say(&quot;获取库存失败&quot;);</span></span>
<span class="line"><span style="color:#e1e4e8;">end</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">local context = {  </span></span>
<span class="line"><span style="color:#e1e4e8;">    title = &quot;商城&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">	-- 从redis中获取库存信息，在页面中显示</span></span>
<span class="line"><span style="color:#e1e4e8;">	num=msg</span></span>
<span class="line"><span style="color:#e1e4e8;">}  </span></span>
<span class="line"><span style="color:#e1e4e8;">local request_uri = ngx.var.request_uri</span></span>
<span class="line"><span style="color:#e1e4e8;">template.render(string.sub(request_uri,2),context);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"># 示例2</span></span>
<span class="line"><span style="color:#24292e;">local template = require &quot;resty.template&quot;  </span></span>
<span class="line"><span style="color:#24292e;">local redis = require &quot;resty.redis_iresty&quot;</span></span>
<span class="line"><span style="color:#24292e;">local red = redis:new()</span></span>
<span class="line"><span style="color:#24292e;">local msg = red:get(&quot;num&quot;)</span></span>
<span class="line"><span style="color:#24292e;">if ngx.null==msg then</span></span>
<span class="line"><span style="color:#24292e;">	return ngx.say(&quot;获取库存失败&quot;);</span></span>
<span class="line"><span style="color:#24292e;">end</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">local context = {  </span></span>
<span class="line"><span style="color:#24292e;">    title = &quot;商城&quot;,</span></span>
<span class="line"><span style="color:#24292e;">	-- 从redis中获取库存信息，在页面中显示</span></span>
<span class="line"><span style="color:#24292e;">	num=msg</span></span>
<span class="line"><span style="color:#24292e;">}  </span></span>
<span class="line"><span style="color:#24292e;">local request_uri = ngx.var.request_uri</span></span>
<span class="line"><span style="color:#24292e;">template.render(string.sub(request_uri,2),context);</span></span></code></pre></div><h2 id="_2、openresty扩展" tabindex="-1">2、OpenResty扩展 <a class="header-anchor" href="#_2、openresty扩展" aria-label="Permalink to &quot;2、OpenResty扩展&quot;">​</a></h2><h3 id="常用架构" tabindex="-1">常用架构 <a class="header-anchor" href="#常用架构" aria-label="Permalink to &quot;常用架构&quot;">​</a></h3><h4 id="负载均衡" tabindex="-1">负载均衡 <a class="header-anchor" href="#负载均衡" aria-label="Permalink to &quot;负载均衡&quot;">​</a></h4><p>LVS+HAProxy将流量转发给核心Nginx 1和核心Nginx 2，即实现了流量的负载均衡</p><p><img src="`+F+'" alt="image-20220402120923965"></p><h4 id="单机闭环" tabindex="-1">单机闭环 <a class="header-anchor" href="#单机闭环" aria-label="Permalink to &quot;单机闭环&quot;">​</a></h4><p>从本服务器直接获取，在大多数时候无需通过网络去其他服务器获取</p><p><img src="'+h+'" alt="image-20220402120952443"></p><h4 id="分布式闭环" tabindex="-1">分布式闭环 <a class="header-anchor" href="#分布式闭环" aria-label="Permalink to &quot;分布式闭环&quot;">​</a></h4><p>单机闭环会遇到如下两个主要问题：</p><p>1、数据不一致问题（比如没有采用主从架构导致不同服务器数据不一致）；</p><p>2、遇到存储瓶颈（磁盘或者内存遇到了天花板）。</p><p>解决数据不一致的比较好的办法是采用主从或者分布式集中存储；而遇到存储瓶颈就需要进行按照业务键进行分片，将数据分散到多台服务器</p><p><img src="'+g+'" alt="image-20220402121028277"></p><h4 id="接入网关" tabindex="-1">接入网关 <a class="header-anchor" href="#接入网关" aria-label="Permalink to &quot;接入网关&quot;">​</a></h4><p><img src="'+m+'" alt="image-20220402121050839"></p>',101),C=[q];function k(f,v,x,_,A,D){return a(),n("div",null,C)}const P=s(b,[["render",k]]);export{w as __pageData,P as default};
