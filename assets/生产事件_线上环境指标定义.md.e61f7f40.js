import{_ as a,o as e,c as t,Q as r}from"./chunks/framework.8048b864.js";const g=JSON.parse('{"title":"线上环境指标定义","description":"","frontmatter":{},"headers":[],"relativePath":"生产事件/线上环境指标定义.md","filePath":"生产事件/线上环境指标定义.md","lastUpdated":1719110524000}'),o={name:"生产事件/线上环境指标定义.md"},s=r('<h1 id="线上环境指标定义" tabindex="-1">线上环境指标定义 <a class="header-anchor" href="#线上环境指标定义" aria-label="Permalink to &quot;线上环境指标定义&quot;">​</a></h1><h2 id="qps" tabindex="-1">QPS <a class="header-anchor" href="#qps" aria-label="Permalink to &quot;QPS&quot;">​</a></h2><p><strong>QPS</strong> <code>(Queries Per Second)</code> 是每秒查询率 ,是<strong>一台服务器</strong>每秒能够相应的查询次数，是对一个特定的查询服务器<strong>在规定时间内</strong>所处理流量多少的衡量标准, 即每秒的响应请求数，也即是最大吞吐能力。</p><p>比如说服务的用户查询 API 支持 100 QPS，就是指这个接口可以做到每秒查 100 次。</p><p>目前接触下来比较合理的 QPS 范围：带了数据库的服务一般写性能在 5k 以下，读性能一般在 10k 以下，能到 10k 以上的话，那很可能是在数据库前面加了层缓存。如果你的服务还带了个文本算法模型，那使用了 gpu 的情况下 API 一般支持 100~400QPS 左右，如果是个同时支持文本和图片的模型，也就是所谓的多模态模型，那一般在 100QPS 以内。</p><p><img src="https://cdn.jsdelivr.net/gh/liuxiaowei2018/image/repo/202406221553530.png" alt="image-20240622155315489"></p><h3 id="如何计算-qps" tabindex="-1">如何计算 QPS? <a class="header-anchor" href="#如何计算-qps" aria-label="Permalink to &quot;如何计算 QPS?&quot;">​</a></h3><p>QPS(TPS)=并发数/平均响应时间</p><p>一个系统吞吐量通常有 QPS(TPS) 并发数 两个因素决定，每套系统这个两个值都有一个相对极限值，在应用场景访问压力下，只要某一项达到系统最高值，系统吞吐量就上不去了，如果压力继续增大，系统的吞吐量反而会下降，原因是系统超负荷工作，上下文切换，内存等等其他消耗导致系统性能下降。</p><h2 id="吞吐量-tps" tabindex="-1">吞吐量（TPS） <a class="header-anchor" href="#吞吐量-tps" aria-label="Permalink to &quot;吞吐量（TPS）&quot;">​</a></h2><p><strong>TPS</strong> <code>Transactions Per Second</code> 也就是事务数/秒。一个事务是指一个客户机向服务器发送请求然后服务器做出反应的过程。客户机在发送请求时开始计时，收到服务器响应后结束计时，以此来计算使用的时间和完成的事务个数</p><h2 id="并发度-吞吐量" tabindex="-1">并发度/吞吐量 <a class="header-anchor" href="#并发度-吞吐量" aria-label="Permalink to &quot;并发度/吞吐量&quot;">​</a></h2><p><strong>并发数</strong>（并发度）：指系统同时能处理的请求数量，同样反应了系统的负载能力。这个数值可以分析机器1s内的访问日志数量来得到</p><p><strong>吞吐量</strong>是指系统在单位时间内处理请求的数量，TPS、QPS都是吞吐量的常用量化指标。</p><h2 id="pv-uv-dau-mau" tabindex="-1">PV/UV/DAU/MAU <a class="header-anchor" href="#pv-uv-dau-mau" aria-label="Permalink to &quot;PV/UV/DAU/MAU&quot;">​</a></h2><p><strong>PV</strong>（Page View）：页面访问量，即页面浏览量或点击量，用户每次刷新即被计算一次。可以统计服务一天的访问日志得到。</p><p><strong>UV</strong>（Unique Visitor）：独立访客，统计1天内访问某站点的用户数。可以统计服务一天的访问日志并根据用户的唯一标识去重得到。响应时间（RT）：响应时间是指系统对请求作出响应的时间，一般取平均响应时间。可以通过Nginx、Apache之类的Web Server得到。</p><p><strong>DAU</strong>(Daily Active User)，日活跃用户数量。常用于反映网站、互联网应用或网络游戏的运营情况。DAU通常统计一日（统计日）之内，登录或使用了某个产品的用户数（去除重复登录的用户），与UV概念相似</p><p><strong>MAU</strong>(Month Active User)：月活跃用户数量，指网站、app等去重后的月活跃用户数量</p>',19),n=[s];function i(p,c,d,h,l,P){return e(),t("div",null,n)}const u=a(o,[["render",i]]);export{g as __pageData,u as default};
