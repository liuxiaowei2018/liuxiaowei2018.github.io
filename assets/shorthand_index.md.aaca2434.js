import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.8048b864.js";const p="/assets/image-20220406184713838.efd581ad.png",o="/assets/1248052-20210518170524298-715334460.fc937b86.png",e="/assets/1248052-20210518170534318-329317752.9308ada3.png",t="/assets/image-20230519141703990.a709be74.png",c="/assets/image-20230418144910852.d4690d8a.png",C=JSON.parse('{"title":"开发过程速记","description":"","frontmatter":{},"headers":[],"relativePath":"shorthand/index.md","filePath":"shorthand/index.md","lastUpdated":1698401521000}'),r={name:"shorthand/index.md"},E=l(`<h1 id="开发过程速记" tabindex="-1">开发过程速记 <a class="header-anchor" href="#开发过程速记" aria-label="Permalink to &quot;开发过程速记&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#构造对象模板">构造对象模板</a></li><li><a href="#枚举对象模板">枚举对象模板</a></li><li><a href="#stream流操作模板">Stream流操作模板</a><ul><li><a href="#多字段分组求和">多字段分组求和</a></li><li><a href="#list转为map">List转为Map</a></li><li><a href="#左对称差集-交集">左对称差集/交集</a></li></ul></li><li><a href="#单元测试模板">单元测试模板</a></li><li><a href="#springboot速记">SpringBoot速记</a><ul><li><a href="#spring版本关系">Spring版本关系</a></li><li><a href="#springbooot链式启动">SpringBooot链式启动</a></li><li><a href="#springbooot添加本地-jar">SpringBooot添加本地 jar</a></li></ul></li><li><a href="#mysql速记">Mysql速记</a><ul><li><a href="#查某项重复的数据">查某项重复的数据</a></li><li><a href="#group-concat函数使用">group_concat函数使用</a></li><li><a href="#insert-ignore-into插入数据">insert ignore into插入数据</a></li><li><a href="#on-duplicate-key-update更新数据">on duplicate key update更新数据</a></li><li><a href="#insert-select-where-not-exist插入数据">insert … select … where not exist插入数据</a></li><li><a href="#replace-into插入数据">replace into插入数据</a></li><li><a href="#通过unsigned强制修改主键字段">通过unsigned强制修改主键字段</a></li><li><a href="#sql查询日期格式化">sql查询日期格式化</a></li><li><a href="#子查询减少回表sql优化">子查询减少回表SQL优化</a></li><li><a href="#select-1进行sql查找是否-存在">select 1进行SQL查找是否&quot;存在&quot;</a></li><li><a href="#mysql-5-7-解锁事务">MySql 5.7 解锁事务</a></li><li><a href="#sql日期之间比较">sql日期之间比较</a></li><li><a href="#sql添加创建时间和修改时间">sql添加创建时间和修改时间</a></li><li><a href="#查询表信息">查询表信息</a></li><li><a href="#sql-语句中-left-join-后用-on-还是-where-的区别">SQL 语句中 left join 后用 on 还是 where 的区别</a></li><li><a href="#mysql-添加虚拟唯一键">MySQL 添加虚拟唯一键</a></li><li><a href="#慢查询日志使用">慢查询日志使用</a></li></ul></li><li><a href="#nacos心跳日志">Nacos心跳日志</a></li></ul></nav><h2 id="构造对象模板" tabindex="-1">构造对象模板 <a class="header-anchor" href="#构造对象模板" aria-label="Permalink to &quot;构造对象模板&quot;">​</a></h2><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Data</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">AllArgsConstructor</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">NoArgsConstructor</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">EqualsAndHashCode</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">callSuper</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Accessors</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">chain</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">JsonIgnoreProperties</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">ignoreUnknown</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">JsonInclude</span><span style="color:#E1E4E8;">(JsonInclude.Include.NON_NULL)</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">XxxDTO</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">implements</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Serializable</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">long</span><span style="color:#E1E4E8;"> serialVersionUID </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1L</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Data</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">AllArgsConstructor</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">NoArgsConstructor</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">EqualsAndHashCode</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">callSuper</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Accessors</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">chain</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">JsonIgnoreProperties</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">ignoreUnknown</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">JsonInclude</span><span style="color:#24292E;">(JsonInclude.Include.NON_NULL)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">XxxDTO</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Serializable</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">long</span><span style="color:#24292E;"> serialVersionUID </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1L</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="枚举对象模板" tabindex="-1">枚举对象模板 <a class="header-anchor" href="#枚举对象模板" aria-label="Permalink to &quot;枚举对象模板&quot;">​</a></h2><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">enum</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Enum</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">A</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;1desc&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#79B8FF;">B</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;2desc&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#79B8FF;">C</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;3desc&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> value;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String desc;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Enum</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">, String </span><span style="color:#FFAB70;">desc</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> value;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.desc </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> desc;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getValue</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">getDesc</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> desc;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 根据value获取desc</span></span>
<span class="line"><span style="color:#6A737D;">     *</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#FFAB70;">value</span><span style="color:#6A737D;"> value</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> desc</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> String </span><span style="color:#B392F0;">getDescByValue</span><span style="color:#E1E4E8;">(@</span><span style="color:#F97583;">NonNull</span><span style="color:#E1E4E8;"> Integer </span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Optional.</span><span style="color:#B392F0;">ofNullable</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">getByValue</span><span style="color:#E1E4E8;">(value)).</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(Enum</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">getDesc).</span><span style="color:#B392F0;">orElse</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 根据value获取当前枚举对象</span></span>
<span class="line"><span style="color:#6A737D;">     *</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#FFAB70;">value</span><span style="color:#6A737D;"> value</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> this</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Enum </span><span style="color:#B392F0;">getByValue</span><span style="color:#E1E4E8;">(@</span><span style="color:#F97583;">NonNull</span><span style="color:#E1E4E8;"> Integer </span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        Objects.</span><span style="color:#B392F0;">requireNonNull</span><span style="color:#E1E4E8;">(value);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (Enum anEnum </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">values</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (Objects.</span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(anEnum.value, value)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> anEnum;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">enum</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Enum</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">A</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;1desc&quot;</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">B</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;2desc&quot;</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">C</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;3desc&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> value;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String desc;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Enum</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">value</span><span style="color:#24292E;">, String </span><span style="color:#E36209;">desc</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> value;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.desc </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> desc;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getValue</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> value;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">getDesc</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> desc;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 根据value获取desc</span></span>
<span class="line"><span style="color:#6A737D;">     *</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">value</span><span style="color:#6A737D;"> value</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> desc</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">getDescByValue</span><span style="color:#24292E;">(@</span><span style="color:#D73A49;">NonNull</span><span style="color:#24292E;"> Integer </span><span style="color:#E36209;">value</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Optional.</span><span style="color:#6F42C1;">ofNullable</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">getByValue</span><span style="color:#24292E;">(value)).</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(Enum</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">getDesc).</span><span style="color:#6F42C1;">orElse</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 根据value获取当前枚举对象</span></span>
<span class="line"><span style="color:#6A737D;">     *</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">value</span><span style="color:#6A737D;"> value</span></span>
<span class="line"><span style="color:#6A737D;">     * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> this</span></span>
<span class="line"><span style="color:#6A737D;">     */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Enum </span><span style="color:#6F42C1;">getByValue</span><span style="color:#24292E;">(@</span><span style="color:#D73A49;">NonNull</span><span style="color:#24292E;"> Integer </span><span style="color:#E36209;">value</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        Objects.</span><span style="color:#6F42C1;">requireNonNull</span><span style="color:#24292E;">(value);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (Enum anEnum </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">values</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (Objects.</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(anEnum.value, value)) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> anEnum;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>map获取</p></blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Map&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">Enum</span><span style="color:#E1E4E8;">&gt; maps </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> HashMap&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 类加载时把此枚举类中的属性做个映射存入map中</span></span>
<span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (Enum anEnum </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">values</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        maps.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(anEnum.value, anEnum);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Enum </span><span style="color:#B392F0;">getByValue</span><span style="color:#E1E4E8;">(@</span><span style="color:#F97583;">NonNull</span><span style="color:#E1E4E8;"> Integer value) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Objects.</span><span style="color:#B392F0;">requireNonNull</span><span style="color:#E1E4E8;">(value);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> maps.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(value);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Map&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">Enum</span><span style="color:#24292E;">&gt; maps </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> HashMap&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 类加载时把此枚举类中的属性做个映射存入map中</span></span>
<span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (Enum anEnum </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">values</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">        maps.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(anEnum.value, anEnum);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Enum </span><span style="color:#6F42C1;">getByValue</span><span style="color:#24292E;">(@</span><span style="color:#D73A49;">NonNull</span><span style="color:#24292E;"> Integer value) {</span></span>
<span class="line"><span style="color:#24292E;">    Objects.</span><span style="color:#6F42C1;">requireNonNull</span><span style="color:#24292E;">(value);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> maps.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(value);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>条件获取</p></blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> Enum </span><span style="color:#B392F0;">getByValue</span><span style="color:#E1E4E8;">(@</span><span style="color:#F97583;">NonNull</span><span style="color:#E1E4E8;"> Integer value) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Objects.</span><span style="color:#B392F0;">requireNonNull</span><span style="color:#E1E4E8;">(value);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (value) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> A;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> B;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> C;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">default:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IllegalStateException</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Unexpected value: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> value);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> Enum </span><span style="color:#6F42C1;">getByValue</span><span style="color:#24292E;">(@</span><span style="color:#D73A49;">NonNull</span><span style="color:#24292E;"> Integer value) {</span></span>
<span class="line"><span style="color:#24292E;">    Objects.</span><span style="color:#6F42C1;">requireNonNull</span><span style="color:#24292E;">(value);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (value) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> A;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> B;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> C;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">default:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IllegalStateException</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Unexpected value: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> value);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="stream流操作模板" tabindex="-1">Stream流操作模板 <a class="header-anchor" href="#stream流操作模板" aria-label="Permalink to &quot;Stream流操作模板&quot;">​</a></h2><h3 id="多字段分组求和" tabindex="-1">多字段分组求和 <a class="header-anchor" href="#多字段分组求和" aria-label="Permalink to &quot;多字段分组求和&quot;">​</a></h3><blockquote><p><code>增加一个 getKey()方法，返回多个字段组成的唯一key，比如通过下划线连接</code></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">Long</span><span style="color:#E1E4E8;">&gt; countMap </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> records.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors.</span><span style="color:#B392F0;">groupingBy</span><span style="color:#E1E4E8;">(o </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> o.</span><span style="color:#B392F0;">getProductType</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;_&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> o.</span><span style="color:#B392F0;">getCountry</span><span style="color:#E1E4E8;">(), Collectors.</span><span style="color:#B392F0;">counting</span><span style="color:#E1E4E8;">()));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">List&lt;</span><span style="color:#F97583;">Record</span><span style="color:#E1E4E8;">&gt; countRecords </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> countMap.</span><span style="color:#B392F0;">keySet</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(key </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] temp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> key.</span><span style="color:#B392F0;">split</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;_&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">   String productType </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> temp[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">   String country </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> temp[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">   Record record </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Record</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">   record.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;device_type&quot;</span><span style="color:#E1E4E8;">, productType);</span></span>
<span class="line"><span style="color:#E1E4E8;">   record.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;location&quot;</span><span style="color:#E1E4E8;">, country;</span></span>
<span class="line"><span style="color:#E1E4E8;">              record.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;count&quot;</span><span style="color:#E1E4E8;">, countMap.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(key).</span><span style="color:#B392F0;">intValue</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> record;</span></span>
<span class="line"><span style="color:#E1E4E8;">              }).</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors.</span><span style="color:#B392F0;">toList</span><span style="color:#E1E4E8;">());</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">Long</span><span style="color:#24292E;">&gt; countMap </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> records.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">groupingBy</span><span style="color:#24292E;">(o </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> o.</span><span style="color:#6F42C1;">getProductType</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;_&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> o.</span><span style="color:#6F42C1;">getCountry</span><span style="color:#24292E;">(), Collectors.</span><span style="color:#6F42C1;">counting</span><span style="color:#24292E;">()));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">List&lt;</span><span style="color:#D73A49;">Record</span><span style="color:#24292E;">&gt; countRecords </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> countMap.</span><span style="color:#6F42C1;">keySet</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(key </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] temp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> key.</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;_&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">   String productType </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> temp[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">   String country </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> temp[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">   Record record </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Record</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">   record.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;device_type&quot;</span><span style="color:#24292E;">, productType);</span></span>
<span class="line"><span style="color:#24292E;">   record.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;location&quot;</span><span style="color:#24292E;">, country;</span></span>
<span class="line"><span style="color:#24292E;">              record.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;count&quot;</span><span style="color:#24292E;">, countMap.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(key).</span><span style="color:#6F42C1;">intValue</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> record;</span></span>
<span class="line"><span style="color:#24292E;">              }).</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">toList</span><span style="color:#24292E;">());</span></span></code></pre></div></blockquote><h3 id="list转为map" tabindex="-1">List转为Map <a class="header-anchor" href="#list转为map" aria-label="Permalink to &quot;List转为Map&quot;">​</a></h3><blockquote><p>Stream将List转换为Map，使用Collectors.toMap方法进行转换</p></blockquote><p>背景：User类，类中分别有id，name,age三个属性。List集合,userList，存储User对象</p><p>1、指定key-value，value是<strong>对象中的某个属性值</strong>。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Map&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; userMap1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> userList.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors.</span><span style="color:#B392F0;">toMap</span><span style="color:#E1E4E8;">(User</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">getId,User</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">getName));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Map&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; userMap1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> userList.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">toMap</span><span style="color:#24292E;">(User</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">getId,User</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">getName));</span></span></code></pre></div><p>2、指定key-value，value是<strong>对象本身</strong>，User-&gt;User 是一个返回本身的lambda表达式</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Map&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">User</span><span style="color:#E1E4E8;">&gt; userMap2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> userList.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors.</span><span style="color:#B392F0;">toMap</span><span style="color:#E1E4E8;">(User</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">getId,User</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">User));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Map&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">User</span><span style="color:#24292E;">&gt; userMap2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> userList.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">toMap</span><span style="color:#24292E;">(User</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">getId,User</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">User));</span></span></code></pre></div><p>3、指定key-value，value是对象本身，Function.identity()是简洁写法，也是返回对象本身</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Map&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">User</span><span style="color:#E1E4E8;">&gt; userMap3 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> userList.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors.</span><span style="color:#B392F0;">toMap</span><span style="color:#E1E4E8;">(User</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">getId, Function.</span><span style="color:#B392F0;">identity</span><span style="color:#E1E4E8;">()));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Map&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">User</span><span style="color:#24292E;">&gt; userMap3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> userList.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">toMap</span><span style="color:#24292E;">(User</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">getId, Function.</span><span style="color:#6F42C1;">identity</span><span style="color:#24292E;">()));</span></span></code></pre></div><p>4、指定key-value，value是对象本身，<strong>Function.identity()是简洁写法，也是返回对象本身，key 冲突的解决办法，这里选择第二个key覆盖第一个key</strong>。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Map&lt;</span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">User</span><span style="color:#E1E4E8;">&gt; userMap4 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> userList.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors.</span><span style="color:#B392F0;">toMap</span><span style="color:#E1E4E8;">(User</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">getId, Function.</span><span style="color:#B392F0;">identity</span><span style="color:#E1E4E8;">(),(key1,key2)</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">key2));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Map&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">User</span><span style="color:#24292E;">&gt; userMap4 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> userList.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">toMap</span><span style="color:#24292E;">(User</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">getId, Function.</span><span style="color:#6F42C1;">identity</span><span style="color:#24292E;">(),(key1,key2)</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">key2));</span></span></code></pre></div><h3 id="左对称差集-交集" tabindex="-1">左对称差集/交集 <a class="header-anchor" href="#左对称差集-交集" aria-label="Permalink to &quot;左对称差集/交集&quot;">​</a></h3><p>差集</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">List&lt;Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">Object</span><span style="color:#E1E4E8;">&gt;&gt; list3 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> list1.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">parallel</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">(a </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> list2.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">	                        .</span><span style="color:#B392F0;">noneMatch</span><span style="color:#E1E4E8;">(b</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> Objects.</span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(a.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;">), b.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;">))))</span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors.</span><span style="color:#B392F0;">toList</span><span style="color:#E1E4E8;">());</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">List&lt;Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">&gt;&gt; list3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> list1.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">parallel</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(a </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> list2.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">	                        .</span><span style="color:#6F42C1;">noneMatch</span><span style="color:#24292E;">(b</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> Objects.</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(a.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">), b.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">))))</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">toList</span><span style="color:#24292E;">());</span></span></code></pre></div><p>交集</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">List&lt;Map&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">Object</span><span style="color:#E1E4E8;">&gt;&gt; list3 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> list1.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">parallel</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">filter</span><span style="color:#E1E4E8;">(a </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> list2.</span><span style="color:#B392F0;">stream</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">	                        .</span><span style="color:#B392F0;">anyMatch</span><span style="color:#E1E4E8;">(b</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;"> Objects.</span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(a.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;">), b.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;">))))</span></span>
<span class="line"><span style="color:#E1E4E8;">    .</span><span style="color:#B392F0;">collect</span><span style="color:#E1E4E8;">(Collectors.</span><span style="color:#B392F0;">toList</span><span style="color:#E1E4E8;">());</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">List&lt;Map&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">&gt;&gt; list3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> list1.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">parallel</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">filter</span><span style="color:#24292E;">(a </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> list2.</span><span style="color:#6F42C1;">stream</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">	                        .</span><span style="color:#6F42C1;">anyMatch</span><span style="color:#24292E;">(b</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> Objects.</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(a.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">), b.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">))))</span></span>
<span class="line"><span style="color:#24292E;">    .</span><span style="color:#6F42C1;">collect</span><span style="color:#24292E;">(Collectors.</span><span style="color:#6F42C1;">toList</span><span style="color:#24292E;">());</span></span></code></pre></div><h2 id="单元测试模板" tabindex="-1">单元测试模板 <a class="header-anchor" href="#单元测试模板" aria-label="Permalink to &quot;单元测试模板&quot;">​</a></h2><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-boot-starter-test&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">scope</span><span style="color:#E1E4E8;">&gt;test&lt;/</span><span style="color:#85E89D;">scope</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-boot-starter-test&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">scope</span><span style="color:#24292E;">&gt;test&lt;/</span><span style="color:#22863A;">scope</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">SpringBootTest</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">RunWith</span><span style="color:#E1E4E8;">(SpringRunner.class)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Slf4j</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ApplicationTest</span><span style="color:#E1E4E8;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">SpringBootTest</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">RunWith</span><span style="color:#24292E;">(SpringRunner.class)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Slf4j</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ApplicationTest</span><span style="color:#24292E;"> {}</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">SpringBootTest</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">classes</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> XxxApplication.class)</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ApplicationTest</span><span style="color:#E1E4E8;"> {}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">SpringBootTest</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">classes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> XxxApplication.class)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ApplicationTest</span><span style="color:#24292E;"> {}</span></span></code></pre></div><h2 id="springboot速记" tabindex="-1">SpringBoot速记 <a class="header-anchor" href="#springboot速记" aria-label="Permalink to &quot;SpringBoot速记&quot;">​</a></h2><h3 id="spring版本关系" tabindex="-1">Spring版本关系 <a class="header-anchor" href="#spring版本关系" aria-label="Permalink to &quot;Spring版本关系&quot;">​</a></h3><p><strong>SpringBoot和SpringCloud版本关系</strong></p><p><img src="`+p+'" alt="image-20220406184713838"></p><p><strong>SpringBoot、SpringCloud、SpringCloudAlibaba版本对应关系</strong></p><p><img src="'+o+'" alt="img"></p><p><strong>Spring Cloud Alibaba与组件版本关系</strong></p><p><img src="'+e+`" alt="img"></p><h3 id="springbooot链式启动" tabindex="-1">SpringBooot链式启动 <a class="header-anchor" href="#springbooot链式启动" aria-label="Permalink to &quot;SpringBooot链式启动&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SpringApplicationBuilder</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">sources</span><span style="color:#E1E4E8;">(Parent.class)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">child</span><span style="color:#E1E4E8;">(Application.class)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">bannerMode</span><span style="color:#E1E4E8;">(Banner.Mode.OFF)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">run</span><span style="color:#E1E4E8;">(args);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SpringApplicationBuilder</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">sources</span><span style="color:#24292E;">(Parent.class)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">child</span><span style="color:#24292E;">(Application.class)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">bannerMode</span><span style="color:#24292E;">(Banner.Mode.OFF)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">run</span><span style="color:#24292E;">(args);</span></span></code></pre></div><h3 id="springbooot添加本地-jar" tabindex="-1">SpringBooot添加本地 jar <a class="header-anchor" href="#springbooot添加本地-jar" aria-label="Permalink to &quot;SpringBooot添加本地 jar&quot;">​</a></h3><blockquote><p>步骤</p><ol><li>添加 jar 文件到项目中 resources/lib/xxx.jar</li><li>安装 jar 包到 maven 本地仓库</li></ol><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">build</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">plugins</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-boot-maven-plugin&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.apache.maven.plugins&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;maven-install-plugin&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;2.5.2&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;</span><span style="color:#85E89D;">executions</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;</span><span style="color:#85E89D;">execution</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;</span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;">&gt;install-demo-jar&lt;/</span><span style="color:#85E89D;">id</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;</span><span style="color:#85E89D;">phase</span><span style="color:#E1E4E8;">&gt;clean&lt;/</span><span style="color:#85E89D;">phase</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;</span><span style="color:#85E89D;">configuration</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    &lt;</span><span style="color:#85E89D;">file</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                        \${project.basedir}/src/main/resources/lib/demo.jar</span></span>
<span class="line"><span style="color:#E1E4E8;">                    &lt;/</span><span style="color:#85E89D;">file</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;com.javalover&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;demo&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    &lt;</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;1.0&lt;/</span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    &lt;</span><span style="color:#85E89D;">packaging</span><span style="color:#E1E4E8;">&gt;jar&lt;/</span><span style="color:#85E89D;">packaging</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    &lt;</span><span style="color:#85E89D;">generatePom</span><span style="color:#E1E4E8;">&gt;true&lt;/</span><span style="color:#85E89D;">generatePom</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;/</span><span style="color:#85E89D;">configuration</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;</span><span style="color:#85E89D;">goals</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    &lt;</span><span style="color:#85E89D;">goal</span><span style="color:#E1E4E8;">&gt;install-file&lt;/</span><span style="color:#85E89D;">goal</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                &lt;/</span><span style="color:#85E89D;">goals</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            &lt;/</span><span style="color:#85E89D;">execution</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;/</span><span style="color:#85E89D;">executions</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;/</span><span style="color:#85E89D;">plugin</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">plugins</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">build</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">build</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">plugins</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-boot-maven-plugin&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.apache.maven.plugins&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;maven-install-plugin&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;2.5.2&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">executions</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">execution</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">id</span><span style="color:#24292E;">&gt;install-demo-jar&lt;/</span><span style="color:#22863A;">id</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">phase</span><span style="color:#24292E;">&gt;clean&lt;/</span><span style="color:#22863A;">phase</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">configuration</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                    &lt;</span><span style="color:#22863A;">file</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                        \${project.basedir}/src/main/resources/lib/demo.jar</span></span>
<span class="line"><span style="color:#24292E;">                    &lt;/</span><span style="color:#22863A;">file</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                    &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;com.javalover&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                    &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;demo&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                    &lt;</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;1.0&lt;/</span><span style="color:#22863A;">version</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                    &lt;</span><span style="color:#22863A;">packaging</span><span style="color:#24292E;">&gt;jar&lt;/</span><span style="color:#22863A;">packaging</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                    &lt;</span><span style="color:#22863A;">generatePom</span><span style="color:#24292E;">&gt;true&lt;/</span><span style="color:#22863A;">generatePom</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;/</span><span style="color:#22863A;">configuration</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">goals</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                    &lt;</span><span style="color:#22863A;">goal</span><span style="color:#24292E;">&gt;install-file&lt;/</span><span style="color:#22863A;">goal</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;/</span><span style="color:#22863A;">goals</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;/</span><span style="color:#22863A;">execution</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">executions</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">plugin</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">plugins</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">build</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><ol start="3"><li>运行 <code>mvn clean</code></li></ol></blockquote><h2 id="mysql速记" tabindex="-1">Mysql速记 <a class="header-anchor" href="#mysql速记" aria-label="Permalink to &quot;Mysql速记&quot;">​</a></h2><h3 id="查某项重复的数据" tabindex="-1">查某项重复的数据 <a class="header-anchor" href="#查某项重复的数据" aria-label="Permalink to &quot;查某项重复的数据&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> XX表 </span><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> 重复项 </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> 重复项 </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> XX表 </span><span style="color:#F97583;">GROUP BY</span><span style="color:#E1E4E8;"> 重复项 </span><span style="color:#F97583;">HAVING</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">count</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> XX表 </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> 重复项 </span><span style="color:#D73A49;">in</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> 重复项 </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> XX表 </span><span style="color:#D73A49;">GROUP BY</span><span style="color:#24292E;"> 重复项 </span><span style="color:#D73A49;">HAVING</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">count</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="group-concat函数使用" tabindex="-1">group_concat函数使用 <a class="header-anchor" href="#group-concat函数使用" aria-label="Permalink to &quot;group_concat函数使用&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">,group_concat(code) </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`user\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">group by</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">,group_concat(code) </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`user\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">group by</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">;</span></span></code></pre></div><p><img src="`+t+`" alt="image-20230519141703990"></p><p>使用<code>group_concat</code>函数，可以轻松的把分组后name相同的数据拼接到一起，组成一个字符串，用<code>逗号</code>分隔。</p><blockquote><p>如何不批量插入重复数据?</p></blockquote><h3 id="insert-ignore-into插入数据" tabindex="-1">insert ignore into插入数据 <a class="header-anchor" href="#insert-ignore-into插入数据" aria-label="Permalink to &quot;insert ignore into插入数据&quot;">​</a></h3><p>当插入数据时，如出现错误时，如重复数据，将不返回错误，只以警告形式返回。所以使用ignore请确保语句本身没有问题，否则也会被忽略掉。</p><p>这种方法很简便，但是有一种可能，就是插入不是因为重复数据报错，而是因为其他原因报错的，也同样被忽略了</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">INSERT IGNORE INTO</span><span style="color:#E1E4E8;"> user (</span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">VALUES</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&#39;telami&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">INSERT IGNORE INTO</span><span style="color:#24292E;"> user (</span><span style="color:#D73A49;">name</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">VALUES</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&#39;telami&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="on-duplicate-key-update更新数据" tabindex="-1">on duplicate key update更新数据 <a class="header-anchor" href="#on-duplicate-key-update更新数据" aria-label="Permalink to &quot;on duplicate key update更新数据&quot;">​</a></h3><p>当primary或者unique重复时，则执行update语句，如update后为无用语句，如id=id，则同1功能相同，但错误不会被忽略掉。</p><p>这种方法有个前提条件,需要插入的约束，是主键或者唯一约束（在你的业务中那个要作为唯一的判断就将那个字段设置为唯一约束也就是unique key）。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">//mobile_number有唯一约束</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">insert</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;batchSaveUser&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parameterType</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;list&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">insert into user (id,username,mobile_number)</span></span>
<span class="line"><span style="color:#E1E4E8;">values</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">foreach</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">collection</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;list&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">item</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;item&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">index</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;index&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">separator</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">#{item.id},</span></span>
<span class="line"><span style="color:#E1E4E8;">#{item.username},</span></span>
<span class="line"><span style="color:#E1E4E8;">#{item.mobileNumber}</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">foreach</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">ON duplicate KEY UPDATE id = id</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">insert</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">//mobile_number有唯一约束</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">insert</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;batchSaveUser&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parameterType</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;list&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">insert into user (id,username,mobile_number)</span></span>
<span class="line"><span style="color:#24292E;">values</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">foreach</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">collection</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;list&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">item</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;item&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">index</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;index&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">separator</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">#{item.id},</span></span>
<span class="line"><span style="color:#24292E;">#{item.username},</span></span>
<span class="line"><span style="color:#24292E;">#{item.mobileNumber}</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">foreach</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">ON duplicate KEY UPDATE id = id</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">insert</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">INSERT INTO</span><span style="color:#E1E4E8;"> user (</span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">VALUES</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&#39;telami&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">ON</span><span style="color:#E1E4E8;"> duplicate </span><span style="color:#F97583;">KEY</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">UPDATE</span><span style="color:#E1E4E8;"> id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> id</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">INSERT INTO</span><span style="color:#24292E;"> user (</span><span style="color:#D73A49;">name</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">VALUES</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&#39;telami&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">ON</span><span style="color:#24292E;"> duplicate </span><span style="color:#D73A49;">KEY</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">UPDATE</span><span style="color:#24292E;"> id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> id</span></span></code></pre></div><h3 id="insert-select-where-not-exist插入数据" tabindex="-1">insert … select … where not exist插入数据 <a class="header-anchor" href="#insert-select-where-not-exist插入数据" aria-label="Permalink to &quot;insert … select … where not exist插入数据&quot;">​</a></h3><p>根据select的条件判断是否插入，可以不光通过primary 和unique来判断，也可通过其它条件；</p><p>这种方法其实就是使用了sql的一个临时表的方式，但是里面使用到了子查询，效率受影响。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">INSERT INTO</span><span style="color:#E1E4E8;"> user (</span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;telami&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> dual </span><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">NOT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">EXISTS</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> id </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> user </span><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">INSERT INTO</span><span style="color:#24292E;"> user (</span><span style="color:#D73A49;">name</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;telami&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> dual </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">NOT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">EXISTS</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> id </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> user </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="replace-into插入数据" tabindex="-1">replace into插入数据 <a class="header-anchor" href="#replace-into插入数据" aria-label="Permalink to &quot;replace into插入数据&quot;">​</a></h3><p>如果存在primary or unique相同的记录，则先删除掉。再插入新记录。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">REPLACE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">INTO</span><span style="color:#E1E4E8;"> user </span><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;telami&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> books</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">REPLACE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">INTO</span><span style="color:#24292E;"> user </span><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;telami&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> books</span></span></code></pre></div><h3 id="通过unsigned强制修改主键字段" tabindex="-1">通过unsigned强制修改主键字段 <a class="header-anchor" href="#通过unsigned强制修改主键字段" aria-label="Permalink to &quot;通过unsigned强制修改主键字段&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 当主键无法修改时 加上 unsigned 标记</span></span>
<span class="line"><span style="color:#9ECBFF;">\`id\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">) unsigned </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;"> AUTO_INCREMENT COMMENT </span><span style="color:#9ECBFF;">&#39;主键&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 当主键无法修改时 加上 unsigned 标记</span></span>
<span class="line"><span style="color:#032F62;">\`id\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">11</span><span style="color:#24292E;">) unsigned </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;"> AUTO_INCREMENT COMMENT </span><span style="color:#032F62;">&#39;主键&#39;</span></span></code></pre></div><h3 id="sql查询日期格式化" tabindex="-1">sql查询日期格式化 <a class="header-anchor" href="#sql查询日期格式化" aria-label="Permalink to &quot;sql查询日期格式化&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">*</span></span>
<span class="line"><span style="color:#F97583;">FROM</span></span>
<span class="line"><span style="color:#E1E4E8;">order_title</span></span>
<span class="line"><span style="color:#F97583;">WHERE</span></span>
<span class="line"><span style="color:#F97583;">DATE_FORMAT</span><span style="color:#E1E4E8;">(create_date,</span><span style="color:#9ECBFF;">&#39;%Y-%m&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;2021-01&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;2021-02&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;2021-03&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">*</span></span>
<span class="line"><span style="color:#D73A49;">FROM</span></span>
<span class="line"><span style="color:#24292E;">order_title</span></span>
<span class="line"><span style="color:#D73A49;">WHERE</span></span>
<span class="line"><span style="color:#D73A49;">DATE_FORMAT</span><span style="color:#24292E;">(create_date,</span><span style="color:#032F62;">&#39;%Y-%m&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">in</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;2021-01&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;2021-02&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;2021-03&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="子查询减少回表sql优化" tabindex="-1">子查询减少回表SQL优化 <a class="header-anchor" href="#子查询减少回表sql优化" aria-label="Permalink to &quot;子查询减少回表SQL优化&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 待优化SQL</span></span>
<span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> 各种字段</span></span>
<span class="line"><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`table_name\`</span></span>
<span class="line"><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> 各种条件</span></span>
<span class="line"><span style="color:#F97583;">LIMIT</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 待优化SQL</span></span>
<span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> 各种字段</span></span>
<span class="line"><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`table_name\`</span></span>
<span class="line"><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> 各种条件</span></span>
<span class="line"><span style="color:#D73A49;">LIMIT</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">;</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 优化后SQL</span></span>
<span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> 各种字段</span></span>
<span class="line"><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`table_name\`</span><span style="color:#E1E4E8;"> main_tale</span></span>
<span class="line"><span style="color:#F97583;">RIGHT JOIN</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;">  子查询只查主键</span></span>
<span class="line"><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`table_name\`</span></span>
<span class="line"><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> 各种条件</span></span>
<span class="line"><span style="color:#F97583;">LIMIT</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">) temp_table </span><span style="color:#F97583;">ON</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">temp_table</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">主键</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">main_table</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">主键</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 优化后SQL</span></span>
<span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> 各种字段</span></span>
<span class="line"><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`table_name\`</span><span style="color:#24292E;"> main_tale</span></span>
<span class="line"><span style="color:#D73A49;">RIGHT JOIN</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;">  子查询只查主键</span></span>
<span class="line"><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`table_name\`</span></span>
<span class="line"><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> 各种条件</span></span>
<span class="line"><span style="color:#D73A49;">LIMIT</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">) temp_table </span><span style="color:#D73A49;">ON</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">temp_table</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">主键</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">main_table</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">主键</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 示例</span></span>
<span class="line"><span style="color:#E1E4E8;">#原SQL</span></span>
<span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> test_user </span><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> age</span><span style="color:#F97583;">&gt;</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">LIMIT</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100000</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">#优化后SQL</span></span>
<span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span></span>
<span class="line"><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> test_user t0</span></span>
<span class="line"><span style="color:#F97583;">RIGHT JOIN</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> user_id</span></span>
<span class="line"><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> test_user</span></span>
<span class="line"><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> age</span><span style="color:#F97583;">&gt;</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">LIMIT</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100000</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">10</span></span>
<span class="line"><span style="color:#E1E4E8;">) t1 </span><span style="color:#F97583;">ON</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">t1</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">user_id</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">t0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">user_id</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 示例</span></span>
<span class="line"><span style="color:#24292E;">#原SQL</span></span>
<span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> test_user </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> age</span><span style="color:#D73A49;">&gt;</span><span style="color:#005CC5;">50</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">LIMIT</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100000</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">#优化后SQL</span></span>
<span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span></span>
<span class="line"><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> test_user t0</span></span>
<span class="line"><span style="color:#D73A49;">RIGHT JOIN</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> user_id</span></span>
<span class="line"><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> test_user</span></span>
<span class="line"><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> age</span><span style="color:#D73A49;">&gt;</span><span style="color:#005CC5;">50</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">LIMIT</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100000</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#24292E;">) t1 </span><span style="color:#D73A49;">ON</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">t1</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">user_id</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">t0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">user_id</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="select-1进行sql查找是否-存在" tabindex="-1">select 1进行SQL查找是否&quot;存在&quot; <a class="header-anchor" href="#select-1进行sql查找是否-存在" aria-label="Permalink to &quot;select 1进行SQL查找是否&quot;存在&quot;&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">table</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">AND</span><span style="color:#E1E4E8;"> b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">LIMIT</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">AND</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">LIMIT</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// java写法:  </span></span>
<span class="line"><span style="color:#E1E4E8;">Integer exist </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> xxDao.</span><span style="color:#B392F0;">existXxxxByXxx</span><span style="color:#E1E4E8;">(params);  </span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ( exist </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> NULL ) {  </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//当存在时，执行这里的代码  </span></span>
<span class="line"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {  </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//当不存在时，执行这里	的代码  </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// java写法:  </span></span>
<span class="line"><span style="color:#24292E;">Integer exist </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> xxDao.</span><span style="color:#6F42C1;">existXxxxByXxx</span><span style="color:#24292E;">(params);  </span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ( exist </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> NULL ) {  </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//当存在时，执行这里的代码  </span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {  </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//当不存在时，执行这里	的代码  </span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="mysql-5-7-解锁事务" tabindex="-1">MySql 5.7 解锁事务 <a class="header-anchor" href="#mysql-5-7-解锁事务" aria-label="Permalink to &quot;MySql 5.7 解锁事务&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">1、查询是否锁表 </span></span>
<span class="line"><span style="color:#e1e4e8;">	show OPEN TABLES where In_use &gt; 0; </span></span>
<span class="line"><span style="color:#e1e4e8;">2、查询进程 </span></span>
<span class="line"><span style="color:#e1e4e8;">	show processlist </span></span>
<span class="line"><span style="color:#e1e4e8;">3、查询到相对应的进程id</span></span>
<span class="line"><span style="color:#e1e4e8;">	kill id </span></span>
<span class="line"><span style="color:#e1e4e8;">补充： </span></span>
<span class="line"><span style="color:#e1e4e8;">查看正在锁的事务 </span></span>
<span class="line"><span style="color:#e1e4e8;">	SELECT * FROM INFORMATION_SCHEMA.INNODB_LOCKS;  </span></span>
<span class="line"><span style="color:#e1e4e8;">查看等待锁的事务 </span></span>
<span class="line"><span style="color:#e1e4e8;">	SELECT * FROM INFORMATION_SCHEMA.INNODB_LOCK_WAITS; </span></span>
<span class="line"><span style="color:#e1e4e8;">	SELECT * from information_schema.INNODB_TRX </span></span>
<span class="line"><span style="color:#e1e4e8;">	kill trx_sql_thread_id</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">1、查询是否锁表 </span></span>
<span class="line"><span style="color:#24292e;">	show OPEN TABLES where In_use &gt; 0; </span></span>
<span class="line"><span style="color:#24292e;">2、查询进程 </span></span>
<span class="line"><span style="color:#24292e;">	show processlist </span></span>
<span class="line"><span style="color:#24292e;">3、查询到相对应的进程id</span></span>
<span class="line"><span style="color:#24292e;">	kill id </span></span>
<span class="line"><span style="color:#24292e;">补充： </span></span>
<span class="line"><span style="color:#24292e;">查看正在锁的事务 </span></span>
<span class="line"><span style="color:#24292e;">	SELECT * FROM INFORMATION_SCHEMA.INNODB_LOCKS;  </span></span>
<span class="line"><span style="color:#24292e;">查看等待锁的事务 </span></span>
<span class="line"><span style="color:#24292e;">	SELECT * FROM INFORMATION_SCHEMA.INNODB_LOCK_WAITS; </span></span>
<span class="line"><span style="color:#24292e;">	SELECT * from information_schema.INNODB_TRX </span></span>
<span class="line"><span style="color:#24292e;">	kill trx_sql_thread_id</span></span></code></pre></div><h3 id="sql日期之间比较" tabindex="-1">sql日期之间比较 <a class="header-anchor" href="#sql日期之间比较" aria-label="Permalink to &quot;sql日期之间比较&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 对于比较的两个时间，时间小的放在前面，时间大的放在后面</span></span>
<span class="line"><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> TIMESTAMPDIFF(</span><span style="color:#F97583;">DAY</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;2018-03-20 23:59:00&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;2015-03-22 00:00:00&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> TIMESTAMPDIFF(</span><span style="color:#F97583;">HOUR</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;2018-03-20 09:00:00&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;2018-03-22 10:00:00&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> TIMESTAMPDIFF(</span><span style="color:#F97583;">MINUTE</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;2018-03-20 09:00:00&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;2018-03-22 10:00:00&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> TIMESTAMPDIFF(</span><span style="color:#F97583;">SECOND</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;2018-03-20 09:00:00&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;2018-03-22 10:00:00&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 对于比较的两个时间，时间小的放在前面，时间大的放在后面</span></span>
<span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> TIMESTAMPDIFF(</span><span style="color:#D73A49;">DAY</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;2018-03-20 23:59:00&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;2015-03-22 00:00:00&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> TIMESTAMPDIFF(</span><span style="color:#D73A49;">HOUR</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;2018-03-20 09:00:00&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;2018-03-22 10:00:00&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> TIMESTAMPDIFF(</span><span style="color:#D73A49;">MINUTE</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;2018-03-20 09:00:00&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;2018-03-22 10:00:00&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> TIMESTAMPDIFF(</span><span style="color:#D73A49;">SECOND</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;2018-03-20 09:00:00&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;2018-03-22 10:00:00&#39;</span><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="sql添加创建时间和修改时间" tabindex="-1">sql添加创建时间和修改时间 <a class="header-anchor" href="#sql添加创建时间和修改时间" aria-label="Permalink to &quot;sql添加创建时间和修改时间&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">-- 创建的时候设置当前时间</span></span>
<span class="line"><span style="color:#e1e4e8;">\`create_time\` datetime DEFAULT CURRENT_TIMESTAMP COMMENT &#39;创建时间&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">-- 创建的时候设置当前时间</span></span>
<span class="line"><span style="color:#24292e;">\`create_time\` datetime DEFAULT CURRENT_TIMESTAMP COMMENT &#39;创建时间&#39;</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">-- 更新的时候设置更新时间为当前时间</span></span>
<span class="line"><span style="color:#e1e4e8;">\`update_time\` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">-- 更新的时候设置更新时间为当前时间</span></span>
<span class="line"><span style="color:#24292e;">\`update_time\` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP</span></span></code></pre></div><h3 id="查询表信息" tabindex="-1">查询表信息 <a class="header-anchor" href="#查询表信息" aria-label="Permalink to &quot;查询表信息&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 查询表信息</span></span>
<span class="line"><span style="color:#E1E4E8;">show </span><span style="color:#F97583;">table</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">like</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;表名&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 查询表信息</span></span>
<span class="line"><span style="color:#24292E;">show </span><span style="color:#D73A49;">table</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">status</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">like</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;表名&#39;</span></span></code></pre></div><p><img src="`+c+`" alt="image-20230418144910852"></p><h3 id="sql-语句中-left-join-后用-on-还是-where-的区别" tabindex="-1">SQL 语句中 left join 后用 on 还是 where 的区别 <a class="header-anchor" href="#sql-语句中-left-join-后用-on-还是-where-的区别" aria-label="Permalink to &quot;SQL 语句中 left join 后用 on 还是 where 的区别&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">在使用left jion时，on和where条件的区别如下：</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">1.on条件是在生成临时表时使用的条件，它不管on中的条件是否为真，都会返回左边表中的记录。</span></span>
<span class="line"><span style="color:#e1e4e8;">2.where条件是在临时表生成好后，再对临时表进行过滤的条件。这时已经没有left join的含义（必须返回左边表的记录）了，条件不为真的就全部过滤掉。</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">left join,right join,full join 有相同的特殊性，不管on上的条件是否为真都会返回left或right表中的记录</span></span>
<span class="line"><span style="color:#e1e4e8;">full join 则具有left和right的特性的并集。</span></span>
<span class="line"><span style="color:#e1e4e8;">而inner jion没这个特殊性，则条件放在on中和where中，返回的结果集是相同的。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">在使用left jion时，on和where条件的区别如下：</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">1.on条件是在生成临时表时使用的条件，它不管on中的条件是否为真，都会返回左边表中的记录。</span></span>
<span class="line"><span style="color:#24292e;">2.where条件是在临时表生成好后，再对临时表进行过滤的条件。这时已经没有left join的含义（必须返回左边表的记录）了，条件不为真的就全部过滤掉。</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">left join,right join,full join 有相同的特殊性，不管on上的条件是否为真都会返回left或right表中的记录</span></span>
<span class="line"><span style="color:#24292e;">full join 则具有left和right的特性的并集。</span></span>
<span class="line"><span style="color:#24292e;">而inner jion没这个特殊性，则条件放在on中和where中，返回的结果集是相同的。</span></span></code></pre></div><h3 id="mysql-添加虚拟唯一键" tabindex="-1">MySQL 添加虚拟唯一键 <a class="header-anchor" href="#mysql-添加虚拟唯一键" aria-label="Permalink to &quot;MySQL 添加虚拟唯一键&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">\`unique_key\` varchar(500) GENERATED ALWAYS AS (md5(concat_ws(if((\`is_deleted\` = 1),\`id\`,0),_utf8mb4&#39;_&#39;,\`xxx\`))) VIRTUAL COMMENT &#39;虚拟唯一键&#39;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">UNIQUE KEY \`uniq_xxx\` (\`unique_key\`),</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">\`unique_key\` varchar(500) GENERATED ALWAYS AS (md5(concat_ws(if((\`is_deleted\` = 1),\`id\`,0),_utf8mb4&#39;_&#39;,\`xxx\`))) VIRTUAL COMMENT &#39;虚拟唯一键&#39;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">UNIQUE KEY \`uniq_xxx\` (\`unique_key\`),</span></span></code></pre></div><h3 id="慢查询日志使用" tabindex="-1">慢查询日志使用 <a class="header-anchor" href="#慢查询日志使用" aria-label="Permalink to &quot;慢查询日志使用&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 查看是否开启慢查询日志</span></span>
<span class="line"><span style="color:#F97583;">sql&gt;</span><span style="color:#E1E4E8;"> show variables </span><span style="color:#F97583;">like</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;slow_query_log&#39;</span><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#6A737D;">-- 设置慢查询日志的位置</span></span>
<span class="line"><span style="color:#F97583;">sql&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">global</span><span style="color:#E1E4E8;"> slow_query_log_file</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39; /usr/share/sql/sql_log/sql-slow.log&#39;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">-- 开启慢查询日志</span></span>
<span class="line"><span style="color:#F97583;">sql&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">global</span><span style="color:#E1E4E8;"> log_queries_not_using_indexes</span><span style="color:#F97583;">=on</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">-- 设置大于1秒钟的数据记录到慢日志</span></span>
<span class="line"><span style="color:#F97583;">sql&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">global</span><span style="color:#E1E4E8;"> long_query_time</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 查看是否开启慢查询日志</span></span>
<span class="line"><span style="color:#D73A49;">sql&gt;</span><span style="color:#24292E;"> show variables </span><span style="color:#D73A49;">like</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;slow_query_log&#39;</span><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#6A737D;">-- 设置慢查询日志的位置</span></span>
<span class="line"><span style="color:#D73A49;">sql&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">set</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">global</span><span style="color:#24292E;"> slow_query_log_file</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39; /usr/share/sql/sql_log/sql-slow.log&#39;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">-- 开启慢查询日志</span></span>
<span class="line"><span style="color:#D73A49;">sql&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">set</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">global</span><span style="color:#24292E;"> log_queries_not_using_indexes</span><span style="color:#D73A49;">=on</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">-- 设置大于1秒钟的数据记录到慢日志</span></span>
<span class="line"><span style="color:#D73A49;">sql&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">set</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">global</span><span style="color:#24292E;"> long_query_time</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span></code></pre></div><h2 id="nacos心跳日志" tabindex="-1">Nacos心跳日志 <a class="header-anchor" href="#nacos心跳日志" aria-label="Permalink to &quot;Nacos心跳日志&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># application.yml添加</span></span>
<span class="line"><span style="color:#85E89D;">logging</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">level</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">com</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">alibaba</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">nacos</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">warn</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># application.yml添加</span></span>
<span class="line"><span style="color:#22863A;">logging</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">level</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">com</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">alibaba</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">nacos</span><span style="color:#24292E;">: </span><span style="color:#032F62;">warn</span></span></code></pre></div>`,98),y=[E];function i(d,u,g,F,h,A){return a(),n("div",null,y)}const v=s(r,[["render",i]]);export{C as __pageData,v as default};
