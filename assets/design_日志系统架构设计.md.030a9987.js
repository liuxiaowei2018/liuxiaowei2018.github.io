import{_ as e,c as a,o as i,a as l}from"./app.467f35a9.js";const t="/assets/image-20220407132500900.d850769f.png",f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"日志系统架构设计","slug":"日志系统架构设计","link":"#日志系统架构设计","children":[{"level":3,"title":"审计日志组件","slug":"审计日志组件","link":"#审计日志组件","children":[]},{"level":3,"title":"ELK日志系统","slug":"elk日志系统","link":"#elk日志系统","children":[]},{"level":3,"title":"生产日志可视化","slug":"生产日志可视化","link":"#生产日志可视化","children":[]}]}],"relativePath":"design/日志系统架构设计.md"}'),r={name:"design/日志系统架构设计.md"},n=l('<h2 id="日志系统架构设计" tabindex="-1">日志系统架构设计 <a class="header-anchor" href="#日志系统架构设计" aria-hidden="true">#</a></h2><h3 id="审计日志组件" tabindex="-1">审计日志组件 <a class="header-anchor" href="#审计日志组件" aria-hidden="true">#</a></h3><h4 id="需求" tabindex="-1">需求 <a class="header-anchor" href="#需求" aria-hidden="true">#</a></h4><blockquote><p>所有系统都会有日志，但我们区分了 <strong>系统日志</strong> 和 <strong>操作日志</strong></p><ul><li>系统日志：主要用于开发者调试排查系统问题的，不要求固定格式和可读性</li><li>操作日志：主要面向用户的，要求简单易懂，反映出用户所做的动作。</li></ul><p>通过操作日志可追溯到 某人在某时干了某事情，如：</p><p><img src="'+t+'" alt="image-20220407132500900"></p></blockquote><h4 id="功能" tabindex="-1">功能 <a class="header-anchor" href="#功能" aria-hidden="true">#</a></h4><blockquote><ol><li>基于SpringBoot能够快速接入</li><li>对业务代码具有低入侵性</li></ol><p>自定义 spring-boot-starter-log</p><p>具备以下功能：</p><ul><li>自定义spring boot starter</li><li>定义日志注解</li><li>AOP拦截日志注解方法</li><li>定义日志动态内容模板</li></ul><p>模板中又需要实现：</p><ul><li>动态模板表达式解析：用强大的SpEL来解析表达式</li><li>自定义函数：支持目标方法前置/后置的自定义函数</li></ul></blockquote><h3 id="elk日志系统" tabindex="-1">ELK日志系统 <a class="header-anchor" href="#elk日志系统" aria-hidden="true">#</a></h3><h3 id="生产日志可视化" tabindex="-1">生产日志可视化 <a class="header-anchor" href="#生产日志可视化" aria-hidden="true">#</a></h3>',8),s=[n];function o(d,h,c,_,p,u){return i(),a("div",null,s)}const k=e(r,[["render",o]]);export{f as __pageData,k as default};
