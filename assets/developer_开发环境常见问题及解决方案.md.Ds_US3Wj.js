import{_ as a,c as e,o as s,a4 as t}from"./chunks/framework.PLIGnzYk.js";const _=JSON.parse('{"title":"开发环境常见问题及解决方案","description":"","frontmatter":{},"headers":[],"relativePath":"developer/开发环境常见问题及解决方案.md","filePath":"developer/开发环境常见问题及解决方案.md","lastUpdated":1727778851000}'),i={name:"developer/开发环境常见问题及解决方案.md"},n=t(`<h1 id="开发环境常见问题及解决方案" tabindex="-1">开发环境常见问题及解决方案 <a class="header-anchor" href="#开发环境常见问题及解决方案" aria-label="Permalink to &quot;开发环境常见问题及解决方案&quot;">​</a></h1><h2 id="maven如何手动打包" tabindex="-1">Maven如何手动打包? <a class="header-anchor" href="#maven如何手动打包" aria-label="Permalink to &quot;Maven如何手动打包?&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mvn install:install-file </span></span>
<span class="line"><span>-Dfile=D:\\xxx-1.0.jar </span></span>
<span class="line"><span>-DgroupId=com.alibaba.otter </span></span>
<span class="line"><span>-DartifactId=canal.client </span></span>
<span class="line"><span>-Dversion=1.1.0 </span></span>
<span class="line"><span>-Dpackaging=jar</span></span></code></pre></div><h2 id="git-commit后-如何撤销commit" tabindex="-1">git commit后，如何撤销commit ? <a class="header-anchor" href="#git-commit后-如何撤销commit" aria-label="Permalink to &quot;git commit后，如何撤销commit ?&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>git reset --soft HEAD^</span></span></code></pre></div><blockquote><p>HEAD^ 表示上一个版本，即上一次的commit，也可以写成HEAD~1 如果进行两次的commit，想要都撤回，可以使用HEAD~2</p><p>--soft 不删除工作空间的改动代码 ，撤销commit，不撤销git add file --hard 删除工作空间的改动代码，撤销commit且撤销add</p></blockquote><h2 id="idea中git提交代码到远程仓库回退步骤" tabindex="-1">idea中Git提交代码到远程仓库回退步骤 <a class="header-anchor" href="#idea中git提交代码到远程仓库回退步骤" aria-label="Permalink to &quot;idea中Git提交代码到远程仓库回退步骤&quot;">​</a></h2><p><strong>1、先回退提交到本地仓库的代码</strong></p><p>选择需要回退到的提交记录，鼠标右键点击【Reset Current Branch to Here…】，如下图：</p><p><img src="https://knowledge-2018.oss-cn-shanghai.aliyuncs.com/img/202407251114881.png" alt="image-20240725111426800"></p><p>弹出的窗口选择【Hard】——&gt;点击【Reset】：</p><ul><li>Soft：回滚到指定版本，并保留所有更改，这些更改将被重新提交。使用这种模式，你可以撤销已经提交的更改，然后重新提交。</li><li>Mixed：回滚到指定版本，并保留所有更改，但是更改将不会被重新提交（文件进入到Unversioned Files中）。使用这种模式，你可以撤销已经提交的更改，并保留这些更改，以备后续修改和提交。</li><li>Hard：回滚到指定版本，并删除指定版本之后的所有更改。使用这种模式，你可以完全撤销指定版本之后的所有更改。</li><li>Keep：回滚到指定版本，但是保留指定版本之后的更改。使用这种模式，你可以撤销指定版本之后的更改，并保留这些更改，以备后续修改和提交。</li></ul><p><strong>以上步骤，将会使得本地Commit 回退到指定版本</strong></p><p><strong>2、再回退提交到远程仓库的代码</strong></p><p>选择需要回退到的指定提交记录，鼠标右键选择【Copy Revision Number】，如下图所示：</p><p><img src="https://knowledge-2018.oss-cn-shanghai.aliyuncs.com/img/202407251117973.png" alt="image-20240725111726930"></p><p>选中项目，鼠标右键选择【Git】——&gt;【Reset HEAD…】，如下图所示：</p><p><img src="https://knowledge-2018.oss-cn-shanghai.aliyuncs.com/img/202407251118929.png" alt="image-20240725111806874"></p><p>弹出的窗口中，Reset Type选择【Hard】，To Commit选项的值为第一步骤中【Copy Revision Number】的值，最后点击【Reset】，如下图</p><p><img src="https://knowledge-2018.oss-cn-shanghai.aliyuncs.com/img/202407251118308.png" alt="image-20240725111833275"></p><p><strong>此时 git push 会报错，因为版本不一致</strong></p><p><strong>最后，打开项目路径窗口，执行【git push origin HEAD --force 】同步至远程，避免版本不一致后续提交报错</strong></p><p><strong>至此，再次查看远程仓库提交记录已经没有了“提交测试”的记录，已经回退到了“从2.0版本迁移到2.1版本”的提交记录</strong></p>`,23),o=[n];function p(l,c,r,d,m,g){return s(),e("div",null,o)}const u=a(i,[["render",p]]);export{_ as __pageData,u as default};
