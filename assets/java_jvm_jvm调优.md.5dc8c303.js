import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.8048b864.js";const E=JSON.parse('{"title":"JVM调优","description":"","frontmatter":{},"headers":[],"relativePath":"java/jvm/jvm调优.md","filePath":"java/jvm/jvm调优.md","lastUpdated":1719224116000}'),e={name:"java/jvm/jvm调优.md"},o=l(`<h1 id="jvm调优" tabindex="-1">JVM调优 <a class="header-anchor" href="#jvm调优" aria-label="Permalink to &quot;JVM调优&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#基本常用设置参数">基本常用设置参数</a><ul><li><a href="#堆设置的常用参数">堆设置的常用参数</a></li><li><a href="#收集器设置">收集器设置</a></li><li><a href="#垃圾回收统计信息">垃圾回收统计信息</a></li><li><a href="#并行收集器设置">并行收集器设置</a></li><li><a href="#并发收集器设置">并发收集器设置</a></li><li><a href="#怎么选择垃圾收集器">怎么选择垃圾收集器</a></li><li><a href="#示例">示例</a></li></ul></li><li><a href="#参考文档">参考文档</a></li></ul></nav><h2 id="基本常用设置参数" tabindex="-1">基本常用设置参数 <a class="header-anchor" href="#基本常用设置参数" aria-label="Permalink to &quot;基本常用设置参数&quot;">​</a></h2><h3 id="堆设置的常用参数" tabindex="-1">堆设置的常用参数 <a class="header-anchor" href="#堆设置的常用参数" aria-label="Permalink to &quot;堆设置的常用参数&quot;">​</a></h3><ul><li><strong>-Xms</strong> :<strong>初始堆大小</strong></li><li><strong>-Xmx</strong> :<strong>最大堆大小，当Xms和Xmx设置相同时，堆就无法进行自动扩展</strong>。</li><li><strong>-XX:NewSize=n/-Xmn</strong> :<strong>设置年轻代大小</strong></li><li><strong>-XX:NewRatio=n:</strong> <strong>设置年轻代和年老代的比值。如:为 3，表示年轻代与年老代比值为1：3，年轻代占整个年轻代年老代和的1/4</strong></li><li><strong>-XX:SurvivorRatio=n</strong> :<strong>年轻代中Eden区与Survivor区的比值。注意Survivor区有两个。如：XX:SurvivorRatio=3，表示Eden区的大小是一个Survivor区的三倍，但Survivor区有两个，那么Eden：Survivor=3：2，一个Survivor区占整个年轻代的1/5。</strong></li><li><strong>-XX:MaxPermSize/-XX:MetaspaceSize=n :设置方法区大小</strong></li></ul><h3 id="收集器设置" tabindex="-1">收集器设置 <a class="header-anchor" href="#收集器设置" aria-label="Permalink to &quot;收集器设置&quot;">​</a></h3><ul><li>-XX:+UseSerialGC :<strong>设置串行收集器(serial+serialOld)</strong></li><li>-XX:+UseParallelGC :<strong>设置并行收集器（Parnew+Serialold）</strong></li><li>-XX:+UseParalledlOldGC :<strong>设置并行年老代收集器(parScavenge+parold)</strong></li><li>-XX:+UseConcMarkSweepGC :<strong>设置并发收集器（Parnew+Cms）</strong></li></ul><h3 id="垃圾回收统计信息" tabindex="-1">垃圾回收统计信息 <a class="header-anchor" href="#垃圾回收统计信息" aria-label="Permalink to &quot;垃圾回收统计信息&quot;">​</a></h3><ul><li>-XX:+PrintHeapAtGC GC的heap详情</li><li>-XX:+PrintGCDetails GC详情</li><li>-XX:+PrintGCTimeStamps 打印GC时间信息</li><li>-XX:+PrintTenuringDistribution 打印年龄信息等</li><li>-XX:+HandlePromotionFailure 老年代分配担保（true or false）</li></ul><h3 id="并行收集器设置" tabindex="-1">并行收集器设置 <a class="header-anchor" href="#并行收集器设置" aria-label="Permalink to &quot;并行收集器设置&quot;">​</a></h3><ul><li>-XX:ParallelGCThreads=n :设置并行收集器收集时使用的CPU数。并行收集线程数。</li><li>-XX:MaxGCPauseMillis=n :设置并行收集最大暂停时间</li><li>-XX:GCTimeRatio=n :设置垃圾回收时间占程序运行时间的百分比。公式为1/(1+n)</li></ul><h3 id="并发收集器设置" tabindex="-1">并发收集器设置 <a class="header-anchor" href="#并发收集器设置" aria-label="Permalink to &quot;并发收集器设置&quot;">​</a></h3><ul><li>-XX:+CMSIncrementalMode :设置为增量模式。适用于单CPU情况。</li><li>-XX:ParallelGCThreads=n :设置并发收集器年轻代收集方式为并行收集时，使用的CPU数。并行收集线程数</li></ul><h3 id="怎么选择垃圾收集器" tabindex="-1">怎么选择垃圾收集器 <a class="header-anchor" href="#怎么选择垃圾收集器" aria-label="Permalink to &quot;怎么选择垃圾收集器&quot;">​</a></h3><blockquote><ol><li>优先调整堆的大小让服务器自己来选择</li><li>如果内存小于100m，使用串行收集器</li><li>如果是单核，并且没有停顿时间的要求，串行或JVM自己选择</li><li>如果允许停顿时间超过1秒，选择并行或者JVM自己选</li><li>如果响应时间最重要，并且不能超过1秒，使用并发收集器</li></ol></blockquote><blockquote><p>CPU单核，那么毫⽆疑问Serial 垃圾收集器是你唯⼀的选择。</p><p>CPU多核，关注吞吐量 ，那么选择PS+PO组合。</p><p>CPU多核，关注⽤户停顿时间，JDK版本1.6或者1.7，那么选择CMS。</p><p>CPU多核，关注⽤户停顿时间，JDK1.8及以上，JVM可⽤内存6G以上，那么选择G1。</p></blockquote><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><h4 id="常用配置" tabindex="-1">常用配置 <a class="header-anchor" href="#常用配置" aria-label="Permalink to &quot;常用配置&quot;">​</a></h4><blockquote><p>启动应用程序</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">java</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-jar</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-Xloggc:./gc-%t.log</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-XX:+PrintGCDetails</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-XX:+PrintGCDateStamps</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-XX:+PrintGCTimeStamps</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-XX:+PrintGCCause</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-XX:+UseGCLogFileRotation</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-XX:NumberOfGCLogFiles=10</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-XX:GCLogFileSize=100M</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">xxx.jar</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">java</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-jar</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-Xloggc:./gc-%t.log</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-XX:+PrintGCDetails</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-XX:+PrintGCDateStamps</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-XX:+PrintGCTimeStamps</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-XX:+PrintGCCause</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-XX:+UseGCLogFileRotation</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-XX:NumberOfGCLogFiles=10</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-XX:GCLogFileSize=100M</span><span style="color:#24292E;"> </span><span style="color:#032F62;">xxx.jar</span></span></code></pre></div><h5 id="cms" tabindex="-1">cms <a class="header-anchor" href="#cms" aria-label="Permalink to &quot;cms&quot;">​</a></h5><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">-Xloggc:d:/gc-cms-%t.log</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-Xms50M</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-Xmx50M</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-XX:MetaspaceSize</span><span style="color:#E1E4E8;">=256M </span></span>
<span class="line"><span style="color:#B392F0;">-XX:MaxMetaspaceSize</span><span style="color:#E1E4E8;">=256M </span></span>
<span class="line"><span style="color:#B392F0;">-XX:+PrintGCDetails</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-XX:+PrintGCDateStamps</span></span>
<span class="line"><span style="color:#B392F0;">-XX:+PrintGCTimeStamps</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-XX:+PrintGCCause</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-XX:+UseGCLogFileRotation</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-XX:NumberOfGCLogFiles</span><span style="color:#E1E4E8;">=10 </span></span>
<span class="line"><span style="color:#B392F0;">-XX:GCLogFileSize</span><span style="color:#E1E4E8;">=100M</span></span>
<span class="line"><span style="color:#B392F0;">-XX:+UseParNewGC</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-XX:+UseConcMarkSweepGC</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">-Xloggc:d:/gc-cms-%t.log</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-Xms50M</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-Xmx50M</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-XX:MetaspaceSize</span><span style="color:#24292E;">=256M </span></span>
<span class="line"><span style="color:#6F42C1;">-XX:MaxMetaspaceSize</span><span style="color:#24292E;">=256M </span></span>
<span class="line"><span style="color:#6F42C1;">-XX:+PrintGCDetails</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-XX:+PrintGCDateStamps</span></span>
<span class="line"><span style="color:#6F42C1;">-XX:+PrintGCTimeStamps</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-XX:+PrintGCCause</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-XX:+UseGCLogFileRotation</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-XX:NumberOfGCLogFiles</span><span style="color:#24292E;">=10 </span></span>
<span class="line"><span style="color:#6F42C1;">-XX:GCLogFileSize</span><span style="color:#24292E;">=100M</span></span>
<span class="line"><span style="color:#6F42C1;">-XX:+UseParNewGC</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-XX:+UseConcMarkSweepGC</span></span></code></pre></div><h5 id="g1" tabindex="-1">G1 <a class="header-anchor" href="#g1" aria-label="Permalink to &quot;G1&quot;">​</a></h5><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">-Xloggc:d:/gc-g1-%t.log</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-Xms512M</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-Xmx512M</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-XX:MetaspaceSize</span><span style="color:#E1E4E8;">=256M </span></span>
<span class="line"><span style="color:#B392F0;">-XX:MaxMetaspaceSize</span><span style="color:#E1E4E8;">=256M </span></span>
<span class="line"><span style="color:#B392F0;">-XX:+PrintGCDetails</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-XX:+PrintGCDateStamps</span></span>
<span class="line"><span style="color:#B392F0;">-XX:+PrintGCTimeStamps</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-XX:+PrintGCCause</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-XX:+UseGCLogFileRotation</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-XX:NumberOfGCLogFiles</span><span style="color:#E1E4E8;">=10 </span></span>
<span class="line"><span style="color:#B392F0;">-XX:GCLogFileSize</span><span style="color:#E1E4E8;">=100M</span></span>
<span class="line"><span style="color:#B392F0;">-XX:+UseG1GC</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">-Xloggc:d:/gc-g1-%t.log</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-Xms512M</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-Xmx512M</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-XX:MetaspaceSize</span><span style="color:#24292E;">=256M </span></span>
<span class="line"><span style="color:#6F42C1;">-XX:MaxMetaspaceSize</span><span style="color:#24292E;">=256M </span></span>
<span class="line"><span style="color:#6F42C1;">-XX:+PrintGCDetails</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-XX:+PrintGCDateStamps</span></span>
<span class="line"><span style="color:#6F42C1;">-XX:+PrintGCTimeStamps</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-XX:+PrintGCCause</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-XX:+UseGCLogFileRotation</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-XX:NumberOfGCLogFiles</span><span style="color:#24292E;">=10 </span></span>
<span class="line"><span style="color:#6F42C1;">-XX:GCLogFileSize</span><span style="color:#24292E;">=100M</span></span>
<span class="line"><span style="color:#6F42C1;">-XX:+UseG1GC</span></span></code></pre></div><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-XX:G1HeapRegionSize=n</td><td>设置Region大小，并非最终值</td></tr><tr><td>-XX:MaxGCPauseMillis</td><td>设置G1收集过程目标时间，默认值200ms，不是硬性条件</td></tr><tr><td>-XX:G1NewSizePercent</td><td>新生代最小值，默认值5%</td></tr><tr><td>-XX:G1MaxNewSizePercent</td><td>新生代最大值，默认值60%</td></tr><tr><td>-XX:ParallelGCThreads</td><td>STW期间，并行GC线程数</td></tr><tr><td>-XX:ConcGCThreads=n</td><td>并发标记阶段，并行执行的线程数</td></tr><tr><td>-XX:InitiatingHeapOccupancyPercent</td><td>设置触发标记周期的 Java 堆占用率阈值。默认值是45%。</td></tr></tbody></table><h2 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-label="Permalink to &quot;参考文档&quot;">​</a></h2><ul><li><p><a href="https://juejin.cn/post/7202996870250987575#heading-3" target="_blank" rel="noreferrer">JVM参数太多？一网打尽常用JVM参数！</a></p></li><li><p><a href="https://juejin.cn/post/6977546359268343816" target="_blank" rel="noreferrer">面向CMS垃圾回收器的性能优化实战</a></p></li><li><p><a href="https://juejin.cn/post/7201780815944368188" target="_blank" rel="noreferrer">JVM调优实战</a></p></li><li><p><a href="https://juejin.cn/post/7241395886856880165" target="_blank" rel="noreferrer">系统性排查JVM内存问题的思路</a></p></li><li><p><a href="https://juejin.cn/post/7380513226155704374" target="_blank" rel="noreferrer">对 JVM 垃圾回收参数有没有深入的理解?</a></p></li><li><p><a href="https://render.alipay.com/p/s/jvm-generate/QuickSetting" target="_blank" rel="noreferrer">Jvm调优参数在线配置</a></p></li></ul>`,27),p=[o];function t(r,i,c,X,y,C){return a(),n("div",null,p)}const h=s(e,[["render",t]]);export{E as __pageData,h as default};
