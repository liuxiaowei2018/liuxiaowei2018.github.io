import{_ as o,c as p,b as s,e,a as n,d as a,o as t,r as c}from"./app.91d57d2c.js";const r="/assets/image-20220512220452508.e122118e.png",D="/assets/image-20220512221632266.d1689295.png",y="/assets/image-20220512222000668.1bfddc1f.png",F="/assets/image-20220402172526040.274fb4f6.png",A="/assets/image-20220512203238024.ecc6ad3a.png",C="/assets/1e395ffbda4fe58a49897854a7d72ce9.7a02162c.png",i="/assets/01.bcdacc6a.jpg",d="/assets/image-20220512223138893.9e0163a5.png",u="/assets/image-20220512223159371.e421e450.png",g="/assets/image-20220512223328166.6cf3a13d.png",E="/assets/b12d2b0775b788c80247c9a7363011b6.0e176562.jpeg",b="/assets/143162657d5f8c7cb7712d0996bf2a38.033f6d89.jpeg",f="/assets/2446cc9fba90605b691ea250cf340ebb.479b4a45.png",h="/assets/4a0a9d810fad631a5f0263bc411e6606.b8d5973d.png",m="/assets/0e80d7996e6a8642b66873b0f0a31680.86f5b6be.png",B="/assets/8560e3437ba97621cffb794d629d4928.0c26dfd5.png",v="/assets/bfdcd6b07c6f5434ba01895efd174cdc.de53e0ae.png",S="/assets/v2-7dcee9f19c6558d5f8e4ff778e674396_720w.80b497da.jpg",W=JSON.parse('{"title":"Spring","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u539F\u7406\u7BC7","slug":"\u539F\u7406\u7BC7","link":"#\u539F\u7406\u7BC7","children":[]},{"level":2,"title":"\u7EC4\u4EF6\u7BC7","slug":"\u7EC4\u4EF6\u7BC7","link":"#\u7EC4\u4EF6\u7BC7","children":[]},{"level":2,"title":"\u5E94\u7528\u7BC7","slug":"\u5E94\u7528\u7BC7","link":"#\u5E94\u7528\u7BC7","children":[]}],"relativePath":"study/framework/Spring.md"}'),x={name:"study/framework/Spring.md"},R=n('<h1 id="spring" tabindex="-1">Spring <a class="header-anchor" href="#spring" aria-hidden="true">#</a></h1><h2 id="\u539F\u7406\u7BC7" tabindex="-1">\u539F\u7406\u7BC7 <a class="header-anchor" href="#\u539F\u7406\u7BC7" aria-hidden="true">#</a></h2><h4 id="\u5FAA\u73AF\u4F9D\u8D56" tabindex="-1">\u5FAA\u73AF\u4F9D\u8D56 <a class="header-anchor" href="#\u5FAA\u73AF\u4F9D\u8D56" aria-hidden="true">#</a></h4><p>\u5FAA\u73AF\u4F9D\u8D56\uFF0C\u5176\u5B9E\u5C31\u662F\u5FAA\u73AF\u5F15\u7528\uFF0C\u5C31\u662F\u4E24\u4E2A\u6216\u8005\u4E24\u4E2A\u4EE5\u4E0A\u7684 bean \u4E92\u76F8\u5F15\u7528\u5BF9\u65B9\uFF0C\u6700\u7EC8\u5F62\u6210\u4E00\u4E2A\u95ED\u73AF\uFF0C\u5982 A \u4F9D\u8D56 B\uFF0CB \u4F9D\u8D56 C\uFF0CC \u4F9D\u8D56 A\u3002\u5982\u4E0B\u56FE\u6240\u793A\uFF1A</p><p><img src="'+r+`" alt="image-20220512220452508"></p><p>\u5FAA\u73AF\u4F9D\u8D56\uFF0C\u5176\u5B9E\u5C31\u662F\u4E00\u4E2A<strong>\u6B7B\u5FAA\u73AF</strong>\u7684\u8FC7\u7A0B\uFF0C\u5728\u521D\u59CB\u5316 A \u7684\u65F6\u5019\u53D1\u73B0\u5F15\u7528\u4E86 B\uFF0C\u8FD9\u65F6\u5C31\u4F1A\u53BB\u521D\u59CB\u5316 B\uFF0C\u7136\u540E\u53C8\u53D1\u73B0 B \u5F15\u7528 C\uFF0C\u8DD1\u53BB\u521D\u59CB\u5316 C\uFF0C\u521D\u59CB\u5316 C \u7684\u65F6\u5019\u53D1\u73B0\u5F15\u7528\u4E86 A\uFF0C\u5219\u53C8\u4F1A\u53BB\u521D\u59CB\u5316 A\uFF0C\u4F9D\u6B21\u5FAA\u73AF\u6C38\u4E0D\u9000\u51FA\uFF0C\u9664\u975E\u6709<strong>\u7EC8\u7ED3\u6761\u4EF6</strong>\u3002</p><p>Spring \u5FAA\u73AF\u4F9D\u8D56\u7684<strong>\u573A\u666F</strong>\u6709\u4E24\u79CD\uFF1A</p><ol><li>\u6784\u9020\u5668\u7684\u5FAA\u73AF\u4F9D\u8D56\u3002</li><li>field \u5C5E\u6027\u7684\u5FAA\u73AF\u4F9D\u8D56\u3002</li></ol><p>\u5BF9\u4E8E\u6784\u9020\u5668\u7684\u5FAA\u73AF\u4F9D\u8D56\uFF0CSpring \u662F\u65E0\u6CD5\u89E3\u51B3\u7684\uFF0C\u53EA\u80FD\u629B\u51FA BeanCurrentlyInCreationException \u5F02\u5E38\u8868\u793A\u5FAA\u73AF\u4F9D\u8D56\uFF0C<strong>\u6240\u4EE5\u4E0B\u9762\u6211\u4EEC\u5206\u6790\u7684\u90FD\u662F\u57FA\u4E8E field \u5C5E\u6027\u7684\u5FAA\u73AF\u4F9D\u8D56</strong>\u3002</p><p>Spring \u53EA\u89E3\u51B3 scope \u4E3A singleton \u7684\u5FAA\u73AF\u4F9D\u8D56\u3002\u5BF9\u4E8Escope \u4E3A prototype \u7684 bean \uFF0CSpring \u65E0\u6CD5\u89E3\u51B3\uFF0C\u76F4\u63A5\u629B\u51FA BeanCurrentlyInCreationException \u5F02\u5E38\u3002</p><p>\u4E3A\u4EC0\u4E48 Spring \u4E0D\u5904\u7406 prototype bean \u5462\uFF1F\u5176\u5B9E\u5982\u679C\u7406\u89E3 Spring \u662F\u5982\u4F55\u89E3\u51B3 singleton bean \u7684\u5FAA\u73AF\u4F9D\u8D56\u5C31\u660E\u767D\u4E86\u3002\u8FD9\u91CC\u5148\u5356\u4E00\u4E2A\u5173\u5B50\uFF0C\u6211\u4EEC\u5148\u6765\u5173\u6CE8 Spring \u662F\u5982\u4F55\u89E3\u51B3 singleton bean \u7684\u5FAA\u73AF\u4F9D\u8D56\u7684\u3002</p><h5 id="getsingleton" tabindex="-1">getSingleton <a class="header-anchor" href="#getsingleton" aria-hidden="true">#</a></h5><p>\u6211\u4EEC\u5148\u4ECE\u52A0\u8F7D bean \u6700\u521D\u59CB\u7684\u65B9\u6CD5 AbstractBeanFactory \u7684 <code>#doGetBean(final String name, final Class&lt;T&gt; requiredType, final Object[] args, boolean typeCheckOnly)</code> \u65B9\u6CD5\u5F00\u59CB\u3002</p><p>\u5728 <code>#doGetBean(...)</code> \u65B9\u6CD5\u4E2D\uFF0C\u9996\u5148\u4F1A\u6839\u636E <code>beanName</code> \u4ECE\u5355\u4F8B bean \u7F13\u5B58\u4E2D\u83B7\u53D6\uFF0C<strong>\u5982\u679C\u4E0D\u4E3A\u7A7A\u5219\u76F4\u63A5\u8FD4\u56DE</strong>\u3002\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#676E95;">// AbstractBeanFactory.java</span></span>
<span class="line"><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> sharedInstance </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getSingleton</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>\u8C03\u7528 <code>#getSingleton(String beanName, boolean allowEarlyReference)</code> \u65B9\u6CD5\uFF0C\u4ECE\u5355\u4F8B\u7F13\u5B58\u4E2D\u83B7\u53D6\u3002\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#676E95;">// DefaultSingletonBeanRegistry.java</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Nullable</span></span>
<span class="line"><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getSingleton</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> beanName</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">boolean</span><span style="color:#A6ACCD;"> allowEarlyReference</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// \u4ECE\u5355\u4F8B\u7F13\u51B2\u4E2D\u52A0\u8F7D bean</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> singletonObject </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">singletonObjects</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// \u7F13\u5B58\u4E2D\u7684 bean \u4E3A\u7A7A\uFF0C\u4E14\u5F53\u524D bean \u6B63\u5728\u521B\u5EFA</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">singletonObject </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">isSingletonCurrentlyInCreation</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// \u52A0\u9501</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">synchronized</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(this.</span><span style="color:#A6ACCD;">singletonObjects</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;">// \u4ECE earlySingletonObjects \u83B7\u53D6</span></span>
<span class="line"><span style="color:#A6ACCD;">            singletonObject </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">earlySingletonObjects</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;">// earlySingletonObjects \u4E2D\u6CA1\u6709\uFF0C\u4E14\u5141\u8BB8\u63D0\u524D\u521B\u5EFA</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">singletonObject </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> allowEarlyReference</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">                </span><span style="color:#676E95;">// \u4ECE singletonFactories \u4E2D\u83B7\u53D6\u5BF9\u5E94\u7684 ObjectFactory</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#C792EA;">ObjectFactory</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">?</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> singletonFactory </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">singletonFactories</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">singletonFactory </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">                    </span><span style="color:#676E95;">// \u83B7\u5F97 bean</span></span>
<span class="line"><span style="color:#A6ACCD;">                    singletonObject </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> singletonFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getObject</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">                    </span><span style="color:#676E95;">// \u6DFB\u52A0 bean \u5230 earlySingletonObjects \u4E2D</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">earlySingletonObjects</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">put</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> singletonObject</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">                    </span><span style="color:#676E95;">// \u4ECE singletonFactories \u4E2D\u79FB\u9664\u5BF9\u5E94\u7684 ObjectFactory</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">singletonFactories</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> singletonObject</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u8FD9\u4E2A\u65B9\u6CD5\u4E3B\u8981\u662F\u4ECE\u4E09\u4E2A\u7F13\u5B58\u4E2D\u83B7\u53D6\uFF0C\u5206\u522B\u662F\uFF1A<code>singletonObjects</code>\u3001<code>earlySingletonObjects</code>\u3001<code>singletonFactories</code> \u3002\u4E09\u8005\u5B9A\u4E49\u5982\u4E0B\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#676E95;">// DefaultSingletonBeanRegistry.java</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Cache of singleton objects: bean name to bean instance.</span></span>
<span class="line"><span style="color:#676E95;"> *</span></span>
<span class="line"><span style="color:#676E95;"> * \u4E00\u7EA7\u7F13\u5B58\uFF0C\u5B58\u653E\u7684\u662F\u5355\u4F8B bean \u7684\u6620\u5C04\u3002</span></span>
<span class="line"><span style="color:#676E95;"> *</span></span>
<span class="line"><span style="color:#676E95;"> * \u6CE8\u610F\uFF0C\u8FD9\u91CC\u7684 bean \u662F\u5DF2\u7ECF\u521B\u5EFA\u5B8C\u6210\u7684\u3002</span></span>
<span class="line"><span style="color:#676E95;"> *</span></span>
<span class="line"><span style="color:#676E95;"> * \u5BF9\u5E94\u5173\u7CFB\u4E3A bean name --&gt; bean instance</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">final</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> singletonObjects </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ConcurrentHashMap</span><span style="color:#89DDFF;">&lt;&gt;(</span><span style="color:#F78C6C;">256</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Cache of early singleton objects: bean name to bean instance.</span></span>
<span class="line"><span style="color:#676E95;"> *</span></span>
<span class="line"><span style="color:#676E95;"> * \u4E8C\u7EA7\u7F13\u5B58\uFF0C\u5B58\u653E\u7684\u662F\u65E9\u671F\u534A\u6210\u54C1\uFF08\u672A\u521D\u59CB\u5316\u5B8C\uFF09\u7684 bean\uFF0C\u5BF9\u5E94\u5173\u7CFB\u4E5F\u662F bean name --&gt; bean instance\u3002</span></span>
<span class="line"><span style="color:#676E95;"> *</span></span>
<span class="line"><span style="color:#676E95;"> * \u5B83\u4E0E {@link #singletonObjects} \u533A\u522B\u5728\u4E8E\uFF0C \u5B83\u81EA\u5DF1\u5B58\u653E\u7684 bean \u4E0D\u4E00\u5B9A\u662F\u5B8C\u6574\u3002</span></span>
<span class="line"><span style="color:#676E95;"> *</span></span>
<span class="line"><span style="color:#676E95;"> * \u8FD9\u4E2A Map \u4E5F\u662F\u3010\u5FAA\u73AF\u4F9D\u8D56\u3011\u7684\u5173\u952E\u6240\u5728\u3002</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">final</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> earlySingletonObjects </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">HashMap</span><span style="color:#89DDFF;">&lt;&gt;(</span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Cache of singleton factories: bean name to ObjectFactory.</span></span>
<span class="line"><span style="color:#676E95;"> *</span></span>
<span class="line"><span style="color:#676E95;"> * \u4E09\u7EA7\u7F13\u5B58\uFF0C\u5B58\u653E\u7684\u662F ObjectFactory\uFF0C\u53EF\u4EE5\u7406\u89E3\u4E3A\u521B\u5EFA\u65E9\u671F\u534A\u6210\u54C1\uFF08\u672A\u521D\u59CB\u5316\u5B8C\uFF09\u7684 bean \u7684 factory \uFF0C\u6700\u7EC8\u6DFB\u52A0\u5230\u4E8C\u7EA7\u7F13\u5B58 {@link #earlySingletonObjects} \u4E2D</span></span>
<span class="line"><span style="color:#676E95;"> *</span></span>
<span class="line"><span style="color:#676E95;"> * \u5BF9\u5E94\u5173\u7CFB\u662F bean name --&gt; ObjectFactory</span></span>
<span class="line"><span style="color:#676E95;"> *</span></span>
<span class="line"><span style="color:#676E95;"> * \u8FD9\u4E2A Map \u4E5F\u662F\u3010\u5FAA\u73AF\u4F9D\u8D56\u3011\u7684\u5173\u952E\u6240\u5728\u3002</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">final</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ObjectFactory</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">?</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> singletonFactories </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">HashMap</span><span style="color:#89DDFF;">&lt;&gt;(</span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><ul><li><code>singletonObjects</code> \uFF1A\u5355\u4F8B\u5BF9\u8C61\u7684 Cache \u3002</li><li><code>earlySingletonObjects</code> \uFF1A<strong>\u63D0\u524D\u66DD\u5149</strong>\u7684\u5355\u4F8B\u5BF9\u8C61\u7684 Cache \u3002</li><li><code>singletonFactories</code> \uFF1A \u5355\u4F8B\u5BF9\u8C61\u5DE5\u5382\u7684 Cache \u3002</li></ul><p>\u5B83\u4EEC\u4E09\uFF0C\u5C31\u662F Spring \u89E3\u51B3 singleton bean \u7684\u5173\u952E\u56E0\u7D20\u6240\u5728\uFF0C\u6211\u79F0\u4ED6\u4EEC\u4E3A<strong>\u4E09\u7EA7\u7F13\u5B58</strong>\uFF1A</p><ul><li>\u7B2C\u4E00\u7EA7\u4E3A <code>singletonObjects</code></li><li>\u7B2C\u4E8C\u7EA7\u4E3A <code>earlySingletonObjects</code></li><li>\u7B2C\u4E09\u7EA7\u4E3A <code>singletonFactories</code></li></ul><p>\u8FD9\u91CC\uFF0C\u6211\u4EEC\u5DF2\u7ECF\u901A\u8FC7 <code>#getSingleton(String beanName, boolean allowEarlyReference)</code> \u65B9\u6CD5\uFF0C\u770B\u5230\u4ED6\u4EEC\u662F\u5982\u4F55\u914D\u5408\u7684\u3002\u8BE6\u7EC6\u5206\u6790\u8BE5\u65B9\u6CD5\u4E4B\u524D\uFF0C\u63D0\u4E0B\u5176\u4E2D\u7684 <code>#isSingletonCurrentlyInCreation(String beanName)</code> \u65B9\u6CD5\u548C <code>allowEarlyReference</code> \u53D8\u91CF\uFF1A</p><ul><li><code>#isSingletonCurrentlyInCreation(String beanName)</code> \u65B9\u6CD5\uFF1A\u5224\u65AD\u5F53\u524D singleton bean \u662F\u5426\u5904\u4E8E\u521B\u5EFA\u4E2D\u3002bean \u5904\u4E8E\u521B\u5EFA\u4E2D\uFF0C\u4E5F\u5C31\u662F\u8BF4 bean \u5728\u521D\u59CB\u5316\u4F46\u662F\u6CA1\u6709\u5B8C\u6210\u521D\u59CB\u5316\uFF0C\u6709\u4E00\u4E2A\u8FD9\u6837\u7684\u8FC7\u7A0B\u5176\u5B9E\u548C Spring \u89E3\u51B3 bean \u5FAA\u73AF\u4F9D\u8D56\u7684\u7406\u5FF5\u76F8\u8F85\u76F8\u6210\u3002<strong>\u56E0\u4E3A Spring \u89E3\u51B3 singleton bean \u7684\u6838\u5FC3\u5C31\u5728\u4E8E\u63D0\u524D\u66DD\u5149 bean</strong> \u3002</li><li><code>allowEarlyReference</code> \u53D8\u91CF\uFF1A\u4ECE\u5B57\u9762\u610F\u601D\u4E0A\u9762\u7406\u89E3\u5C31\u662F\u5141\u8BB8\u63D0\u524D\u62FF\u5230\u5F15\u7528\u3002\u5176\u5B9E\u771F\u6B63\u7684\u610F\u601D\u662F\uFF0C\u662F\u5426\u5141\u8BB8\u4ECE <code>singletonFactories</code> \u7F13\u5B58\u4E2D\u901A\u8FC7 <code>#getObject()</code> \u65B9\u6CD5\uFF0C\u62FF\u5230\u5BF9\u8C61\u3002\u4E3A\u4EC0\u4E48\u4F1A\u6709\u8FD9\u6837\u4E00\u4E2A\u5B57\u6BB5\u5462\uFF1F<strong>\u539F\u56E0\u5C31\u5728\u4E8E <code>singletonFactories</code> \u624D\u662F Spring \u89E3\u51B3 singleton bean \u7684\u8BC0\u7A8D\u6240\u5728</strong>\uFF0C\u8FD9\u4E2A\u6211\u4EEC\u540E\u7EED\u5206\u6790\u3002</li></ul><p><code>#getSingleton(String beanName, boolean allowEarlyReference)</code> \u65B9\u6CD5\uFF0C\u6574\u4E2A\u8FC7\u7A0B\u5982\u4E0B\uFF1A</p><ul><li><p>\u9996\u5148\uFF0C\u4ECE\u4E00\u7EA7\u7F13\u5B58 <code>singletonObjects</code> \u83B7\u53D6\u3002</p></li><li><p>\u5982\u679C\uFF0C\u6CA1\u6709\u4E14\u5F53\u524D\u6307\u5B9A\u7684 <code>beanName</code> \u6B63\u5728\u521B\u5EFA\uFF0C\u5C31\u518D\u4ECE\u4E8C\u7EA7\u7F13\u5B58 <code>earlySingletonObjects</code> \u4E2D\u83B7\u53D6\u3002</p></li><li><p>\u5982\u679C\uFF0C\u8FD8\u662F\u6CA1\u6709\u83B7\u53D6\u5230\u4E14\u5141\u8BB8 <code>singletonFactories</code> \u901A\u8FC7 <code>#getObject()</code> \u83B7\u53D6\uFF0C\u5219\u4ECE\u4E09\u7EA7\u7F13\u5B58 <code>singletonFactories</code> \u83B7\u53D6\u3002\u5982\u679C\u83B7\u53D6\u5230\uFF0C\u5219\u901A\u8FC7\u5176 <code>#getObject()</code> \u65B9\u6CD5\uFF0C\u83B7\u53D6\u5BF9\u8C61\uFF0C\u5E76\u5C06\u5176\u52A0\u5165\u5230\u4E8C\u7EA7\u7F13\u5B58 <code>earlySingletonObjects</code> \u4E2D\uFF0C\u5E76\u4ECE\u4E09\u7EA7\u7F13\u5B58 <code>singletonFactories</code> \u5220\u9664\u3002\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#676E95;">// DefaultSingletonBeanRegistry.java</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">singletonObject </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> singletonFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getObject</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">earlySingletonObjects</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">put</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> singletonObject</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">singletonFactories</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><ul><li><ul><li>\u8FD9\u6837\uFF0C\u5C31\u4ECE\u4E09\u7EA7\u7F13\u5B58<strong>\u5347\u7EA7</strong>\u5230\u4E8C\u7EA7\u7F13\u5B58\u4E86\u3002</li><li>\u{1F608} \u6240\u4EE5\uFF0C\u4E8C\u7EA7\u7F13\u5B58\u5B58\u5728\u7684<strong>\u610F\u4E49</strong>\uFF0C\u5C31\u662F\u7F13\u5B58\u4E09\u7EA7\u7F13\u5B58\u4E2D\u7684 ObjectFactory \u7684 <code>#getObject()</code> \u65B9\u6CD5\u7684\u6267\u884C\u7ED3\u679C\uFF0C\u63D0\u65E9\u66DD\u5149\u7684<strong>\u5355\u4F8B</strong> Bean \u5BF9\u8C61\u3002</li></ul></li></ul></li></ul><h5 id="addsingletonfactory" tabindex="-1">addSingletonFactory <a class="header-anchor" href="#addsingletonfactory" aria-hidden="true">#</a></h5><p>\u4E0A\u9762\u662F\u4ECE\u7F13\u5B58\u4E2D\u83B7\u53D6\uFF0C\u4F46\u662F\u7F13\u5B58\u4E2D\u7684\u6570\u636E\u4ECE\u54EA\u91CC\u6DFB\u52A0\u8FDB\u6765\u7684\u5462\uFF1F\u4E00\u76F4\u5F80\u4E0B\u8DDF\u4F1A\u53D1\u73B0\u5728 AbstractAutowireCapableBeanFactory \u7684 <code>#doCreateBean(final String beanName, final RootBeanDefinition mbd, final Object[] args)</code> \u65B9\u6CD5\u4E2D\uFF0C\u6709\u8FD9\u4E48\u4E00\u6BB5\u4EE3\u7801\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#676E95;">// AbstractAutowireCapableBeanFactory.java</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">boolean</span><span style="color:#A6ACCD;"> earlySingletonExposure </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">mbd</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isSingleton</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// \u5355\u4F8B\u6A21\u5F0F</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">allowCircularReferences </span><span style="color:#676E95;">// \u8FD0\u884C\u5FAA\u73AF\u4F9D\u8D56</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">isSingletonCurrentlyInCreation</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">));</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// \u5F53\u524D\u5355\u4F8B bean \u662F\u5426\u6B63\u5728\u88AB\u521B\u5EFA</span></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">earlySingletonExposure</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isTraceEnabled</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trace</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Eagerly caching bean &#39;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> beanName </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&#39; to allow for resolving potential circular references</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// \u63D0\u524D\u5C06\u521B\u5EFA\u7684 bean \u5B9E\u4F8B\u52A0\u5165\u5230 singletonFactories \u4E2D</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// &lt;X&gt; \u8FD9\u91CC\u662F\u4E3A\u4E86\u540E\u671F\u907F\u514D\u5FAA\u73AF\u4F9D\u8D56</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">addSingletonFactory</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getEarlyBeanReference</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> mbd</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> bean</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li><p>\u5F53\u4E00\u4E2A Bean \u6EE1\u8DB3\u4E09\u4E2A\u6761\u4EF6\u65F6\uFF0C\u5219\u8C03\u7528<code>#addSingletonFactory(...)</code>\u65B9\u6CD5\uFF0C\u5C06\u5B83\u6DFB\u52A0\u5230\u7F13\u5B58\u4E2D\u3002\u4E09\u4E2A\u6761\u4EF6\u5982\u4E0B\uFF1A</p><ul><li>\u5355\u4F8B</li><li>\u8FD0\u884C\u63D0\u524D\u66B4\u9732 bean</li><li>\u5F53\u524D bean \u6B63\u5728\u521B\u5EFA\u4E2D</li></ul></li><li><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#676E95;">// DefaultSingletonBeanRegistry.java</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">addSingletonFactory</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> beanName</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ObjectFactory</span><span style="color:#89DDFF;">&lt;</span><span style="color:#89DDFF;">?</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> singletonFactory</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	Assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">notNull</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">singletonFactory</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Singleton factory must not be null</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">synchronized</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(this.</span><span style="color:#A6ACCD;">singletonObjects</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(!this.</span><span style="color:#A6ACCD;">singletonObjects</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">containsKey</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">singletonFactories</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">put</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> singletonFactory</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">earlySingletonObjects</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">registeredSingletons</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p>\u4ECE\u8FD9\u6BB5\u4EE3\u7801\u6211\u4EEC\u53EF\u4EE5\u770B\u51FA\uFF0C<code>singletonFactories</code> \u8FD9\u4E2A\u4E09\u7EA7\u7F13\u5B58\u624D\u662F\u89E3\u51B3 Spring Bean \u5FAA\u73AF\u4F9D\u8D56\u7684\u8BC0\u7A8D\u6240\u5728\u3002\u540C\u65F6\u8FD9\u6BB5\u4EE3\u7801\u53D1\u751F\u5728 <code>#createBeanInstance(...)</code> \u65B9\u6CD5\u4E4B\u540E\uFF0C\u4E5F\u5C31\u662F\u8BF4\u8FD9\u4E2A bean \u5176\u5B9E\u5DF2\u7ECF\u88AB\u521B\u5EFA\u51FA\u6765\u4E86\uFF0C<strong>\u4F46\u662F\u5B83\u8FD8\u4E0D\u662F\u5F88\u5B8C\u7F8E\uFF08\u6CA1\u6709\u8FDB\u884C\u5C5E\u6027\u586B\u5145\u548C\u521D\u59CB\u5316\uFF09\uFF0C\u4F46\u662F\u5BF9\u4E8E\u5176\u4ED6\u4F9D\u8D56\u5B83\u7684\u5BF9\u8C61\u800C\u8A00\u5DF2\u7ECF\u8DB3\u591F\u4E86\uFF08\u53EF\u4EE5\u6839\u636E\u5BF9\u8C61\u5F15\u7528\u5B9A\u4F4D\u5230\u5806\u4E2D\u5BF9\u8C61\uFF09\uFF0C\u80FD\u591F\u88AB\u8BA4\u51FA\u6765\u4E86</strong>\u3002\u6240\u4EE5 Spring \u5728\u8FD9\u4E2A\u65F6\u5019\uFF0C\u9009\u62E9\u5C06\u8BE5\u5BF9\u8C61\u63D0\u524D\u66DD\u5149\u51FA\u6765\u8BA9\u5927\u5BB6\u8BA4\u8BC6\u8BA4\u8BC6\u3002</p></li></ul><p>\u53E6\u5916\uFF0C<code>&lt;X&gt;</code> \u5904\u7684 <code>#getEarlyBeanReference(String beanName, RootBeanDefinition mbd, Object bean)</code> \u65B9\u6CD5\u4E5F<strong>\u975E\u5E38\u91CD\u8981</strong>\uFF0C\u8FD9\u91CC\u4F1A\u521B\u5EFA\u65E9\u671F\u521D\u59CB\u5316 Bean \u53EF\u80FD\u5B58\u5728\u7684 AOP \u4EE3\u7406\u7B49\u7B49\u3002\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#676E95;">// AbstractAutowireCapableBeanFactory.java</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * \u5BF9\u521B\u5EFA\u7684\u65E9\u671F\u534A\u6210\u54C1\uFF08\u672A\u521D\u59CB\u5316\uFF09\u7684 Bean \u5904\u7406\u5F15\u7528</span></span>
<span class="line"><span style="color:#676E95;"> *</span></span>
<span class="line"><span style="color:#676E95;"> * \u4F8B\u5982\u8BF4\uFF0CAOP \u5C31\u662F\u5728\u8FD9\u91CC\u52A8\u6001\u7EC7\u5165\uFF0C\u521B\u5EFA\u5176\u4EE3\u7406 Bean \u8FD4\u56DE</span></span>
<span class="line"><span style="color:#676E95;"> *</span></span>
<span class="line"><span style="color:#676E95;"> * Obtain a reference for early access to the specified bean,</span></span>
<span class="line"><span style="color:#676E95;"> * typically for the purpose of resolving a circular reference.</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#F78C6C;">@param</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">beanName</span><span style="color:#676E95;"> the name of the bean (for error handling purposes)</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#F78C6C;">@param</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">mbd</span><span style="color:#676E95;"> the merged bean definition for the bean</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#F78C6C;">@param</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">bean</span><span style="color:#676E95;"> the raw bean instance</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#F78C6C;">@return</span><span style="color:#676E95;"> the object to expose as bean reference</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getEarlyBeanReference</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> beanName</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">RootBeanDefinition</span><span style="color:#A6ACCD;"> mbd</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> bean</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> exposedObject </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> bean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#A6ACCD;">mbd</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isSynthetic</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hasInstantiationAwareBeanPostProcessors</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">BeanPostProcessor</span><span style="color:#A6ACCD;"> bp </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getBeanPostProcessors</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">bp </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> SmartInstantiationAwareBeanPostProcessor</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#C792EA;">SmartInstantiationAwareBeanPostProcessor</span><span style="color:#A6ACCD;"> ibp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">SmartInstantiationAwareBeanPostProcessor</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> bp</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">				exposedObject </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ibp</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getEarlyBeanReference</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">exposedObject</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> beanName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> exposedObject</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>\u8FD9\u4E5F\u662F\u4E3A\u4EC0\u4E48 Spring \u9700\u8981\u989D\u5916\u589E\u52A0 <code>singletonFactories</code> \u4E09\u7EA7\u7F13\u5B58\u7684\u539F\u56E0\uFF0C\u89E3\u51B3 Spring \u5FAA\u73AF\u4F9D\u8D56\u60C5\u51B5\u4E0B\u7684 Bean \u5B58\u5728\u52A8\u6001\u4EE3\u7406\u7B49\u60C5\u51B5\uFF0C\u4E0D\u7136\u5FAA\u73AF\u6CE8\u5165\u5230\u522B\u4EBA\u7684 Bean \u5C31\u662F\u539F\u59CB\u7684\uFF0C\u800C\u4E0D\u662F\u7ECF\u8FC7\u52A8\u6001\u4EE3\u7406\u7684\uFF01</li><li>\u53E6\u5916\uFF0C\u8FD9\u91CC\u5728\u63A8\u8350\u4E00\u7BC7<a href="https://segmentfault.com/a/1190000023647227" target="_blank" rel="noreferrer">\u300ASpring\u5FAA\u73AF\u4F9D\u8D56\u4E09\u7EA7\u7F13\u5B58\u662F\u5426\u53EF\u4EE5\u51CF\u5C11\u4E3A\u4E8C\u7EA7\u7F13\u5B58\uFF1F\u300B</a>\u6587\u7AE0\uFF0C\u89E3\u91CA\u7684\u4E5F\u975E\u5E38\u4E0D\u9519\u3002</li></ul><h5 id="addsingleton" tabindex="-1">addSingleton <a class="header-anchor" href="#addsingleton" aria-hidden="true">#</a></h5><p>\u4E09\u7EA7\u7F13\u5B58 <code>singletonFactories</code> \u548C \u4E8C\u7EA7\u7F13\u5B58 <code>earlySingletonObjects</code> \u4E2D\u7684\u503C\u90FD\u6709\u51FA\u5904\u4E86\uFF0C\u90A3\u4E00\u7EA7\u7F13\u5B58\u5728\u54EA\u91CC\u8BBE\u7F6E\u7684\u5462\uFF1F\u5728\u7C7B DefaultSingletonBeanRegistry \u4E2D\uFF0C\u53EF\u4EE5\u53D1\u73B0\u8FD9\u4E2A <code>#addSingleton(String beanName, Object singletonObject)</code> \u65B9\u6CD5\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#676E95;">// DefaultSingletonBeanRegistry.java</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">addSingleton</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> beanName</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> singletonObject</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">synchronized</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(this.</span><span style="color:#A6ACCD;">singletonObjects</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">singletonObjects</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">put</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> singletonObject</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">singletonFactories</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">earlySingletonObjects</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">registeredSingletons</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>\u6DFB\u52A0\u81F3\u4E00\u7EA7\u7F13\u5B58\uFF0C\u540C\u65F6\u4ECE\u4E8C\u7EA7\u3001\u4E09\u7EA7\u7F13\u5B58\u4E2D\u5220\u9664\u3002</li><li>\u8FD9\u4E2A\u65B9\u6CD5\u5728\u6211\u4EEC\u521B\u5EFA bean \u7684\u94FE\u8DEF\u4E2D\u6709\u54EA\u4E2A\u5730\u65B9\u5F15\u7528\u5462\uFF1F\u5176\u5B9E\u5728\u524D\u9762\u535A\u5BA2 LZ \u5DF2\u7ECF\u63D0\u5230\u8FC7\u4E86\uFF0C\u5728 <code>#doGetBean(...)</code> \u65B9\u6CD5\u4E2D\uFF0C\u5904\u7406\u4E0D\u540C scope \u65F6\uFF0C\u5982\u679C\u662F singleton\uFF0C\u5219\u8C03\u7528 <code>#getSingleton(...)</code> \u65B9\u6CD5\uFF0C\u5982\u4E0B\u56FE\u6240\u793A\uFF1A</li></ul><p><img src="`+D+`" alt="image-20220512221632266"></p><p>\u6211\u4EEC\u5173\u6CE8 <code>#getSingleton(String beanName, ObjectFactory&lt;?&gt; singletonFactory)</code> \u65B9\u6CD5\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#676E95;">// AbstractBeanFactory.java</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getSingleton</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> beanName</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ObjectFactory</span><span style="color:#89DDFF;">&lt;</span><span style="color:#89DDFF;">?</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> singletonFactory</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    Assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">notNull</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Bean name must not be null</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">synchronized</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(this.</span><span style="color:#A6ACCD;">singletonObjects</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> singletonObject </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">singletonObjects</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">singletonObject </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;">//....</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">try</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                singletonObject </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> singletonFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getObject</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">                newSingleton </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;">//.....</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">newSingleton</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#82AAFF;">addSingleton</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> singletonObject</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> singletonObject</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>\u{1F608} \u6CE8\u610F\uFF0C\u6B64\u5904\u7684 <code>#getSingleton(String beanName, ObjectFactory&lt;?&gt; singletonFactory)</code> \u65B9\u6CD5\uFF0C\u5728 AbstractBeanFactory \u7C7B\u4E2D\u5B9E\u73B0\uFF0C\u548C <a href="http://svip.iocoder.cn/Spring/IoC-get-Bean-createBean-5/#" target="_blank" rel="noreferrer">\u300C2.1 getSingleton\u300D</a> <strong>\u4E0D\u540C</strong>\u3002</li></ul><p><strong>\u6211\u4EEC\u57FA\u672C\u4E0A\u53EF\u4EE5\u786E\u5B9A Spring \u89E3\u51B3\u5FAA\u73AF\u4F9D\u8D56\u7684\u65B9\u6848\u4E86</strong>\uFF1A</p><ul><li>Spring \u5728\u521B\u5EFA bean \u7684\u65F6\u5019\u5E76\u4E0D\u662F\u7B49\u5B83\u5B8C\u5168\u5B8C\u6210\uFF0C\u800C\u662F\u5728\u521B\u5EFA\u8FC7\u7A0B\u4E2D\u5C06\u521B\u5EFA\u4E2D\u7684 bean \u7684 ObjectFactory \u63D0\u524D\u66DD\u5149\uFF08\u5373\u52A0\u5165\u5230 <code>singletonFactories</code> \u7F13\u5B58\u4E2D\uFF09\u3002</li><li>\u8FD9\u6837\uFF0C\u4E00\u65E6\u4E0B\u4E00\u4E2A bean \u521B\u5EFA\u7684\u65F6\u5019\u9700\u8981\u4F9D\u8D56 bean \uFF0C\u5219\u76F4\u63A5\u4F7F\u7528 ObjectFactory \u7684 <code>#getObject()</code> \u65B9\u6CD5\u6765\u83B7\u53D6\u4E86\uFF0C\u4E5F\u5C31\u662F <a href="http://svip.iocoder.cn/Spring/IoC-get-Bean-createBean-5/#" target="_blank" rel="noreferrer">\u300C2.1 getSingleton\u300D</a> \u5C0F\u7ED3\u4E2D\u7684\u65B9\u6CD5\u4E2D\u7684\u4EE3\u7801\u7247\u6BB5\u4E86\u3002</li></ul><p>\u5230\u8FD9\u91CC\uFF0C\u5173\u4E8E Spring \u89E3\u51B3 bean \u5FAA\u73AF\u4F9D\u8D56\u5C31\u5DF2\u7ECF\u5206\u6790\u5B8C\u6BD5\u4E86\u3002\u6700\u540E\u6765\u63CF\u8FF0\u4E0B\u5C31\u4E0A\u9762\u90A3\u4E2A\u5FAA\u73AF\u4F9D\u8D56 Spring \u89E3\u51B3\u7684\u8FC7\u7A0B\uFF1A</p><ul><li>\u9996\u5148 A \u5B8C\u6210\u521D\u59CB\u5316\u7B2C\u4E00\u6B65\u5E76\u5C06\u81EA\u5DF1\u63D0\u524D\u66DD\u5149\u51FA\u6765\uFF08\u901A\u8FC7 ObjectFactory \u5C06\u81EA\u5DF1\u63D0\u524D\u66DD\u5149\uFF09\uFF0C\u5728\u521D\u59CB\u5316\u7684\u65F6\u5019\uFF0C\u53D1\u73B0\u81EA\u5DF1\u4F9D\u8D56\u5BF9\u8C61 B\uFF0C\u6B64\u65F6\u5C31\u4F1A\u53BB\u5C1D\u8BD5 get(B)\uFF0C\u8FD9\u4E2A\u65F6\u5019\u53D1\u73B0 B \u8FD8\u6CA1\u6709\u88AB\u521B\u5EFA\u51FA\u6765</li><li>\u7136\u540E B \u5C31\u8D70\u521B\u5EFA\u6D41\u7A0B\uFF0C\u5728 B \u521D\u59CB\u5316\u7684\u65F6\u5019\uFF0C\u540C\u6837\u53D1\u73B0\u81EA\u5DF1\u4F9D\u8D56 C\uFF0CC \u4E5F\u6CA1\u6709\u88AB\u521B\u5EFA\u51FA\u6765</li><li>\u8FD9\u4E2A\u65F6\u5019 C \u53C8\u5F00\u59CB\u521D\u59CB\u5316\u8FDB\u7A0B\uFF0C\u4F46\u662F\u5728\u521D\u59CB\u5316\u7684\u8FC7\u7A0B\u4E2D\u53D1\u73B0\u81EA\u5DF1\u4F9D\u8D56 A\uFF0C\u4E8E\u662F\u5C1D\u8BD5 get(A)\uFF0C\u8FD9\u4E2A\u65F6\u5019\u7531\u4E8E A \u5DF2\u7ECF\u6DFB\u52A0\u81F3\u7F13\u5B58\u4E2D\uFF08\u4E00\u822C\u90FD\u662F\u6DFB\u52A0\u81F3\u4E09\u7EA7\u7F13\u5B58 <code>singletonFactories</code> \uFF09\uFF0C\u901A\u8FC7 ObjectFactory \u63D0\u524D\u66DD\u5149\uFF0C\u6240\u4EE5\u53EF\u4EE5\u901A\u8FC7 <code>ObjectFactory#getObject()</code> \u65B9\u6CD5\u6765\u62FF\u5230 A \u5BF9\u8C61\uFF0CC \u62FF\u5230 A \u5BF9\u8C61\u540E\u987A\u5229\u5B8C\u6210\u521D\u59CB\u5316\uFF0C\u7136\u540E\u5C06\u81EA\u5DF1\u6DFB\u52A0\u5230\u4E00\u7EA7\u7F13\u5B58\u4E2D</li><li>\u56DE\u5230 B \uFF0CB \u4E5F\u53EF\u4EE5\u62FF\u5230 C \u5BF9\u8C61\uFF0C\u5B8C\u6210\u521D\u59CB\u5316\uFF0CA \u53EF\u4EE5\u987A\u5229\u62FF\u5230 B \u5B8C\u6210\u521D\u59CB\u5316\u3002\u5230\u8FD9\u91CC\u6574\u4E2A\u94FE\u8DEF\u5C31\u5DF2\u7ECF\u5B8C\u6210\u4E86\u521D\u59CB\u5316\u8FC7\u7A0B\u4E86</li></ul><blockquote><p><img src="`+y+'" alt="image-20220512222000668"></p></blockquote><p><img src="'+F+'" alt="	"></p><h4 id="ioc-\u63A7\u5236\u53CD\u8F6C" tabindex="-1">IOC \u63A7\u5236\u53CD\u8F6C <a class="header-anchor" href="#ioc-\u63A7\u5236\u53CD\u8F6C" aria-hidden="true">#</a></h4><blockquote><p>\u8F6C\u79FB\u521B\u5EFA\u5BF9\u8C61\u7684\u63A7\u5236\u6743\uFF0C\u5C06\u521B\u5EFA\u5BF9\u8C61\u7684\u63A7\u5236\u6743\u4ECE\u5F00\u53D1\u8005\u8F6C\u79FB\u5230\u4E86 Spring \u6846\u67B6</p><p><img src="'+A+`" alt="image-20220512203238024"></p><p>\u5728\u6CA1\u6709\u5F15\u5165 IoC \u7684\u65F6\u5019\uFF0C\u88AB\u6CE8\u5165\u7684\u5BF9\u8C61\u76F4\u63A5\u4F9D\u8D56\u4E8E\u88AB\u4F9D\u8D56\u7684\u5BF9\u8C61\uFF0C\u6709\u4E86 IoC \u540E\uFF0C\u4E24\u8005\u53CA\u5176\u4ED6\u4EEC\u7684\u5173\u7CFB\u90FD\u662F\u901A\u8FC7 Ioc Service Provider \u6765\u7EDF\u4E00\u7BA1\u7406\u7EF4\u62A4\u7684\u3002\u88AB\u6CE8\u5165\u7684\u5BF9\u8C61\u9700\u8981\u4EC0\u4E48\uFF0C\u76F4\u63A5\u8DDF IoC Service Provider \u6253\u58F0\u62DB\u547C\uFF0C\u540E\u8005\u5C31\u4F1A\u628A\u76F8\u5E94\u7684\u88AB\u4F9D\u8D56\u5BF9\u8C61\u6CE8\u5165\u5230\u88AB\u6CE8\u5165\u7684\u5BF9\u8C61\u4E2D\uFF0C\u4ECE\u800C\u8FBE\u5230 IoC Service Provider \u4E3A\u88AB\u6CE8\u5165\u5BF9\u8C61\u670D\u52A1\u7684\u76EE\u7684\u3002<strong>\u6240\u4EE5 IoC \u5C31\u662F\u8FD9\u4E48\u7B80\u5355\uFF01\u539F\u6765\u662F\u9700\u8981\u4EC0\u4E48\u4E1C\u897F\u81EA\u5DF1\u53BB\u62FF\uFF0C\u73B0\u5728\u662F\u9700\u8981\u4EC0\u4E48\u4E1C\u897F\u8BA9\u522B\u4EBA\uFF08IoC Service Provider\uFF09\u9001\u8FC7\u6765</strong></p><p>IoC \u4E3B\u8981\u7531 <code>spring-beans</code> \u548C <code>spring-context</code> \u9879\u76EE\uFF0C\u8FDB\u884C\u5B9E\u73B0\u3002</p></blockquote><h4 id="di-\u4F9D\u8D56\u6CE8\u5165" tabindex="-1">DI \u4F9D\u8D56\u6CE8\u5165 <a class="header-anchor" href="#di-\u4F9D\u8D56\u6CE8\u5165" aria-hidden="true">#</a></h4><blockquote><p>IoC Service Provider \u4E3A\u88AB\u6CE8\u5165\u5BF9\u8C61\u63D0\u4F9B\u88AB\u4F9D\u8D56\u5BF9\u8C61\u4E5F\u6709\u5982\u4E0B\u51E0\u79CD\u65B9\u5F0F\uFF1A<strong>\u6784\u9020\u65B9\u6CD5\u6CE8\u5165</strong>\u3001<strong>stter\u65B9\u6CD5\u6CE8\u5165</strong>\u3001<strong>\u63A5\u53E3\u6CE8\u5165</strong> \u4ECE\u5F62\u5F0F\u4E0A\u5206\u4E3A\uFF1A\u901A\u8FC7 xml \u7684\u6CE8\u5165\u65B9\u5F0F\u3001\u57FA\u4E8E\u6CE8\u89E3\u7684\u6CE8\u5165\u65B9\u5F0F</p></blockquote><h6 id="\u63A5\u53E3\u6CE8\u5165" tabindex="-1">\u63A5\u53E3\u6CE8\u5165 <a class="header-anchor" href="#\u63A5\u53E3\u6CE8\u5165" aria-hidden="true">#</a></h6><blockquote><p>\u5B83\u662F\u5728\u4E00\u4E2A\u63A5\u53E3\u4E2D\u5B9A\u4E49\u9700\u8981\u6CE8\u5165\u7684\u4FE1\u606F\uFF0C\u5E76\u901A\u8FC7\u63A5\u53E3\u5B8C\u6210\u6CE8\u5165\u3002</p></blockquote><h6 id="setter-\u6CE8\u5165" tabindex="-1">setter \u6CE8\u5165 <a class="header-anchor" href="#setter-\u6CE8\u5165" aria-hidden="true">#</a></h6><blockquote><p>\u5BF9\u4E8E JavaBean \u5BF9\u8C61\u800C\u8A00\uFF0C\u6211\u4EEC\u4E00\u822C\u90FD\u662F\u901A\u8FC7 getter \u548C setter \u65B9\u6CD5\u6765\u8BBF\u95EE\u548C\u8BBE\u7F6E\u5BF9\u8C61\u7684\u5C5E\u6027\u3002\u6240\u4EE5\uFF0C\u5F53\u524D\u5BF9\u8C61\u53EA\u9700\u8981\u4E3A\u5176\u6240\u4F9D\u8D56\u7684\u5BF9\u8C61\u63D0\u4F9B\u76F8\u5BF9\u5E94\u7684 setter \u65B9\u6CD5\uFF0C\u5C31\u53EF\u4EE5\u901A\u8FC7\u8BE5\u65B9\u6CD5\u5C06\u76F8\u5E94\u7684\u4F9D\u8D56\u5BF9\u8C61\u8BBE\u7F6E\u5230\u88AB\u6CE8\u5165\u5BF9\u8C61\u4E2D\u3002\u5982\u4E0B\uFF1A</p></blockquote><h6 id="\u6784\u9020\u5668\u6CE8\u5165" tabindex="-1">\u6784\u9020\u5668\u6CE8\u5165 <a class="header-anchor" href="#\u6784\u9020\u5668\u6CE8\u5165" aria-hidden="true">#</a></h6><blockquote><p>\u6784\u9020\u5668\u6CE8\u5165\uFF0C\u987E\u540D\u601D\u4E49\u5C31\u662F\u88AB\u6CE8\u5165\u7684\u5BF9\u8C61\u901A\u8FC7\u5728\u5176\u6784\u9020\u65B9\u6CD5\u4E2D\u58F0\u660E\u4F9D\u8D56\u5BF9\u8C61\u7684\u53C2\u6570\u5217\u8868\uFF0C\u8BA9\u5916\u90E8\u77E5\u9053\u5B83\u9700\u8981\u54EA\u4E9B\u4F9D\u8D56\u5BF9\u8C61\u3002</p></blockquote><h4 id="spring-\u7EDF\u4E00\u8D44\u6E90\u52A0\u8F7D\u7B56\u7565" tabindex="-1">Spring \u7EDF\u4E00\u8D44\u6E90\u52A0\u8F7D\u7B56\u7565 <a class="header-anchor" href="#spring-\u7EDF\u4E00\u8D44\u6E90\u52A0\u8F7D\u7B56\u7565" aria-hidden="true">#</a></h4><p>\u5728\u5B66 Java SE \u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u5B66\u4E60\u4E86\u4E00\u4E2A\u6807\u51C6\u7C7B <code>java.net.URL</code>\uFF0C\u8BE5\u7C7B\u5728 Java SE \u4E2D\u7684\u5B9A\u4F4D\u4E3A\u7EDF\u4E00\u8D44\u6E90\u5B9A\u4F4D\u5668\uFF08Uniform Resource Locator\uFF09\uFF0C\u4F46\u662F\u6211\u4EEC\u77E5\u9053\u5B83\u7684\u5B9E\u73B0\u57FA\u672C\u53EA\u9650\u4E8E\u7F51\u7EDC\u5F62\u5F0F\u53D1\u5E03\u7684\u8D44\u6E90\u7684\u67E5\u627E\u548C\u5B9A\u4F4D\u3002\u7136\u800C\uFF0C\u5B9E\u9645\u4E0A\u8D44\u6E90\u7684\u5B9A\u4E49\u6BD4\u8F83\u5E7F\u6CDB\uFF0C\u9664\u4E86\u7F51\u7EDC\u5F62\u5F0F\u7684\u8D44\u6E90\uFF0C\u8FD8\u6709\u4EE5\u4E8C\u8FDB\u5236\u5F62\u5F0F\u5B58\u5728\u7684\u3001\u4EE5\u6587\u4EF6\u5F62\u5F0F\u5B58\u5728\u7684\u3001\u4EE5\u5B57\u8282\u6D41\u5F62\u5F0F\u5B58\u5728\u7684\u7B49\u7B49\u3002\u800C\u4E14\u5B83\u53EF\u4EE5\u5B58\u5728\u4E8E\u4EFB\u4F55\u573A\u6240\uFF0C\u6BD4\u5982\u7F51\u7EDC\u3001\u6587\u4EF6\u7CFB\u7EDF\u3001\u5E94\u7528\u7A0B\u5E8F\u4E2D\u3002\u6240\u4EE5 <code>java.net.URL</code> \u7684\u5C40\u9650\u6027\u8FEB\u4F7F Spring \u5FC5\u987B\u5B9E\u73B0\u81EA\u5DF1\u7684\u8D44\u6E90\u52A0\u8F7D\u7B56\u7565\uFF0C\u8BE5\u8D44\u6E90\u52A0\u8F7D\u7B56\u7565\u9700\u8981\u6EE1\u8DB3\u5982\u4E0B\u8981\u6C42\uFF1A</p><ol><li>\u804C\u80FD\u5212\u5206\u6E05\u695A\u3002\u8D44\u6E90\u7684\u5B9A\u4E49\u548C\u8D44\u6E90\u7684\u52A0\u8F7D\u5E94\u8BE5\u8981\u6709\u4E00\u4E2A\u6E05\u6670\u7684<strong>\u754C\u9650</strong>\uFF1B</li><li>\u7EDF\u4E00\u7684\u62BD\u8C61\u3002\u7EDF\u4E00\u7684\u8D44\u6E90<strong>\u5B9A\u4E49</strong>\u548C\u8D44\u6E90\u52A0\u8F7D<strong>\u7B56\u7565</strong>\u3002\u8D44\u6E90\u52A0\u8F7D\u540E\u8981\u8FD4\u56DE\u7EDF\u4E00\u7684\u62BD\u8C61\u7ED9\u5BA2\u6237\u7AEF\uFF0C\u5BA2\u6237\u7AEF\u8981\u5BF9\u8D44\u6E90\u8FDB\u884C\u600E\u6837\u7684\u5904\u7406\uFF0C\u5E94\u8BE5\u7531\u62BD\u8C61\u8D44\u6E90\u63A5\u53E3\u6765\u754C\u5B9A\u3002</li></ol><blockquote><p><a href="http://svip.iocoder.cn/Spring/IoC-load-Resource/" target="_blank" rel="noreferrer">http://svip.iocoder.cn/Spring/IoC-load-Resource/</a></p></blockquote><h4 id="spring-\u52A0\u8F7Dbeandefinition" tabindex="-1">Spring \u52A0\u8F7DBeanDefinition <a class="header-anchor" href="#spring-\u52A0\u8F7Dbeandefinition" aria-hidden="true">#</a></h4><p>\u4EE3\u7801\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#C792EA;">ClassPathResource</span><span style="color:#A6ACCD;"> resource </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ClassPathResource</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bean.xml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// &lt;1&gt;</span></span>
<span class="line"><span style="color:#C792EA;">DefaultListableBeanFactory</span><span style="color:#A6ACCD;"> factory </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">DefaultListableBeanFactory</span><span style="color:#89DDFF;">();</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// &lt;2&gt;</span></span>
<span class="line"><span style="color:#C792EA;">XmlBeanDefinitionReader</span><span style="color:#A6ACCD;"> reader </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">XmlBeanDefinitionReader</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">factory</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// &lt;3&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">reader</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">loadBeanDefinitions</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">resource</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// &lt;4&gt;</span></span>
<span class="line"></span></code></pre></div><p>\u8FD9\u6BB5\u4EE3\u7801\u662F Spring \u4E2D\u7F16\u7A0B\u5F0F\u4F7F\u7528 IoC \u5BB9\u5668\uFF0C\u901A\u8FC7\u8FD9\u56DB\u6BB5\u7B80\u5355\u7684\u4EE3\u7801\uFF0C\u6211\u4EEC\u53EF\u4EE5\u521D\u6B65\u5224\u65AD IoC \u5BB9\u5668\u7684\u4F7F\u7528\u8FC7\u7A0B\u3002</p><ol><li>\u83B7\u53D6\u8D44\u6E90</li><li>\u83B7\u53D6 BeanFactory</li><li>\u6839\u636E\u65B0\u5EFA\u7684 BeanFactory \u521B\u5EFA\u4E00\u4E2A BeanDefinitionReader \u5BF9\u8C61\uFF0C\u8BE5 Reader \u5BF9\u8C61\u4E3A\u8D44\u6E90\u7684<strong>\u89E3\u6790\u5668</strong></li><li>\u88C5\u8F7D\u8D44\u6E90</li></ol><p>\u6574\u4E2A\u8FC7\u7A0B\u5C31\u5206\u4E3A\u4E09\u4E2A\u6B65\u9AA4\uFF1A\u8D44\u6E90\u5B9A\u4F4D\u3001\u88C5\u8F7D\u3001\u6CE8\u518C\uFF0C\u5982\u4E0B\uFF1A</p><p><img src="`+C+`" alt="\u6574\u4F53\u6B65\u9AA4"></p><ul><li><p><strong>\u8D44\u6E90\u5B9A\u4F4D</strong>\u3002\u6211\u4EEC\u4E00\u822C\u7528\u5916\u90E8\u8D44\u6E90\u6765\u63CF\u8FF0 Bean \u5BF9\u8C61\uFF0C\u6240\u4EE5\u5728\u521D\u59CB\u5316 IoC \u5BB9\u5668\u7684\u7B2C\u4E00\u6B65\u5C31\u662F\u9700\u8981\u5B9A\u4F4D\u8FD9\u4E2A\u5916\u90E8\u8D44\u6E90\u3002</p></li><li><p><strong>\u88C5\u8F7D</strong>\u3002\u88C5\u8F7D\u5C31\u662F BeanDefinition \u7684\u8F7D\u5165\u3002BeanDefinitionReader \u8BFB\u53D6\u3001\u89E3\u6790 Resource \u8D44\u6E90\uFF0C\u4E5F\u5C31\u662F\u5C06\u7528\u6237\u5B9A\u4E49\u7684 Bean \u8868\u793A\u6210 IoC \u5BB9\u5668\u7684\u5185\u90E8\u6570\u636E\u7ED3\u6784\uFF1ABeanDefinition \u3002</p><ul><li>\u5728 IoC \u5BB9\u5668\u5185\u90E8\u7EF4\u62A4\u7740\u4E00\u4E2A BeanDefinition Map \u7684\u6570\u636E\u7ED3\u6784</li><li>\u5728\u914D\u7F6E\u6587\u4EF6\u4E2D\u6BCF\u4E00\u4E2A <code>&lt;bean&gt;</code> \u90FD\u5BF9\u5E94\u7740\u4E00\u4E2A BeanDefinition \u5BF9\u8C61\u3002</li></ul></li><li><p><strong>\u6CE8\u518C</strong>\u3002\u5411 IoC \u5BB9\u5668\u6CE8\u518C\u5728\u7B2C\u4E8C\u6B65\u89E3\u6790\u597D\u7684 BeanDefinition\uFF0C\u8FD9\u4E2A\u8FC7\u7A0B\u662F\u901A\u8FC7 BeanDefinitionRegistry \u63A5\u53E3\u6765\u5B9E\u73B0\u7684\u3002\u5728 IoC \u5BB9\u5668\u5185\u90E8\u5176\u5B9E\u662F\u5C06\u7B2C\u4E8C\u4E2A\u8FC7\u7A0B\u89E3\u6790\u5F97\u5230\u7684 BeanDefinition \u6CE8\u5165\u5230\u4E00\u4E2A HashMap \u5BB9\u5668\u4E2D\uFF0CIoC \u5BB9\u5668\u5C31\u662F\u901A\u8FC7\u8FD9\u4E2A HashMap \u6765\u7EF4\u62A4\u8FD9\u4E9B BeanDefinition \u7684\u3002</p><ul><li>\u5728\u8FD9\u91CC\u9700\u8981\u6CE8\u610F\u7684\u4E00\u70B9\u662F\u8FD9\u4E2A\u8FC7\u7A0B\u5E76\u6CA1\u6709\u5B8C\u6210\u4F9D\u8D56\u6CE8\u5165\uFF08Bean \u521B\u5EFA\uFF09\uFF0CBean \u521B\u5EFA\u662F\u53D1\u751F\u5728\u5E94\u7528\u7B2C\u4E00\u6B21\u8C03\u7528 <code>#getBean(...)</code> \u65B9\u6CD5\uFF0C\u5411\u5BB9\u5668\u7D22\u8981 Bean \u65F6\u3002</li><li>\u5F53\u7136\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u8BBE\u7F6E\u9884\u5904\u7406\uFF0C\u5373\u5BF9\u67D0\u4E2A Bean \u8BBE\u7F6E <code>lazyinit = false</code> \u5C5E\u6027\uFF0C\u90A3\u4E48\u8FD9\u4E2A Bean \u7684\u4F9D\u8D56\u6CE8\u5165\u5C31\u4F1A\u5728\u5BB9\u5668\u521D\u59CB\u5316\u7684\u65F6\u5019\u5B8C\u6210\u3002</li></ul></li></ul><h5 id="_1-loadbeandefinitions" tabindex="-1">1. loadBeanDefinitions <a class="header-anchor" href="#_1-loadbeandefinitions" aria-hidden="true">#</a></h5><p>\u4E0A\u9762\u770B\u5230\u7684 <code>reader.loadBeanDefinitions(resource)</code> \u4EE3\u7801\uFF0C\u624D\u662F\u52A0\u8F7D\u8D44\u6E90\u7684\u771F\u6B63\u5B9E\u73B0\uFF0C\u6240\u4EE5\u6211\u4EEC\u76F4\u63A5\u4ECE\u8BE5\u65B9\u6CD5\u5165\u624B\u3002\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#676E95;">// XmlBeanDefinitionReader.java</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">loadBeanDefinitions</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Resource</span><span style="color:#A6ACCD;"> resource</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> throws BeanDefinitionStoreException </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">loadBeanDefinitions</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">EncodedResource</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">resource</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>\u4ECE\u6307\u5B9A\u7684 xml \u6587\u4EF6\u52A0\u8F7D Bean Definition \uFF0C\u8FD9\u91CC\u4F1A\u5148\u5BF9 Resource \u8D44\u6E90\u5C01\u88C5\u6210 <code>org.springframework.core.io.support.EncodedResource</code> \u5BF9\u8C61\u3002\u8FD9\u91CC\u4E3A\u4EC0\u4E48\u9700\u8981\u5C06 Resource \u5C01\u88C5\u6210 EncodedResource \u5462\uFF1F\u4E3B\u8981\u662F\u4E3A\u4E86\u5BF9 Resource \u8FDB\u884C\u7F16\u7801\uFF0C\u4FDD\u8BC1\u5185\u5BB9\u8BFB\u53D6\u7684\u6B63\u786E\u6027\u3002</li><li>\u7136\u540E\uFF0C\u518D\u8C03\u7528 <code>#loadBeanDefinitions(EncodedResource encodedResource)</code> \u65B9\u6CD5\uFF0C\u6267\u884C\u771F\u6B63\u7684\u903B\u8F91\u5B9E\u73B0\u3002</li></ul><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * \u5F53\u524D\u7EBF\u7A0B\uFF0C\u6B63\u5728\u52A0\u8F7D\u7684 EncodedResource \u96C6\u5408\u3002</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">final</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ThreadLocal</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">Set</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">EncodedResource</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> resourcesCurrentlyBeingLoaded </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">NamedThreadLocal</span><span style="color:#89DDFF;">&lt;&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">XML bean definition resources currently being loaded</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">loadBeanDefinitions</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">EncodedResource</span><span style="color:#A6ACCD;"> encodedResource</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> throws BeanDefinitionStoreException </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	Assert</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">notNull</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">encodedResource</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EncodedResource must not be null</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isTraceEnabled</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">trace</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Loading XML bean definitions from </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> encodedResource</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// &lt;1&gt; \u83B7\u53D6\u5DF2\u7ECF\u52A0\u8F7D\u8FC7\u7684\u8D44\u6E90</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">Set</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">EncodedResource</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> currentResources </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">resourcesCurrentlyBeingLoaded</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">currentResources </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		currentResources </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">HashSet</span><span style="color:#89DDFF;">&lt;&gt;(</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">resourcesCurrentlyBeingLoaded</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">currentResources</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#A6ACCD;">currentResources</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">encodedResource</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// \u5C06\u5F53\u524D\u8D44\u6E90\u52A0\u5165\u8BB0\u5F55\u4E2D\u3002\u5982\u679C\u5DF2\u5B58\u5728\uFF0C\u629B\u51FA\u5F02\u5E38</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">throw</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BeanDefinitionStoreException</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Detected cyclic loading of </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> encodedResource </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> - check your import definitions!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">try</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">		</span><span style="color:#676E95;">// &lt;2&gt; \u4ECE EncodedResource \u83B7\u53D6\u5C01\u88C5\u7684 Resource \uFF0C\u5E76\u4ECE Resource \u4E2D\u83B7\u53D6\u5176\u4E2D\u7684 InputStream</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#C792EA;">InputStream</span><span style="color:#A6ACCD;"> inputStream </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> encodedResource</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getResource</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">getInputStream</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">try</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#C792EA;">InputSource</span><span style="color:#A6ACCD;"> inputSource </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">InputSource</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">inputStream</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">encodedResource</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getEncoding</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// \u8BBE\u7F6E\u7F16\u7801</span></span>
<span class="line"><span style="color:#A6ACCD;">				inputSource</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setEncoding</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">encodedResource</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getEncoding</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">			</span><span style="color:#676E95;">// \u6838\u5FC3\u903B\u8F91\u90E8\u5206\uFF0C\u6267\u884C\u52A0\u8F7D BeanDefinition</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">doLoadBeanDefinitions</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">inputSource</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> encodedResource</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getResource</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">finally</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			inputStream</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">catch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">IOException</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">ex</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">throw</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BeanDefinitionStoreException</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">IOException parsing XML document from </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> encodedResource</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getResource</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> ex</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">finally</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">		</span><span style="color:#676E95;">// \u4ECE\u7F13\u5B58\u4E2D\u5254\u9664\u8BE5\u8D44\u6E90 &lt;3&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">		currentResources</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">encodedResource</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">currentResources</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isEmpty</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">resourcesCurrentlyBeingLoaded</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>&lt;1&gt;\u5904\uFF0C\u901A\u8FC7<code>resourcesCurrentlyBeingLoaded.get()</code>\u4EE3\u7801\uFF0C\u6765\u83B7\u53D6\u5DF2\u7ECF\u52A0\u8F7D\u8FC7\u7684\u8D44\u6E90\uFF0C\u7136\u540E\u5C06<code>encodedResource</code>\u52A0\u5165\u5176\u4E2D\uFF0C\u5982\u679C<code>resourcesCurrentlyBeingLoaded</code>\u4E2D\u5DF2\u7ECF\u5B58\u5728\u8BE5\u8D44\u6E90\uFF0C\u5219\u629B\u51FA BeanDefinitionStoreException \u5F02\u5E38\u3002 <ul><li>\u4E3A\u4EC0\u4E48\u9700\u8981\u8FD9\u4E48\u505A\u5462\uFF1F\u7B54\u6848\u5728 <code>&quot;Detected cyclic loading&quot;</code> \uFF0C\u907F\u514D\u4E00\u4E2A EncodedResource \u5728\u52A0\u8F7D\u65F6\uFF0C\u8FD8\u6CA1\u52A0\u8F7D\u5B8C\u6210\uFF0C\u53C8\u52A0\u8F7D\u81EA\u8EAB\uFF0C\u4ECE\u800C\u5BFC\u81F4<strong>\u6B7B\u5FAA\u73AF</strong>\u3002</li><li>\u4E5F\u56E0\u6B64\uFF0C\u5728 <code>&lt;3&gt;</code> \u5904\uFF0C\u5F53\u4E00\u4E2A EncodedResource \u52A0\u8F7D\u5B8C\u6210\u540E\uFF0C\u9700\u8981\u4ECE\u7F13\u5B58\u4E2D\u5254\u9664\u3002</li></ul></li><li><code>&lt;2&gt;</code> \u5904\u7406\uFF0C\u4ECE <code>encodedResource</code> \u83B7\u53D6\u5C01\u88C5\u7684 Resource \u8D44\u6E90\uFF0C\u5E76\u4ECE Resource \u4E2D\u83B7\u53D6\u76F8\u5E94\u7684 InputStream \uFF0C\u7136\u540E\u5C06 InputStream \u5C01\u88C5\u4E3A InputSource \uFF0C\u6700\u540E\u8C03\u7528 <code>#doLoadBeanDefinitions(InputSource inputSource, Resource resource)</code> \u65B9\u6CD5\uFF0C\u6267\u884C\u52A0\u8F7D Bean Definition \u7684\u771F\u6B63\u903B\u8F91\u3002</li></ul><h5 id="_2-doloadbeandefinitions" tabindex="-1">2. doLoadBeanDefinitions <a class="header-anchor" href="#_2-doloadbeandefinitions" aria-hidden="true">#</a></h5><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Actually load bean definitions from the specified XML file.</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#F78C6C;">@param</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">inputSource</span><span style="color:#676E95;"> the SAX InputSource to read from</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#F78C6C;">@param</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">resource</span><span style="color:#676E95;"> the resource descriptor for the XML file</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#F78C6C;">@return</span><span style="color:#676E95;"> the number of bean definitions found</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#F78C6C;">@throws</span><span style="color:#676E95;"> </span><span style="color:#FFCB6B;">BeanDefinitionStoreException</span><span style="color:#676E95;"> in case of loading or parsing errors</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#F78C6C;">@see</span><span style="color:#676E95;"> #doLoadDocument</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#F78C6C;">@see</span><span style="color:#676E95;"> #registerBeanDefinitions</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">doLoadBeanDefinitions</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">InputSource</span><span style="color:#A6ACCD;"> inputSource</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Resource</span><span style="color:#A6ACCD;"> resource</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		throws BeanDefinitionStoreException </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">try</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">		</span><span style="color:#676E95;">// &lt;1&gt; \u83B7\u53D6 XML Document \u5B9E\u4F8B</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#C792EA;">Document</span><span style="color:#A6ACCD;"> doc </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">doLoadDocument</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">inputSource</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> resource</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">		</span><span style="color:#676E95;">// &lt;2&gt; \u6839\u636E Document \u5B9E\u4F8B\uFF0C\u6CE8\u518C Bean \u4FE1\u606F</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> count </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">registerBeanDefinitions</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> resource</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isDebugEnabled</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">debug</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Loaded </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> count </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> bean definitions from </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> resource</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> count</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">catch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">BeanDefinitionStoreException</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">ex</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">throw</span><span style="color:#A6ACCD;"> ex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">catch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">SAXParseException</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">ex</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">throw</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">XmlBeanDefinitionStoreException</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">resource</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getDescription</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Line </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> ex</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getLineNumber</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> in XML document from </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> resource </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> is invalid</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ex</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">catch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">SAXException</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">ex</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">throw</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">XmlBeanDefinitionStoreException</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">resource</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getDescription</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">XML document from </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> resource </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> is invalid</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ex</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">catch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ParserConfigurationException</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">ex</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">throw</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BeanDefinitionStoreException</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">resource</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getDescription</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Parser configuration exception parsing XML from </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> resource</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ex</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">catch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">IOException</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">ex</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">throw</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BeanDefinitionStoreException</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">resource</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getDescription</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">IOException parsing XML document from </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> resource</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ex</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">catch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Throwable</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">ex</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">throw</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BeanDefinitionStoreException</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">resource</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getDescription</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Unexpected exception parsing XML document from </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> resource</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ex</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>\u5728 <code>&lt;1&gt;</code> \u5904\uFF0C\u8C03\u7528 <code>#doLoadDocument(InputSource inputSource, Resource resource)</code> \u65B9\u6CD5\uFF0C\u6839\u636E xml \u6587\u4EF6\uFF0C\u83B7\u53D6 Document \u5B9E\u4F8B\u3002</li><li>\u5728 <code>&lt;2&gt;</code> \u5904\uFF0C\u8C03\u7528 <code>#registerBeanDefinitions(Document doc, Resource resource)</code> \u65B9\u6CD5\uFF0C\u6839\u636E\u83B7\u53D6\u7684 Document \u5B9E\u4F8B\uFF0C\u6CE8\u518C Bean \u4FE1\u606F\u3002</li></ul><h6 id="_2-1-doloaddocument" tabindex="-1">2.1 doLoadDocument <a class="header-anchor" href="#_2-1-doloaddocument" aria-hidden="true">#</a></h6><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * \u83B7\u53D6 XML Document \u5B9E\u4F8B</span></span>
<span class="line"><span style="color:#676E95;"> *</span></span>
<span class="line"><span style="color:#676E95;"> * Actually load the specified document using the configured DocumentLoader.</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#F78C6C;">@param</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">inputSource</span><span style="color:#676E95;"> the SAX InputSource to read from</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#F78C6C;">@param</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">resource</span><span style="color:#676E95;"> the resource descriptor for the XML file</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#F78C6C;">@return</span><span style="color:#676E95;"> the DOM Document</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#F78C6C;">@throws</span><span style="color:#676E95;"> </span><span style="color:#FFCB6B;">Exception</span><span style="color:#676E95;"> when thrown from the DocumentLoader</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#F78C6C;">@see</span><span style="color:#676E95;"> #setDocumentLoader</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#F78C6C;">@see</span><span style="color:#676E95;"> DocumentLoader#loadDocument</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Document</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">doLoadDocument</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">InputSource</span><span style="color:#A6ACCD;"> inputSource</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Resource</span><span style="color:#A6ACCD;"> resource</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> throws Exception </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">documentLoader</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">loadDocument</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">inputSource</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getEntityResolver</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">errorHandler</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#82AAFF;">getValidationModeForResource</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">resource</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">isNamespaceAware</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ol><li>\u8C03\u7528 <code>#getValidationModeForResource(Resource resource)</code> \u65B9\u6CD5\uFF0C\u83B7\u53D6\u6307\u5B9A\u8D44\u6E90\uFF08xml\uFF09\u7684<strong>\u9A8C\u8BC1\u6A21\u5F0F</strong>\u3002</li><li>\u8C03\u7528 <code>DocumentLoader#loadDocument(InputSource inputSource, EntityResolver entityResolver, ErrorHandler errorHandler, int validationMode, boolean namespaceAware)</code> \u65B9\u6CD5\uFF0C\u83B7\u53D6 XML Document \u5B9E\u4F8B\u3002</li></ol><h6 id="_2-2-registerbeandefinitions" tabindex="-1">2.2 registerBeanDefinitions <a class="header-anchor" href="#_2-2-registerbeandefinitions" aria-hidden="true">#</a></h6><p>\u83B7\u53D6 XML Document \u5BF9\u8C61\u540E\uFF0C\u4F1A\u6839\u636E\u8BE5\u5BF9\u8C61\u548C Resource \u8D44\u6E90\u5BF9\u8C61\u8C03\u7528 <code>XmlBeanDefinitionReader#registerBeanDefinitions(Document doc, Resource resource)</code> \u65B9\u6CD5\uFF0C\u5F00\u59CB\u6CE8\u518C BeanDefinitions \u4E4B\u65C5\u3002\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#676E95;">// AbstractBeanDefinitionReader.java</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">final</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">BeanDefinitionRegistry</span><span style="color:#A6ACCD;"> registry</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// XmlBeanDefinitionReader.java</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">registerBeanDefinitions</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Document</span><span style="color:#A6ACCD;"> doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Resource</span><span style="color:#A6ACCD;"> resource</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> throws BeanDefinitionStoreException </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// &lt;1&gt; \u521B\u5EFA BeanDefinitionDocumentReader \u5BF9\u8C61</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">BeanDefinitionDocumentReader</span><span style="color:#A6ACCD;"> documentReader </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createBeanDefinitionDocumentReader</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// &lt;2&gt; \u83B7\u53D6\u5DF2\u6CE8\u518C\u7684 BeanDefinition \u6570\u91CF</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> countBefore </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getRegistry</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">getBeanDefinitionCount</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// &lt;3&gt; \u521B\u5EFA XmlReaderContext \u5BF9\u8C61</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// &lt;4&gt; \u6CE8\u518C BeanDefinition</span></span>
<span class="line"><span style="color:#A6ACCD;">	documentReader</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">registerBeanDefinitions</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createReaderContext</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">resource</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// \u8BA1\u7B97\u65B0\u6CE8\u518C\u7684 BeanDefinition \u6570\u91CF</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getRegistry</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">getBeanDefinitionCount</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> countBefore</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li><p><code>&lt;1&gt;</code> \u5904\uFF0C\u8C03\u7528 <code>#createBeanDefinitionDocumentReader()</code> \u65B9\u6CD5\uFF0C\u5B9E\u4F8B\u5316 BeanDefinitionDocumentReader \u5BF9\u8C61\u3002</p></li><li><p><code>&lt;2&gt;</code> \u5904\uFF0C\u8C03\u7528 <code>BeanDefinitionRegistry#getBeanDefinitionCount()</code> \u65B9\u6CD5\uFF0C\u83B7\u53D6<strong>\u5DF2\u6CE8\u518C</strong>\u7684 BeanDefinition \u6570\u91CF\u3002</p></li><li><p><code>&lt;3&gt;</code> \u5904\uFF0C\u8C03\u7528 <code>#createReaderContext(Resource resource)</code> \u65B9\u6CD5\uFF0C\u521B\u5EFA XmlReaderContext \u5BF9\u8C61\u3002</p></li><li><p><code>&lt;4&gt;</code> \u5904\uFF0C\u8C03\u7528 <code>BeanDefinitionDocumentReader#registerBeanDefinitions(Document doc, XmlReaderContext readerContext)</code> \u65B9\u6CD5\uFF0C\u8BFB\u53D6 XML \u5143\u7D20\uFF0C\u6CE8\u518C BeanDefinition \u4EEC\u3002</p></li><li><p><code>&lt;5&gt;</code> \u5904\uFF0C\u8BA1<strong>\u7B97\u65B0\u6CE8\u518C</strong>\u7684 BeanDefinition \u6570\u91CF\u3002</p></li></ul><p><strong>createBeanDefinitionDocumentReader</strong></p><p><code>#createBeanDefinitionDocumentReader()</code>\uFF0C\u5B9E\u4F8B\u5316 BeanDefinitionDocumentReader \u5BF9\u8C61\u3002\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * documentReader \u7684\u7C7B</span></span>
<span class="line"><span style="color:#676E95;"> *</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#F78C6C;">@see</span><span style="color:#676E95;"> #createBeanDefinitionDocumentReader() </span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Class</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">BeanDefinitionDocumentReader</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> documentReaderClass </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> DefaultBeanDefinitionDocumentReader</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">BeanDefinitionDocumentReader</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createBeanDefinitionDocumentReader</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> BeanUtils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">instantiateClass</span><span style="color:#89DDFF;">(this.</span><span style="color:#A6ACCD;">documentReaderClass</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li><code>documentReaderClass</code> \u7684\u9ED8\u8BA4\u503C\u4E3A <code>DefaultBeanDefinitionDocumentReader.class</code> \u3002\u5173\u4E8E\u5B83\uFF0C\u6211\u4EEC\u5728\u540E\u7EED\u7684\u6587\u7AE0\uFF0C\u8BE6\u7EC6\u89E3\u6790\u3002</li></ul><p><strong>registerBeanDefinitions</strong></p><p><code>BeanDefinitionDocumentReader#registerBeanDefinitions(Document doc, XmlReaderContext readerContext)</code> \u65B9\u6CD5\uFF0C\u6CE8\u518C BeanDefinition \uFF0C\u5728\u63A5\u53E3 BeanDefinitionDocumentReader \u4E2D\u5B9A\u4E49\u3002\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">BeanDefinitionDocumentReader</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">	/**</span></span>
<span class="line"><span style="color:#676E95;">	 * Read bean definitions from the given DOM document and</span></span>
<span class="line"><span style="color:#676E95;">	 * register them with the registry in the given reader context.</span></span>
<span class="line"><span style="color:#676E95;">	 * </span><span style="color:#F78C6C;">@param</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">doc</span><span style="color:#676E95;"> the DOM document</span></span>
<span class="line"><span style="color:#676E95;">	 * </span><span style="color:#F78C6C;">@param</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">readerContext</span><span style="color:#676E95;"> the current context of the reader</span></span>
<span class="line"><span style="color:#676E95;">	 * (includes the target registry and the resource being parsed)</span></span>
<span class="line"><span style="color:#676E95;">	 * </span><span style="color:#F78C6C;">@throws</span><span style="color:#676E95;"> </span><span style="color:#FFCB6B;">BeanDefinitionStoreException</span><span style="color:#676E95;"> in case of parsing errors</span></span>
<span class="line"><span style="color:#676E95;">	 */</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">registerBeanDefinitions</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Document</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">XmlReaderContext</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">readerContext</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">BeanDefinitionStoreException</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><strong>\u4ECE\u7ED9\u5B9A\u7684 Document \u5BF9\u8C61\u4E2D\u89E3\u6790\u5B9A\u4E49\u7684 BeanDefinition \u5E76\u5C06\u4ED6\u4EEC\u6CE8\u518C\u5230\u6CE8\u518C\u8868\u4E2D</strong>\u3002\u65B9\u6CD5\u63A5\u6536\u4E24\u4E2A\u53C2\u6570\uFF1A</p><ul><li><code>doc</code> \u65B9\u6CD5\u53C2\u6570\uFF1A\u5F85\u89E3\u6790\u7684 Document \u5BF9\u8C61\u3002</li><li><code>readerContext</code> \u65B9\u6CD5\uFF0C\u89E3\u6790\u5668\u7684\u5F53\u524D\u4E0A\u4E0B\u6587\uFF0C\u5305\u62EC\u76EE\u6807\u6CE8\u518C\u8868\u548C\u88AB\u89E3\u6790\u7684\u8D44\u6E90\u3002\u5B83\u662F\u6839\u636E Resource \u6765\u521B\u5EFA\u7684\uFF0C\u89C1 <a href="http://svip.iocoder.cn/Spring/IoC-register-BeanDefinitions/#" target="_blank" rel="noreferrer">\u300C3. createReaderContext\u300D</a> \u3002</li></ul><p>\u8FD9\u91CC\u6D89\u53CA\u5230\u4E24\u4E2A\u91CD\u8981\u7684\u7EC4\u4EF6</p>`,95),j=s("p",null,"DefaultBeanDefinitionDocumentReader",-1),q=n(`<p>BeanDefinitionDocumentReader \u6709\u4E14\u53EA\u6709\u4E00\u4E2A\u9ED8\u8BA4\u5B9E\u73B0\u7C7B DefaultBeanDefinitionDocumentReader \u3002\u5B83\u5BF9 <code>#registerBeanDefinitions(...)</code> \u65B9\u6CD5\u7684\u5B9E\u73B0\u4EE3\u7801\u5982\u4E0B\uFF1A</p><p>DefaultBeanDefinitionDocumentReader \u5BF9\u8BE5\u65B9\u6CD5\u63D0\u4F9B\u4E86\u5B9E\u73B0\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Nullable</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">XmlReaderContext</span><span style="color:#A6ACCD;"> readerContext</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Nullable</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">BeanDefinitionParserDelegate</span><span style="color:#A6ACCD;"> delegate</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * This implementation parses bean definitions according to the &quot;spring-beans&quot; XSD</span></span>
<span class="line"><span style="color:#676E95;"> * (or DTD, historically).</span></span>
<span class="line"><span style="color:#676E95;"> * &lt;p&gt;Opens a DOM Document; then initializes the default settings</span></span>
<span class="line"><span style="color:#676E95;"> * specified at the {@code &lt;beans/&gt;} level; then parses the contained bean definitions.</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">registerBeanDefinitions</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Document</span><span style="color:#A6ACCD;"> doc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">XmlReaderContext</span><span style="color:#A6ACCD;"> readerContext</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">readerContext </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> readerContext</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// \u83B7\u5F97 XML Document Root Element</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// \u6267\u884C\u6CE8\u518C BeanDefinition</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">doRegisterBeanDefinitions</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">doc</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getDocumentElement</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Register each bean definition within the given root {@code &lt;beans/&gt;} element.</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SuppressWarnings</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">deprecation</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;">// for Environment.acceptsProfiles(String...)</span></span>
<span class="line"><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">doRegisterBeanDefinitions</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Element</span><span style="color:#A6ACCD;"> root</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Any nested &lt;beans&gt; elements will cause recursion in this method. In</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// order to propagate and preserve &lt;beans&gt; default-* attributes correctly,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// keep track of the current (parent) delegate, which may be null. Create</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// the new (child) delegate with a reference to the parent for fallback purposes,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// then ultimately reset this.delegate back to its original (parent) reference.</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// this behavior emulates a stack of delegates without actually necessitating one.</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// \u8BB0\u5F55\u8001\u7684 BeanDefinitionParserDelegate \u5BF9\u8C61</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">BeanDefinitionParserDelegate</span><span style="color:#A6ACCD;"> parent </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">delegate</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// &lt;1&gt; \u521B\u5EFA BeanDefinitionParserDelegate \u5BF9\u8C61\uFF0C\u5E76\u8FDB\u884C\u8BBE\u7F6E\u5230 delegate</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">delegate </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createDelegate</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">getReaderContext</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> root</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> parent</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// &lt;2&gt; \u68C0\u67E5 &lt;beans /&gt; \u6839\u6807\u7B7E\u7684\u547D\u540D\u7A7A\u95F4\u662F\u5426\u4E3A\u7A7A\uFF0C\u6216\u8005\u662F http://www.springframework.org/schema/beans</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(this.</span><span style="color:#A6ACCD;">delegate</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isDefaultNamespace</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// &lt;2.1&gt; \u5904\u7406 profile \u5C5E\u6027\u3002\u53EF\u53C2\u89C1\u300ASpring3\u81EA\u5B9A\u4E49\u73AF\u5883\u914D\u7F6E &lt;beans profile=&quot;&quot;&gt;\u300Bhttp://nassir.iteye.com/blog/1535799</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> profileSpec </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> root</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getAttribute</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">PROFILE_ATTRIBUTE</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">StringUtils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">hasText</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">profileSpec</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;">// &lt;2.2&gt; \u4F7F\u7528\u5206\u9694\u7B26\u5207\u5206\uFF0C\u53EF\u80FD\u6709\u591A\u4E2A profile \u3002</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> specifiedProfiles </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> StringUtils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">tokenizeToStringArray</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">                    profileSpec</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> BeanDefinitionParserDelegate</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MULTI_VALUE_ATTRIBUTE_DELIMITERS</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;">// &lt;2.3&gt; \u5982\u679C\u6240\u6709 profile \u90FD\u65E0\u6548\uFF0C\u5219\u4E0D\u8FDB\u884C\u6CE8\u518C</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;">// We cannot use Profiles.of(...) since profile expressions are not supported</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;">// in XML config. See SPR-12458 for details.</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#82AAFF;">getReaderContext</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">getEnvironment</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">acceptsProfiles</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">specifiedProfiles</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isDebugEnabled</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                    logger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">debug</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Skipped XML bean definition file due to specified profiles [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> profileSpec </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">                            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">] not matching: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getReaderContext</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">getResource</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// &lt;3&gt; \u89E3\u6790\u524D\u5904\u7406</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">preProcessXml</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// &lt;4&gt; \u89E3\u6790</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">parseBeanDefinitions</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">delegate</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// &lt;5&gt; \u89E3\u6790\u540E\u5904\u7406</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">postProcessXml</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// \u8BBE\u7F6E delegate \u56DE\u8001\u7684 BeanDefinitionParserDelegate \u5BF9\u8C61</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">delegate </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> parent</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><code>&lt;1&gt;</code> \u5904\uFF0C\u521B\u5EFA BeanDefinitionParserDelegate \u5BF9\u8C61\uFF0C\u5E76\u8FDB\u884C\u8BBE\u7F6E\u5230 <code>delegate</code> \u3002BeanDefinitionParserDelegate \u662F\u4E00\u4E2A\u91CD\u8981\u7684\u7C7B\uFF0C\u5B83\u8D1F\u8D23<strong>\u89E3\u6790 BeanDefinition</strong>\u3002\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">BeanDefinitionParserDelegate</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createDelegate</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">XmlReaderContext</span><span style="color:#A6ACCD;"> readerContext</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Element</span><span style="color:#A6ACCD;"> root</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Nullable</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">BeanDefinitionParserDelegate</span><span style="color:#A6ACCD;"> parentDelegate</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// \u521B\u5EFA BeanDefinitionParserDelegate \u5BF9\u8C61</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">BeanDefinitionParserDelegate</span><span style="color:#A6ACCD;"> delegate </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BeanDefinitionParserDelegate</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">readerContext</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// \u521D\u59CB\u5316\u9ED8\u8BA4</span></span>
<span class="line"><span style="color:#A6ACCD;">    delegate</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">initDefaults</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> parentDelegate</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> delegate</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,5),P=a("<2>"),w=s("code",null,"\u5904\uFF0C\u68C0\u67E5",-1),O=a("` "),_=s("strong",null,"\u6839",-1),I=a("\u6807\u7B7E\u7684\u547D\u540D\u7A7A\u95F4\u662F\u5426\u4E3A\u7A7A\uFF0C\u6216\u8005\u662F "),k=s("a",{href:"http://www.springframework.org/schema/beans",target:"_blank",rel:"noreferrer"},"http://www.springframework.org/schema/beans",-1),N=a(" \u3002"),L=n(`<ul><li><code>&lt;2.1&gt;</code> \u5904\uFF0C\u5224\u65AD\u662F\u5426 <code>&lt;beans /&gt;</code> \u4E0A\u914D\u7F6E\u4E86 <code>profile</code> \u5C5E\u6027\u3002\u53C2\u8003 <a href="http://nassir.iteye.com/blog/1535799" target="_blank" rel="noreferrer">\u300A\u300ASpring3\u81EA\u5B9A\u4E49\u73AF\u5883\u914D\u7F6E \u300B\u300B</a> \u3002</li><li><code>&lt;2.2&gt;</code> \u5904\uFF0C\u4F7F\u7528\u5206\u9694\u7B26\u5207\u5206\uFF0C\u53EF\u80FD\u6709<strong>\u591A\u4E2A</strong> profile \u3002</li><li><code>&lt;2.3&gt;</code> \u5904\uFF0C\u5224\u65AD\uFF0C\u5982\u679C\u6240\u6709 profile \u90FD\u65E0\u6548\uFF0C\u5219 <code>return</code> \u4E0D\u8FDB\u884C\u6CE8\u518C\u3002</li></ul><p><code>&lt;4&gt;</code> \u5904\uFF0C\u8C03\u7528 <code>#parseBeanDefinitions(Element root, BeanDefinitionParserDelegate delegate)</code> \u65B9\u6CD5\uFF0C\u8FDB\u884C\u89E3\u6790\u903B\u8F91\u3002\u8BE6\u7EC6\u89E3\u6790\uFF0C\u89C1 <a href="http://svip.iocoder.cn/Spring/IoC-register-BeanDefinitions/#" target="_blank" rel="noreferrer">\u300C3.1 parseBeanDefinitions\u300D</a> \u3002</p><p><code>&lt;3&gt;</code> / <code>&lt;5&gt;</code> \u5904\uFF0C\u89E3\u6790<strong>\u524D\u540E</strong>\u7684\u5904\u7406\uFF0C\u76EE\u524D\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u90FD\u662F\u7A7A\u5B9E\u73B0\uFF0C\u4EA4\u7531\u5B50\u7C7B\u6765\u5B9E\u73B0\u3002\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">protected void preProcessXml(Element root) {}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">protected void postProcessXml(Element root) {}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,4),T=n(`<li><p>parseBeanDefinitions</p><ul><li><p><code>#parseBeanDefinitions(Element root, BeanDefinitionParserDelegate delegate)</code> \u65B9\u6CD5\uFF0C\u8FDB\u884C\u89E3\u6790\u903B\u8F91\u3002\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Parse the elements at the root level in the document:</span></span>
<span class="line"><span style="color:#676E95;"> * &quot;import&quot;, &quot;alias&quot;, &quot;bean&quot;.</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#F78C6C;">@param</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">root</span><span style="color:#676E95;"> the DOM root element of the document</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">parseBeanDefinitions</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Element</span><span style="color:#A6ACCD;"> root</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">BeanDefinitionParserDelegate</span><span style="color:#A6ACCD;"> delegate</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// &lt;1&gt; \u5982\u679C\u6839\u8282\u70B9\u4F7F\u7528\u9ED8\u8BA4\u547D\u540D\u7A7A\u95F4\uFF0C\u6267\u884C\u9ED8\u8BA4\u89E3\u6790</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">delegate</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isDefaultNamespace</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// \u904D\u5386\u5B50\u8282\u70B9</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">NodeList</span><span style="color:#A6ACCD;"> nl </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> root</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getChildNodes</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> nl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getLength</span><span style="color:#89DDFF;">();</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">Node</span><span style="color:#A6ACCD;"> node </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> nl</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">item</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">node </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> Element</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#C792EA;">Element</span><span style="color:#A6ACCD;"> ele </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Element</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> node</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">                </span><span style="color:#676E95;">// &lt;1&gt; \u5982\u679C\u8BE5\u8282\u70B9\u4F7F\u7528\u9ED8\u8BA4\u547D\u540D\u7A7A\u95F4\uFF0C\u6267\u884C\u9ED8\u8BA4\u89E3\u6790</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">delegate</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isDefaultNamespace</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ele</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#82AAFF;">parseDefaultElement</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ele</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> delegate</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">                </span><span style="color:#676E95;">// \u5982\u679C\u8BE5\u8282\u70B9\u975E\u9ED8\u8BA4\u547D\u540D\u7A7A\u95F4\uFF0C\u6267\u884C\u81EA\u5B9A\u4E49\u89E3\u6790</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                    delegate</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parseCustomElement</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ele</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// &lt;2&gt; \u5982\u679C\u6839\u8282\u70B9\u975E\u9ED8\u8BA4\u547D\u540D\u7A7A\u95F4\uFF0C\u6267\u884C\u81EA\u5B9A\u4E49\u89E3\u6790</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        delegate</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parseCustomElement</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li><p>Spring \u6709\u4E24\u79CDBean \u58F0\u660E\u65B9\u5F0F\uFF1A</p><ul><li>\u914D\u7F6E\u6587\u4EF6\u5F0F\u58F0\u660E\uFF1A<code>&lt;bean id=&quot;studentService&quot; class=&quot;org.springframework.core.StudentService&quot; /&gt;</code> \u3002\u5BF9\u5E94 <code>&lt;1&gt;</code> \u5904\u3002</li><li>\u81EA\u5B9A\u4E49\u6CE8\u89E3\u65B9\u5F0F\uFF1A<code>&lt;tx:annotation-driven&gt;</code> \u3002\u5BF9\u5E94 <code>&lt;2&gt;</code> \u5904\u3002</li></ul><p><code>&lt;1&gt;</code> \u5904\uFF0C\u5982\u679C<strong>\u6839</strong>\u8282\u70B9\u6216<strong>\u5B50</strong>\u8282\u70B9<strong>\u4F7F\u7528</strong>\u9ED8\u8BA4\u547D\u540D\u7A7A\u95F4\uFF0C\u8C03\u7528 <code>#parseDefaultElement(Element ele, BeanDefinitionParserDelegate delegate)</code> \u65B9\u6CD5\uFF0C\u6267\u884C\u9ED8\u8BA4\u89E3\u6790\u3002\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">parseDefaultElement</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Element</span><span style="color:#A6ACCD;"> ele</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">BeanDefinitionParserDelegate</span><span style="color:#A6ACCD;"> delegate</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">delegate</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">nodeNameEquals</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ele</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> IMPORT_ELEMENT</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// import</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#82AAFF;">importBeanDefinitionResource</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ele</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">delegate</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">nodeNameEquals</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ele</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ALIAS_ELEMENT</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// alias</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#82AAFF;">processAliasRegistration</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ele</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">delegate</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">nodeNameEquals</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ele</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> BEAN_ELEMENT</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// bean</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#82AAFF;">processBeanDefinition</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ele</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> delegate</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">delegate</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">nodeNameEquals</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ele</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> NESTED_BEANS_ELEMENT</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// beans</span></span>
<span class="line"><span style="color:#89DDFF;">		</span><span style="color:#676E95;">// recurse</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#82AAFF;">doRegisterBeanDefinitions</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ele</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><code>&lt;2&gt;</code> \u5904\uFF0C\u5982\u679C<strong>\u6839</strong>\u8282\u70B9\u6216<strong>\u5B50</strong>\u8282\u70B9<strong>\u4E0D\u4F7F\u7528</strong>\u9ED8\u8BA4\u547D\u540D\u7A7A\u95F4\uFF0C\u8C03\u7528 <code>BeanDefinitionParserDelegate#parseCustomElement(Element ele)</code> \u65B9\u6CD5\uFF0C\u6267\u884C<strong>\u81EA\u5B9A\u4E49</strong>\u89E3\u6790\u3002</p></li></ul></li></ul></li>`,1),M=n(`<p><strong>createBeanDefinitionDocumentReader</strong></p><p><code>#createReaderContext(Resource resource)</code> \u65B9\u6CD5\uFF0C\u521B\u5EFA XmlReaderContext \u5BF9\u8C61\u3002\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ProblemReporter</span><span style="color:#A6ACCD;"> problemReporter </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">FailFastProblemReporter</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ReaderEventListener</span><span style="color:#A6ACCD;"> eventListener </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">EmptyReaderEventListener</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">SourceExtractor</span><span style="color:#A6ACCD;"> sourceExtractor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">NullSourceExtractor</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Nullable</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">NamespaceHandlerResolver</span><span style="color:#A6ACCD;"> namespaceHandlerResolver</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Create the {@link XmlReaderContext} to pass over to the document reader.</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">XmlReaderContext</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createReaderContext</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Resource</span><span style="color:#A6ACCD;"> resource</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">XmlReaderContext</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">resource</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">problemReporter</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">eventListener</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">sourceExtractor</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getNamespaceHandlerResolver</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><code>XmlBeanDefinitionReader#doLoadBeanDefinitions(InputSource inputSource, Resource resource)</code> \u65B9\u6CD5\u4E2D\uFF0C\u505A\u7684\u4E09\u4EF6\u4E8B\u60C5\u5DF2\u7ECF\u5168\u90E8\u5206\u6790\u5B8C\u6BD5\uFF0C\u4E0B\u9762\u5C06\u5BF9 <strong>BeanDefinition \u7684\u89E3\u6790\u8FC7\u7A0B</strong>\u505A\u8BE6\u7EC6\u5206\u6790\u8BF4\u660E\u3002</p><p>\u53E6\u5916\uFF0C<code>XmlBeanDefinitionReader#doLoadBeanDefinitions(InputSource inputSource, Resource resource)</code> \u65B9\u6CD5\uFF0C\u6574\u4F53\u65F6\u5E8F\u56FE\u5982\u4E0B\uFF1A</p><p><img src="`+i+`" alt="\u65F6\u5E8F\u56FE"></p><ul><li>\u7EA2\u6846\u90E8\u5206\uFF0C\u5C31\u662F <strong>BeanDefinition \u7684\u89E3\u6790\u8FC7\u7A0B</strong>\u3002</li></ul><h4 id="\u6DF1\u5165\u5206\u6790-beanpostprocessor" tabindex="-1">\u6DF1\u5165\u5206\u6790 BeanPostProcessor <a class="header-anchor" href="#\u6DF1\u5165\u5206\u6790-beanpostprocessor" aria-hidden="true">#</a></h4><blockquote><p>BeanPostProcessor \u7684\u4F5C\u7528\uFF1A\u5728 Bean \u5B8C\u6210\u5B9E\u4F8B\u5316\u540E\uFF0C\u5982\u679C\u6211\u4EEC\u9700\u8981\u5BF9\u5176\u8FDB\u884C\u4E00\u4E9B\u914D\u7F6E\u3001\u589E\u52A0\u4E00\u4E9B\u81EA\u5DF1\u7684\u5904\u7406\u903B\u8F91\uFF0C\u90A3\u4E48\u8BF7\u4F7F\u7528 BeanPostProcessor\u3002</p></blockquote><p>\u9996\u5148\u5B9A\u4E49\u4E00\u4E2A\u7C7B\uFF0C\u8BE5\u7C7B\u5B9E\u73B0 BeanPostProcessor \u63A5\u53E3\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">BeanPostProcessorTest</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">BeanPostProcessor</span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">postProcessBeforeInitialization</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">bean</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">BeansException</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Bean [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> beanName </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">] \u5F00\u59CB\u521D\u59CB\u5316</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// \u8FD9\u91CC\u4E00\u5B9A\u8981\u8FD4\u56DE bean\uFF0C\u4E0D\u80FD\u8FD4\u56DE null</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> bean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">postProcessAfterInitialization</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">bean</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">beanName</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">BeansException</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Bean [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> beanName </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">] \u5B8C\u6210\u521D\u59CB\u5316</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> bean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">display</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello BeanPostProcessor!!!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u6D4B\u8BD5\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#C792EA;">ClassPathResource</span><span style="color:#A6ACCD;"> resource </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ClassPathResource</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">spring.xml</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">DefaultListableBeanFactory</span><span style="color:#A6ACCD;"> factory </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">DefaultListableBeanFactory</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#C792EA;">XmlBeanDefinitionReader</span><span style="color:#A6ACCD;"> reader </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">XmlBeanDefinitionReader</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">factory</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">reader</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">loadBeanDefinitions</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">resource</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">BeanPostProcessorTest</span><span style="color:#A6ACCD;"> test </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">BeanPostProcessorTest</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> factory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getBean</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">beanPostProcessorTest</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">test</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">display</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span></code></pre></div><p>BeanPostProcessor \u53EF\u4EE5\u7406\u89E3\u4E3A\u662F Spring \u7684\u4E00\u4E2A\u5DE5\u5382\u94A9\u5B50\uFF08\u5176\u5B9E Spring \u63D0\u4F9B\u4E00\u7CFB\u5217\u7684\u94A9\u5B50\uFF0C\u5982 Aware \u3001InitializingBean\u3001DisposableBean\uFF09\uFF0C\u5B83\u662F Spring \u63D0\u4F9B\u7684\u5BF9\u8C61\u5B9E\u4F8B\u5316\u9636\u6BB5\u5F3A\u6709\u529B\u7684\u6269\u5C55\u70B9\uFF0C\u5141\u8BB8 Spring \u5728\u5B9E\u4F8B\u5316 bean \u9636\u6BB5\u5BF9\u5176\u8FDB\u884C\u5B9A\u5236\u5316\u4FEE\u6539\uFF0C\u6BD4\u8F83\u5E38\u89C1\u7684\u4F7F\u7528\u573A\u666F\u662F\u5904\u7406\u6807\u8BB0\u63A5\u53E3\u5B9E\u73B0\u7C7B\u6216\u8005\u4E3A\u5F53\u524D\u5BF9\u8C61\u63D0\u4F9B\u4EE3\u7406\u5B9E\u73B0\uFF08\u4F8B\u5982 AOP\uFF09\u3002</p><p>\u4E00\u822C\u666E\u901A\u7684 BeanFactory \u662F\u4E0D\u652F\u6301\u81EA\u52A8\u6CE8\u518C BeanPostProcessor \u7684\uFF0C\u9700\u8981\u6211\u4EEC\u624B\u52A8\u8C03\u7528 <code>#addBeanPostProcessor(BeanPostProcessor beanPostProcessor)</code> \u65B9\u6CD5\u8FDB\u884C\u6CE8\u518C\u3002\u6CE8\u518C\u540E\u7684 BeanPostProcessor \u9002\u7528\u4E8E\u6240\u6709\u8BE5 BeanFactory \u521B\u5EFA\u7684 bean\uFF0C\u4F46\u662F <strong>ApplicationContext \u53EF\u4EE5\u5728\u5176 bean \u5B9A\u4E49\u4E2D\u81EA\u52A8\u68C0\u6D4B\u6240\u6709\u7684 BeanPostProcessor \u5E76\u81EA\u52A8\u5B8C\u6210\u6CE8\u518C\uFF0C\u540C\u65F6\u5C06\u4ED6\u4EEC\u5E94\u7528\u5230\u968F\u540E\u521B\u5EFA\u7684\u4EFB\u4F55 Bean \u4E2D</strong>\u3002</p><p><code>#postProcessBeforeInitialization(Object bean, String beanName)</code> \u548C <code>#postProcessAfterInitialization(Object bean, String beanName)</code> \u4E24\u4E2A\u65B9\u6CD5\uFF0C\u90FD\u63A5\u6536\u4E00\u4E2A Object \u7C7B\u578B\u7684 <code>bean</code> \uFF0C\u4E00\u4E2A String \u7C7B\u578B\u7684 <code>beanName</code> \uFF0C\u5176\u4E2D <code>bean</code> \u662F\u5DF2\u7ECF\u5B9E\u4F8B\u5316\u4E86\u7684 <code>instanceBean</code> \uFF0C\u80FD\u62FF\u5230\u8FD9\u4E2A\u4F60\u662F\u4E0D\u662F\u53EF\u4EE5\u5BF9\u5B83\u4E3A\u6240\u6B32\u4E3A\u4E86\uFF1F \u8FD9\u4E24\u4E2A\u65B9\u6CD5\u662F\u521D\u59CB\u5316 <code>bean</code> \u7684\u524D\u540E\u7F6E\u5904\u7406\u5668\uFF0C\u4ED6\u4EEC\u5E94\u7528 <code>#invokeInitMethods(String beanName, final Object bean, RootBeanDefinition mbd)</code> \u65B9\u6CD5\u7684\u524D\u540E\u3002\u5982\u4E0B\u56FE\uFF1A</p><p><img src="`+d+'" alt="image-20220512223138893"></p><p><img src="'+u+'" alt="image-20220512223159371"></p><h4 id="bean-\u7684\u751F\u547D\u5468\u671F" tabindex="-1">bean \u7684\u751F\u547D\u5468\u671F <a class="header-anchor" href="#bean-\u7684\u751F\u547D\u5468\u671F" aria-hidden="true">#</a></h4><p><img src="'+g+'" alt="image-20220512223328166"></p><p>Spring Bean \u7684\u58F0\u660E\u5468\u671F\u8FC7\u7A0B\u5982\u4E0B\uFF08\u65B9\u6CD5\u7EA7\u522B\uFF09\uFF1A</p><ol><li>Spring \u5BB9\u5668\u6839\u636E\u5B9E\u4F8B\u5316\u7B56\u7565\u5BF9 Bean \u8FDB\u884C\u5B9E\u4F8B\u5316\u3002</li><li>\u5B9E\u4F8B\u5316\u5B8C\u6210\u540E\uFF0C\u5982\u679C\u8BE5 bean \u8BBE\u7F6E\u4E86\u4E00\u4E9B\u5C5E\u6027\u7684\u8BDD\uFF0C\u5219\u5229\u7528 set \u65B9\u6CD5\u8BBE\u7F6E\u4E00\u4E9B\u5C5E\u6027\u3002</li><li>\u5982\u679C\u8BE5 Bean \u5B9E\u73B0\u4E86 BeanNameAware \u63A5\u53E3\uFF0C\u5219\u8C03\u7528 <code>#setBeanName(String beanName)</code> \u65B9\u6CD5\u3002</li><li>\u5982\u679C\u8BE5 bean \u5B9E\u73B0\u4E86 BeanClassLoaderAware \u63A5\u53E3\uFF0C\u5219\u8C03\u7528 <code>setBeanClassLoader(ClassLoader classLoader)</code> \u65B9\u6CD5\u3002</li><li>\u5982\u679C\u8BE5 bean \u5B9E\u73B0\u4E86 BeanFactoryAware\u63A5\u53E3\uFF0C\u5219\u8C03\u7528 <code>setBeanFactory(BeanFactory beanFactory)</code> \u65B9\u6CD5\u3002</li><li>\u5982\u679C\u8BE5\u5BB9\u5668\u6CE8\u518C\u4E86 BeanPostProcessor\uFF0C\u5219\u4F1A\u8C03\u7528<code>#postProcessBeforeInitialization(Object bean, String beanName)</code> \u65B9\u6CD5,\u5B8C\u6210 bean \u524D\u7F6E\u5904\u7406</li><li>\u5982\u679C\u8BE5 bean \u5B9E\u73B0\u4E86 InitializingBean \u63A5\u53E3\uFF0C\u5219\u8C03\u7528<code>#afterPropertiesSet()</code> \u65B9\u6CD5\u3002</li><li>\u5982\u679C\u8BE5 bean \u914D\u7F6E\u4E86 <code>init-method</code> \u65B9\u6CD5\uFF0C\u5219\u8C03\u7528\u5176\u6307\u5B9A\u7684\u65B9\u6CD5\u3002</li><li>\u521D\u59CB\u5316\u5B8C\u6210\u540E\uFF0C\u5982\u679C\u8BE5\u5BB9\u5668\u6CE8\u518C\u4E86 BeanPostProcessor \u5219\u4F1A\u8C03\u7528 <code>#postProcessAfterInitialization(Object bean, String beanName)</code> \u65B9\u6CD5,\u5B8C\u6210 bean \u7684\u540E\u7F6E\u5904\u7406\u3002</li><li>\u5BF9\u8C61\u5B8C\u6210\u521D\u59CB\u5316\uFF0C\u5F00\u59CB\u65B9\u6CD5\u8C03\u7528\u3002</li><li>\u5728\u5BB9\u5668\u8FDB\u884C\u5173\u95ED\u4E4B\u524D\uFF0C\u5982\u679C\u8BE5 bean \u5B9E\u73B0\u4E86 DisposableBean \u63A5\u53E3\uFF0C\u5219\u8C03\u7528 <code>#destroy()</code> \u65B9\u6CD5\u3002</li><li>\u5728\u5BB9\u5668\u8FDB\u884C\u5173\u95ED\u4E4B\u524D\uFF0C\u5982\u679C\u8BE5 bean \u914D\u7F6E\u4E86 <code>destroy-method</code> \uFF0C\u5219\u8C03\u7528\u5176\u6307\u5B9A\u7684\u65B9\u6CD5\u3002</li><li>\u5230\u8FD9\u91CC\u4E00\u4E2A bean \u4E5F\u5C31\u5B8C\u6210\u4E86\u5B83\u7684\u4E00\u751F\u3002</li></ol><h2 id="\u7EC4\u4EF6\u7BC7" tabindex="-1">\u7EC4\u4EF6\u7BC7 <a class="header-anchor" href="#\u7EC4\u4EF6\u7BC7" aria-hidden="true">#</a></h2><p><img src="'+E+'" alt="\u7EC4\u4EF6\u7C7B\u56FE"></p><p>\u8BE5\u56FE\u4E3A ClassPathXmlApplicationContext \u7684\u7C7B\u7EE7\u627F\u4F53\u7CFB\u7ED3\u6784\uFF0C\u867D\u7136\u53EA\u6709\u4E00\u90E8\u5206\uFF0C\u4F46\u662F\u5B83\u57FA\u672C\u4E0A\u5305\u542B\u4E86 IoC \u4F53\u7CFB\u4E2D\u5927\u90E8\u5206\u7684\u6838\u5FC3\u7C7B\u548C\u63A5\u53E3\u3002</p><h4 id="resource-\u4F53\u7CFB" tabindex="-1">Resource \u4F53\u7CFB <a class="header-anchor" href="#resource-\u4F53\u7CFB" aria-hidden="true">#</a></h4><p><code>org.springframework.core.io.Resource</code>\uFF0C\u5BF9\u8D44\u6E90\u7684\u62BD\u8C61\u3002\u5B83\u7684\u6BCF\u4E00\u4E2A\u5B9E\u73B0\u7C7B\u90FD\u4EE3\u8868\u4E86\u4E00\u79CD\u8D44\u6E90\u7684\u8BBF\u95EE\u7B56\u7565\uFF0C\u5982 ClassPathResource\u3001RLResource\u3001FileSystemResource \u7B49\u3002<img src="'+b+'" alt="Resource \u7C7B\u56FE"></p><h5 id="resourceloader-\u4F53\u7CFB" tabindex="-1">ResourceLoader \u4F53\u7CFB <a class="header-anchor" href="#resourceloader-\u4F53\u7CFB" aria-hidden="true">#</a></h5><p>\u6709\u4E86\u8D44\u6E90\uFF0C\u5C31\u5E94\u8BE5\u6709\u8D44\u6E90\u52A0\u8F7D\uFF0CSpring \u5229\u7528 <code>org.springframework.core.io.ResourceLoader</code> \u6765\u8FDB\u884C\u7EDF\u4E00\u8D44\u6E90\u52A0\u8F7D\uFF0C\u7C7B\u56FE\u5982\u4E0B\uFF1A</p><p><img src="'+f+'" alt="ResourceLoader \u7C7B\u56FE"></p><h4 id="beanfactory-\u4F53\u7CFB" tabindex="-1">BeanFactory \u4F53\u7CFB <a class="header-anchor" href="#beanfactory-\u4F53\u7CFB" aria-hidden="true">#</a></h4><p><code>org.springframework.beans.factory.BeanFactory</code>\uFF0C\u662F\u4E00\u4E2A\u975E\u5E38\u7EAF\u7CB9\u7684 bean \u5BB9\u5668\uFF0C\u5B83\u662F IoC \u5FC5\u5907\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u5176\u4E2D BeanDefinition \u662F\u5B83\u7684\u57FA\u672C\u7ED3\u6784\u3002BeanFactory \u5185\u90E8\u7EF4\u62A4\u7740\u4E00\u4E2ABeanDefinition map \uFF0C\u5E76\u53EF\u6839\u636E BeanDefinition \u7684\u63CF\u8FF0\u8FDB\u884C bean \u7684\u521B\u5EFA\u548C\u7BA1\u7406\u3002</p><p><img src="'+h+'" alt="BeanFactory \u7C7B\u56FE"></p><ul><li>BeanFactory \u6709\u4E09\u4E2A\u76F4\u63A5\u5B50\u7C7B ListableBeanFactory\u3001HierarchicalBeanFactory \u548C AutowireCapableBeanFactory \u3002</li><li>DefaultListableBeanFactory \u4E3A\u6700\u7EC8\u9ED8\u8BA4\u5B9E\u73B0\uFF0C\u5B83\u5B9E\u73B0\u4E86\u6240\u6709\u63A5\u53E3\u3002</li></ul><h4 id="beandefinition-\u4F53\u7CFB" tabindex="-1">BeanDefinition \u4F53\u7CFB <a class="header-anchor" href="#beandefinition-\u4F53\u7CFB" aria-hidden="true">#</a></h4><p><code>org.springframework.beans.factory.config.BeanDefinition</code> \uFF0C\u7528\u6765\u63CF\u8FF0 Spring \u4E2D\u7684 Bean \u5BF9\u8C61\u3002</p><p><img src="'+m+'" alt="BeanDefinition \u7C7B\u56FE"></p><h4 id="beandefinitionreader-\u4F53\u7CFB" tabindex="-1">BeanDefinitionReader \u4F53\u7CFB <a class="header-anchor" href="#beandefinitionreader-\u4F53\u7CFB" aria-hidden="true">#</a></h4><p><code>org.springframework.beans.factory.support.BeanDefinitionReader</code> \u7684\u4F5C\u7528\u662F\u8BFB\u53D6 Spring \u7684\u914D\u7F6E\u6587\u4EF6\u7684\u5185\u5BB9\uFF0C\u5E76\u5C06\u5176\u8F6C\u6362\u6210 Ioc \u5BB9\u5668\u5185\u90E8\u7684\u6570\u636E\u7ED3\u6784 \uFF1ABeanDefinition \u3002<img src="'+B+'" alt="BeanDefinitionReader \u7C7B\u56FE"></p><h4 id="applicationcontext-\u4F53\u7CFB" tabindex="-1">ApplicationContext \u4F53\u7CFB <a class="header-anchor" href="#applicationcontext-\u4F53\u7CFB" aria-hidden="true">#</a></h4><p><code>org.springframework.context.ApplicationContext</code> \uFF0C\u8FD9\u4E2A\u5C31\u662F\u5927\u540D\u9F0E\u9F0E\u7684 Spring \u5BB9\u5668\uFF0C\u5B83\u53EB\u505A\u5E94\u7528\u4E0A\u4E0B\u6587\uFF0C\u4E0E\u6211\u4EEC\u5E94\u7528\u606F\u606F\u76F8\u5173\u3002\u5B83\u7EE7\u627F BeanFactory \uFF0C\u6240\u4EE5\u5B83\u662F BeanFactory \u7684\u6269\u5C55\u5347\u7EA7\u7248\uFF0C\u5982\u679CBeanFactory \u662F\u5C4C\u4E1D\u7684\u8BDD\uFF0C\u90A3\u4E48 ApplicationContext \u5219\u662F\u540D\u526F\u5176\u5B9E\u7684\u9AD8\u5BCC\u5E05\u3002\u7531\u4E8E ApplicationContext \u7684\u7ED3\u6784\u5C31\u51B3\u5B9A\u4E86\u5B83\u4E0E BeanFactory \u7684\u4E0D\u540C\uFF0C\u5176\u4E3B\u8981\u533A\u522B\u6709\uFF1A</p><ol><li>\u7EE7\u627F <code>org.springframework.context.MessageSource</code> \u63A5\u53E3\uFF0C\u63D0\u4F9B\u56FD\u9645\u5316\u7684\u6807\u51C6\u8BBF\u95EE\u7B56\u7565\u3002</li><li>\u7EE7\u627F <code>org.springframework.context.ApplicationEventPublisher</code> \u63A5\u53E3\uFF0C\u63D0\u4F9B\u5F3A\u5927\u7684<strong>\u4E8B\u4EF6</strong>\u673A\u5236\u3002</li><li>\u6269\u5C55 ResourceLoader \uFF0C\u53EF\u4EE5\u7528\u6765\u52A0\u8F7D\u591A\u79CD Resource \uFF0C\u53EF\u4EE5\u7075\u6D3B\u8BBF\u95EE\u4E0D\u540C\u7684\u8D44\u6E90\u3002</li><li>\u5BF9 Web \u5E94\u7528\u7684\u652F\u6301\u3002</li></ol><p><img src="'+v+`" alt="ApplicationContext \u7C7B\u56FE"></p><h2 id="\u5E94\u7528\u7BC7" tabindex="-1">\u5E94\u7528\u7BC7 <a class="header-anchor" href="#\u5E94\u7528\u7BC7" aria-hidden="true">#</a></h2><h4 id="\u540E\u7F6E\u5904\u7406\u5668\u7684\u5E94\u7528" tabindex="-1">\u540E\u7F6E\u5904\u7406\u5668\u7684\u5E94\u7528 <a class="header-anchor" href="#\u540E\u7F6E\u5904\u7406\u5668\u7684\u5E94\u7528" aria-hidden="true">#</a></h4><p>BeanPostProcessor \u5728\u524D\u9762\u4ECB\u7ECD bean \u52A0\u8F7D\u7684\u8FC7\u7A0B\u66FE\u591A\u6B21\u9047\u5230\uFF0C\u76F8\u4FE1\u5404\u4F4D\u4E0D\u964C\u751F\uFF0C\u8FD9\u662F Spring \u4E2D\u5F00\u653E\u5F0F\u6846\u67B6\u4E2D\u5FC5\u4E0D\u53EF\u5C11\u7684\u4E00\u4E2A\u4EAE\u70B9\u3002</p><p>BeanPostProcessor \u7684\u4F5C\u7528\u662F\uFF1A\u5982\u679C\u6211\u4EEC\u60F3\u8981\u5728 Spring \u5BB9\u5668\u5B8C\u6210 Bean \u7684\u5B9E\u4F8B\u5316\uFF0C\u914D\u7F6E\u548C\u5176\u4ED6\u7684\u521D\u59CB\u5316\u540E\u6DFB\u52A0\u4E00\u4E9B\u81EA\u5DF1\u7684\u903B\u8F91\u5904\u7406\uFF0C\u90A3\u4E48\u8BF7\u4F7F\u7528\u8BE5\u63A5\u53E3\uFF0C\u8FD9\u4E2A\u63A5\u53E3\u7ED9\u4E0E\u4E86\u7528\u6237\u5145\u8DB3\u7684\u6743\u9650\u53BB\u66F4\u6539\u6216\u8005\u6269\u5C55 Spring\uFF0C\u662F\u6211\u4EEC\u5BF9 Spring \u8FDB\u884C\u6269\u5C55\u548C\u589E\u5F3A\u5904\u7406\u4E00\u4E2A\u5FC5\u4E0D\u53EF\u5C11\u7684\u63A5\u53E3\u3002</p><p><code>#applyBeanPostProcessorsBeforeInitialization(...)</code> \u65B9\u6CD5\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#676E95;">// AbstractAutowireCapableBeanFactory.java</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">applyBeanPostProcessorsBeforeInitialization</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> existingBean</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> beanName</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        throws BeansException </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> existingBean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// \u904D\u5386 BeanPostProcessor \u6570\u7EC4</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">BeanPostProcessor</span><span style="color:#A6ACCD;"> processor </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getBeanPostProcessors</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// \u5904\u7406</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> current </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> processor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">postProcessBeforeInitialization</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> beanName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// \u8FD4\u56DE\u7A7A\uFF0C\u5219\u8FD4\u56DE result</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">current </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> result</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// \u4FEE\u6539 result</span></span>
<span class="line"><span style="color:#A6ACCD;">        result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> current</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> result</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><code>#applyBeanPostProcessorsAfterInitialization(...)</code> \u65B9\u6CD5\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#676E95;">// AbstractAutowireCapableBeanFactory.java</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">applyBeanPostProcessorsAfterInitialization</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> existingBean</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> beanName</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">        throws BeansException </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> existingBean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// \u904D\u5386 BeanPostProcessor</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">BeanPostProcessor</span><span style="color:#A6ACCD;"> processor </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getBeanPostProcessors</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// \u5904\u7406</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> current </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> processor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">postProcessAfterInitialization</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> beanName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// \u8FD4\u56DE\u7A7A\uFF0C\u5219\u8FD4\u56DE result</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">current </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> result</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// \u4FEE\u6539 result</span></span>
<span class="line"><span style="color:#A6ACCD;">        result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> current</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> result</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u5176\u5B9E\uFF0C\u903B\u8F91\u5C31\u662F\u901A\u8FC7 <code>#getBeanPostProcessors()</code> \u65B9\u6CD5\uFF0C\u83B7\u53D6\u5B9A\u4E49\u7684 BeanPostProcessor \uFF0C\u7136\u540E\u5206\u522B\u8C03\u7528\u5176 <code>#postProcessBeforeInitialization(...)</code>\u3001<code>#postProcessAfterInitialization(...)</code> \u65B9\u6CD5\uFF0C\u8FDB\u884C<strong>\u81EA\u5B9A\u4E49</strong>\u7684\u4E1A\u52A1\u5904\u7406\u3002</p><h4 id="jdk-\u52A8\u6001\u4EE3\u7406\u4E0E-cglib-\u52A8\u6001\u4EE3\u7406" tabindex="-1">JDK \u52A8\u6001\u4EE3\u7406\u4E0E CGLIB \u52A8\u6001\u4EE3\u7406 <a class="header-anchor" href="#jdk-\u52A8\u6001\u4EE3\u7406\u4E0E-cglib-\u52A8\u6001\u4EE3\u7406" aria-hidden="true">#</a></h4><h5 id="\u4E24\u8005\u6709\u4F55\u533A\u522B" tabindex="-1">\u4E24\u8005\u6709\u4F55\u533A\u522B <a class="header-anchor" href="#\u4E24\u8005\u6709\u4F55\u533A\u522B" aria-hidden="true">#</a></h5><p>1\u3001<strong>Jdk\u52A8\u6001\u4EE3\u7406</strong>\uFF1A\u5229\u7528\u62E6\u622A\u5668\uFF08\u5FC5\u987B\u5B9E\u73B0InvocationHandler\u63A5\u53E3\uFF09\u52A0\u4E0A<strong>\u53CD\u5C04\u673A\u5236</strong>\u751F\u6210\u4E00\u4E2A\u4EE3\u7406\u63A5\u53E3\u7684\u533F\u540D\u7C7B\uFF0C\u5728\u8C03\u7528\u5177\u4F53\u65B9\u6CD5\u524D\u8C03\u7528InvokeHandler\u6765\u5904\u7406</p><p>2\u3001 <strong>Cglib\u52A8\u6001\u4EE3\u7406</strong>\uFF1A\u5229\u7528ASM\u6846\u67B6\uFF0C\u5BF9\u4EE3\u7406\u5BF9\u8C61\u7C7B\u751F\u6210\u7684class\u6587\u4EF6\u52A0\u8F7D\u8FDB\u6765\uFF0C\u901A\u8FC7<strong>\u4FEE\u6539\u5176\u5B57\u8282\u7801\u751F\u6210\u5B50\u7C7B\u6765\u8FDB\u884C\u4EE3\u7406</strong></p><p><strong>\u6240\u4EE5\uFF1A</strong></p><ul><li><strong>\u5982\u679C\u60F3\u8981\u5B9E\u73B0JDK\u52A8\u6001\u4EE3\u7406\u90A3\u4E48\u4EE3\u7406\u7C7B\u5FC5\u987B\u5B9E\u73B0\u63A5\u53E3\uFF0C\u5426\u5219\u4E0D\u80FD\u4F7F\u7528;</strong></li><li><strong>\u5982\u679C\u60F3\u8981\u4F7F\u7528CGlib\u52A8\u6001\u4EE3\u7406\uFF0C\u90A3\u4E48\u4EE3\u7406\u7C7B\u4E0D\u80FD\u4F7F\u7528final\u4FEE\u9970\u7C7B\u548C\u65B9\u6CD5\uFF1B</strong></li></ul><p>\u8FD8\u6709\uFF1A \u5728jdk6\u3001jdk7\u3001jdk8\u9010\u6B65\u5BF9JDK\u52A8\u6001\u4EE3\u7406\u4F18\u5316\u4E4B\u540E\uFF0C\u5728\u8C03\u7528\u6B21\u6570\u8F83\u5C11\u7684\u60C5\u51B5\u4E0B\uFF0CJDK\u4EE3\u7406\u6548\u7387\u9AD8\u4E8ECGLIB\u4EE3\u7406\u6548\u7387\uFF0C\u53EA\u6709\u5F53\u8FDB\u884C\u5927\u91CF\u8C03\u7528\u7684\u65F6\u5019\uFF0Cjdk6\u548Cjdk7\u6BD4CGLIB\u4EE3\u7406\u6548\u7387\u4F4E\u4E00\u70B9\uFF0C\u4F46\u662F\u5230jdk8\u7684\u65F6\u5019\uFF0Cjdk\u4EE3\u7406\u6548\u7387\u9AD8\u4E8ECGLIB\u4EE3\u7406\u3002</p><h5 id="jdk\u52A8\u6001\u4EE3\u7406" tabindex="-1">JDK\u52A8\u6001\u4EE3\u7406 <a class="header-anchor" href="#jdk\u52A8\u6001\u4EE3\u7406" aria-hidden="true">#</a></h5><p><img src="`+S+`" alt="img"></p><p><strong>UserService\u63A5\u53E3</strong></p><div class="language-text"><button class="copy"></button><span class="lang">text</span><pre><code><span class="line"><span style="color:#A6ACCD;">public interface UserService {</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    void addUser();</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    void updateUser(String str);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>UserServiceImpl\u5B9E\u73B0\u7C7B</strong></p><div class="language-text"><button class="copy"></button><span class="lang">text</span><pre><code><span class="line"><span style="color:#A6ACCD;">public class UserServiceImpl implements UserService {</span></span>
<span class="line"><span style="color:#A6ACCD;">    @Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    public void addUser() {</span></span>
<span class="line"><span style="color:#A6ACCD;">        System.out.println(&quot;\u6DFB\u52A0\u7528\u6237&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    @Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    public void updateUser(String str) {</span></span>
<span class="line"><span style="color:#A6ACCD;">        System.out.println(&quot;\u66F4\u65B0\u7528\u6237\u4FE1\u606F&quot; + str);</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>UserProxy\u4EE3\u7406\u7C7B\uFF0C\u5B9E\u73B0InvocationHandler\u63A5\u53E3\u91CD\u5199invoke\u65B9\u6CD5</strong></p><div class="language-text"><button class="copy"></button><span class="lang">text</span><pre><code><span class="line"><span style="color:#A6ACCD;">public class UserProxy implements InvocationHandler {</span></span>
<span class="line"><span style="color:#A6ACCD;">    private Object target;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    public UserProxy(Object target) {</span></span>
<span class="line"><span style="color:#A6ACCD;">        this.target = target;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    @Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        Object res = method.invoke(target, args);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        System.out.println(&quot;\u8BB0\u5F55\u65E5\u5FD7&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        return res;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>test\u6D4B\u8BD5\u7C7B</strong></p><div class="language-text"><button class="copy"></button><span class="lang">text</span><pre><code><span class="line"><span style="color:#A6ACCD;">public class test {</span></span>
<span class="line"><span style="color:#A6ACCD;">    public static void main(String[] args) {</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        UserServiceImpl impl = new UserServiceImpl();</span></span>
<span class="line"><span style="color:#A6ACCD;">        UserProxy userProxy = new UserProxy(impl);</span></span>
<span class="line"><span style="color:#A6ACCD;">        UserService userService = (UserService) Proxy.newProxyInstance(impl.getClass().getClassLoader(),impl.getClass().getInterfaces(),userProxy);</span></span>
<span class="line"><span style="color:#A6ACCD;">        userService.addUser();</span></span>
<span class="line"><span style="color:#A6ACCD;">        userService.updateUser(&quot;\uFF1A\u6211\u662F\u76AE\u76AE\u867E&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h5 id="cglib\u52A8\u6001\u4EE3\u7406" tabindex="-1">CGlib\u52A8\u6001\u4EE3\u7406 <a class="header-anchor" href="#cglib\u52A8\u6001\u4EE3\u7406" aria-hidden="true">#</a></h5><p><strong>CGlib\u4E0D\u50CF\u662FJDK\u52A8\u6001\u4EE3\u7406\uFF0CCGlib\u9700\u8981\u5BFC\u5165Jar\u5305\uFF0C\u90A3\u4E48\u6211\u7528SpringBoot\u76F4\u63A5\u5BFC\u5165\u4F9D\u8D56</strong></p><div class="language-text"><button class="copy"></button><span class="lang">text</span><pre><code><span class="line"><span style="color:#A6ACCD;">&lt;dependency&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;groupId&gt;cglib&lt;/groupId&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;artifactId&gt;cglib&lt;/artifactId&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;version&gt;3.3.0&lt;/version&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;/dependency&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>UserServiceImpl\u88AB\u4EE3\u7406\u7C7B</strong></p><div class="language-text"><button class="copy"></button><span class="lang">text</span><pre><code><span class="line"><span style="color:#A6ACCD;">public class UserServiceImpl {</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    public void addUser() {</span></span>
<span class="line"><span style="color:#A6ACCD;">        System.out.println(&quot;\u6DFB\u52A0\u4E86\u4E00\u4E2A\u7528\u6237&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    public void deleteUser() {</span></span>
<span class="line"><span style="color:#A6ACCD;">        System.out.println(&quot;\u5220\u9664\u4E86\u4E00\u4E2A\u7528\u6237&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>UserServiceCGlib\u4EE3\u7406</strong></p><div class="language-text"><button class="copy"></button><span class="lang">text</span><pre><code><span class="line"><span style="color:#A6ACCD;">public class UserServiceCGlib implements MethodInterceptor {</span></span>
<span class="line"><span style="color:#A6ACCD;">    private Object target;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    public UserServiceCGlib() {</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    public UserServiceCGlib(Object target) {</span></span>
<span class="line"><span style="color:#A6ACCD;">        this.target = target;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    //\u8FD4\u56DE\u4E00\u4E2A\u4EE3\u7406\u5BF9\u8C61:    \u662F target\u5BF9\u8C61\u7684\u4EE3\u7406\u5BF9\u8C61</span></span>
<span class="line"><span style="color:#A6ACCD;">    public Object getProxyInstance() {</span></span>
<span class="line"><span style="color:#A6ACCD;">        //1. \u521B\u5EFA\u4E00\u4E2A\u5DE5\u5177\u7C7B</span></span>
<span class="line"><span style="color:#A6ACCD;">        Enhancer enhancer = new Enhancer();</span></span>
<span class="line"><span style="color:#A6ACCD;">        //2. \u8BBE\u7F6E\u7236\u7C7B</span></span>
<span class="line"><span style="color:#A6ACCD;">        enhancer.setSuperclass(target.getClass());</span></span>
<span class="line"><span style="color:#A6ACCD;">        //3. \u8BBE\u7F6E\u56DE\u8C03\u51FD\u6570</span></span>
<span class="line"><span style="color:#A6ACCD;">        enhancer.setCallback(this);</span></span>
<span class="line"><span style="color:#A6ACCD;">        //4. \u521B\u5EFA\u5B50\u7C7B\u5BF9\u8C61\uFF0C\u5373\u4EE3\u7406\u5BF9\u8C61</span></span>
<span class="line"><span style="color:#A6ACCD;">        return enhancer.create();</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    @Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    public Object intercept(Object o, Method method, Object[] objects, MethodProxy methodProxy) throws Throwable {</span></span>
<span class="line"><span style="color:#A6ACCD;">        System.out.println(&quot;\u589E\u5F3A\u5F00\u59CB~~~&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">        Object result = methodProxy.invokeSuper(o, objects);</span></span>
<span class="line"><span style="color:#A6ACCD;">        System.out.println(&quot;\u589E\u5F3A\u7ED3\u675F~~~&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">        return result;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>test\u6D4B\u8BD5\u7C7B</strong></p><div class="language-text"><button class="copy"></button><span class="lang">text</span><pre><code><span class="line"><span style="color:#A6ACCD;">public class test {</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    public static void main(String[] args) {</span></span>
<span class="line"><span style="color:#A6ACCD;">        UserServiceCGlib serviceCGlib = new UserServiceCGlib(new UserServiceImpl());</span></span>
<span class="line"><span style="color:#A6ACCD;">        UserServiceImpl userService = (UserServiceImpl)serviceCGlib.getProxyInstance();</span></span>
<span class="line"><span style="color:#A6ACCD;">        userService.addUser();</span></span>
<span class="line"><span style="color:#A6ACCD;">        System.out.println();</span></span>
<span class="line"><span style="color:#A6ACCD;">        userService.deleteUser();</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h4 id="aop-\u5207\u9762\u7F16\u7A0B" tabindex="-1">AOP \u5207\u9762\u7F16\u7A0B <a class="header-anchor" href="#aop-\u5207\u9762\u7F16\u7A0B" aria-hidden="true">#</a></h4><blockquote><p>\u5C06\u516C\u5171\u884C\u4E3A\uFF08\u5982\u8BB0\u5F55\u65E5\u5FD7\uFF0C\u6743\u9650\u6821\u9A8C\u7B49\uFF09\u5C01\u88C5\u5230\u53EF\u91CD\u7528\u7684\u6A21\u5757\u4E2D\uFF0C\u800C\u4F7F\u539F\u672C\u7684\u6A21\u5757\u5185\u53EA\u9700\u5173\u6CE8\u81EA\u8EAB\u7684\u4E2A\u6027\u5316\u884C\u4E3A</p></blockquote><p><strong>\u4EE5\u4E0B\u662FSpring AOP\u521B\u5EFA\u4EE3\u7406\u7684\u65B9\u6CD5</strong></p><div class="language-text"><button class="copy"></button><span class="lang">text</span><pre><code><span class="line"><span style="color:#A6ACCD;">@Override</span></span>
<span class="line"><span style="color:#A6ACCD;">public AopProxy createAopProxy(AdvisedSupport config) throws AopConfigException {</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">   if (config.isOptimize() || config.isProxyTargetClass() || hasNoUserSuppliedProxyInterfaces(config)) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      Class&lt;?&gt; targetClass = config.getTargetClass();</span></span>
<span class="line"><span style="color:#A6ACCD;">      if (targetClass == null) {</span></span>
<span class="line"><span style="color:#A6ACCD;">         throw new AopConfigException(&quot;TargetSource cannot determine target class: &quot; +</span></span>
<span class="line"><span style="color:#A6ACCD;">               &quot;Either an interface or a target is required for proxy creation.&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">      }</span></span>
<span class="line"><span style="color:#A6ACCD;">      //\u5982\u679C</span></span>
<span class="line"><span style="color:#A6ACCD;">      if (targetClass.isInterface() || Proxy.isProxyClass(targetClass)) {</span></span>
<span class="line"><span style="color:#A6ACCD;">         return new JdkDynamicAopProxy(config);</span></span>
<span class="line"><span style="color:#A6ACCD;">      }</span></span>
<span class="line"><span style="color:#A6ACCD;">      return new ObjenesisCglibAopProxy(config);</span></span>
<span class="line"><span style="color:#A6ACCD;">   }</span></span>
<span class="line"><span style="color:#A6ACCD;">   else {</span></span>
<span class="line"><span style="color:#A6ACCD;">      return new JdkDynamicAopProxy(config);</span></span>
<span class="line"><span style="color:#A6ACCD;">   }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>1\u3001\u5982\u679C\u76EE\u6807\u5BF9\u8C61\u5B9E\u73B0\u4E86\u63A5\u53E3\uFF0C<strong>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u4F1A\u91C7\u7528JDK\u7684\u52A8\u6001\u4EE3\u7406</strong> 2\u3001\u5982\u679C\u76EE\u6807\u5BF9\u8C61\u5B9E\u73B0\u4E86\u63A5\u53E3\uFF0C\u4E5F\u53EF\u4EE5<strong>\u5F3A\u5236\u4F7F\u7528CGLIB</strong> 3\u3001\u5982\u679C\u76EE\u6807\u5BF9\u8C61<strong>\u6CA1\u6709\u5B9E\u73B0\u4E86\u63A5\u53E3\uFF0C\u5FC5\u987B\u91C7\u7528CGLIB\u5E93</strong>\uFF0Cspring\u4F1A\u81EA\u52A8\u5728JDK\u52A8\u6001\u4EE3\u7406\u548CCGLIB\u4E4B\u95F4\u8F6C\u6362</p><p>\u5982\u679C\u9700\u8981\u5F3A\u5236\u4F7F\u7528CGLIB\u6765\u5B9E\u73B0AOP\uFF0C\u9700\u8981\u914D\u7F6Espring.aop.proxy-target-class=true\u6216@EnableAspectJAutoProxy(proxyTargetClass = true</p><h4 id="springtask" tabindex="-1">SpringTask <a class="header-anchor" href="#springtask" aria-hidden="true">#</a></h4><blockquote><p><code>@Scheduled</code></p><blockquote><ul><li><code>cron</code> \u5C5E\u6027\uFF1ASpring Cron \u8868\u8FBE\u5F0F\u3002</li><li><code>fixedDelay</code> \u5C5E\u6027\uFF1A\u56FA\u5B9A\u6267\u884C\u95F4\u9694\uFF0C\u5355\u4F4D\uFF1A\u6BEB\u79D2\u3002\u6CE8\u610F\uFF0C\u4EE5\u8C03\u7528<strong>\u5B8C\u6210\u65F6\u523B</strong>\u4E3A\u5F00\u59CB\u8BA1\u65F6\u65F6\u95F4\u3002</li><li><code>fixedRate</code> \u5C5E\u6027\uFF1A\u56FA\u5B9A\u6267\u884C\u95F4\u9694\uFF0C\u5355\u4F4D\uFF1A\u6BEB\u79D2\u3002\u6CE8\u610F\uFF0C\u4EE5\u8C03\u7528<strong>\u5F00\u59CB\u65F6\u523B</strong>\u4E3A\u5F00\u59CB\u8BA1\u65F6\u65F6\u95F4\u3002</li></ul></blockquote><blockquote><ul><li><code>initialDelay</code> \u5C5E\u6027\uFF1A\u521D\u59CB\u5316\u7684\u5B9A\u65F6\u4EFB\u52A1\u6267\u884C\u5EF6\u8FDF\uFF0C\u5355\u4F4D\uFF1A\u6BEB\u79D2\u3002</li><li><code>zone</code> \u5C5E\u6027\uFF1A\u89E3\u6790 Spring Cron \u8868\u8FBE\u5F0F\u7684\u6240\u5C5E\u7684\u65F6\u533A\u3002\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u4F7F\u7528\u670D\u52A1\u5668\u7684\u672C\u5730\u65F6\u533A\u3002</li><li><code>initialDelayString</code> \u5C5E\u6027\uFF1A<code>initialDelay</code> \u7684\u5B57\u7B26\u4E32\u5F62\u5F0F\u3002</li><li><code>fixedDelayString</code> \u5C5E\u6027\uFF1A<code>fixedDelay</code> \u7684\u5B57\u7B26\u4E32\u5F62\u5F0F\u3002</li><li><code>fixedRateString</code> \u5C5E\u6027\uFF1A<code>fixedRate</code> \u7684\u5B57\u7B26\u4E32\u5F62\u5F0F\u3002</li></ul></blockquote><p><code>application.yml</code></p><div class="language-yaml"><button class="copy"></button><span class="lang">yaml</span><pre><code><span class="line"><span style="color:#F07178;">spring</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">task</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#676E95;"># Spring Task \u8C03\u5EA6\u4EFB\u52A1\u7684\u914D\u7F6E\uFF0C\u5BF9\u5E94 TaskSchedulingProperties \u914D\u7F6E\u7C7B</span></span>
<span class="line"><span style="color:#F07178;">scheduling</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">thread-name-prefix</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pikaqiu-demo-</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;"># \u7EBF\u7A0B\u6C60\u7684\u7EBF\u7A0B\u540D\u7684\u524D\u7F00\u3002\u9ED8\u8BA4\u4E3A scheduling- \uFF0C\u5EFA\u8BAE\u6839\u636E\u81EA\u5DF1\u5E94\u7528\u6765\u8BBE\u7F6E</span></span>
<span class="line"><span style="color:#F07178;">pool</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;"># \u7EBF\u7A0B\u6C60\u5927\u5C0F\u3002\u9ED8\u8BA4\u4E3A 1 \uFF0C\u6839\u636E\u81EA\u5DF1\u5E94\u7528\u6765\u8BBE\u7F6E</span></span>
<span class="line"><span style="color:#F07178;">shutdown</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">await-termination</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;"># \u5E94\u7528\u5173\u95ED\u65F6\uFF0C\u662F\u5426\u7B49\u5F85\u5B9A\u65F6\u4EFB\u52A1\u6267\u884C\u5B8C\u6210\u3002\u9ED8\u8BA4\u4E3A false \uFF0C\u5EFA\u8BAE\u8BBE\u7F6E\u4E3A true</span></span>
<span class="line"><span style="color:#F07178;">await-termination-period</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;"># \u7B49\u5F85\u4EFB\u52A1\u5B8C\u6210\u7684\u6700\u5927\u65F6\u957F\uFF0C\u5355\u4F4D\u4E3A\u79D2\u3002\u9ED8\u8BA4\u4E3A 0 \uFF0C\u6839\u636E\u81EA\u5DF1\u5E94\u7528\u6765\u8BBE\u7F6E</span></span>
<span class="line"></span></code></pre></div></blockquote><h4 id="stopwatch" tabindex="-1">StopWatch <a class="header-anchor" href="#stopwatch" aria-hidden="true">#</a></h4><blockquote><p>\u4F18\u7F3A\u70B9\uFF1A</p><ul><li><p>\u4F18\u70B9\uFF1A spring\u81EA\u5E26\u5DE5\u5177\u7C7B\uFF0C\u53EF\u76F4\u63A5\u4F7F\u7528 \u4EE3\u7801\u5B9E\u73B0\u7B80\u5355\uFF0C\u4F7F\u7528\u66F4\u7B80\u5355 \u7EDF\u4E00\u5F52\u7EB3\uFF0C\u5C55\u793A\u6BCF\u9879\u4EFB\u52A1\u8017\u65F6\u4E0E\u5360\u7528\u603B\u65F6\u95F4\u7684\u767E\u5206\u6BD4\uFF0C\u5C55\u793A\u7ED3\u679C\u76F4\u89C2 \u6027\u80FD\u6D88\u8017\u76F8\u5BF9\u8F83\u5C0F\uFF0C\u5E76\u4E14\u6700\u5927\u7A0B\u5EA6\u7684\u4FDD\u8BC1\u4E86start\u4E0Estop\u4E4B\u95F4\u7684\u65F6\u95F4\u8BB0\u5F55\u7684\u51C6\u786E\u6027 \u53EF\u5728start\u65F6\u76F4\u63A5\u6307\u5B9A\u4EFB\u52A1\u540D\u5B57\uFF0C\u4ECE\u800C\u66F4\u52A0\u76F4\u89C2\u7684\u663E\u793A\u8BB0\u5F55\u7ED3\u679C</p></li><li><p>\u7F3A\u70B9\uFF1A \u4E00\u4E2AStopWatch\u5B9E\u4F8B\u4E00\u6B21\u53EA\u80FD\u5F00\u542F\u4E00\u4E2Atask\uFF0C\u4E0D\u80FD\u540C\u65F6start\u591A\u4E2Atask\uFF0C\u5E76\u4E14\u5728\u8BE5task\u672Astop\u4E4B\u524D\u4E0D\u80FDstart\u4E00\u4E2A\u65B0\u7684task\uFF0C\u5FC5\u987B\u5728\u8BE5task stop\u4E4B\u540E\u624D\u80FD\u5F00\u542F\u65B0\u7684task\uFF0C\u82E5\u8981\u4E00\u6B21\u5F00\u542F\u591A\u4E2A\uFF0C\u9700\u8981new\u4E0D\u540C\u7684StopWatch\u5B9E\u4F8B\u4EE3\u7801\u4FB5\u5165\u5F0F\u4F7F\u7528\uFF0C\u9700\u8981\u6539\u52A8\u591A\u5904\u4EE3\u7801</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"></span></code></pre></div></li></ul><p>public static void test1() throws InterruptedException { StopWatch sw = new StopWatch(&quot;test&quot;); try{ sw.start(&quot;task1&quot;); // do something Thread.sleep(100); sw.stop(); sw.start(&quot;task2&quot;); // do something Thread.sleep(200); }catch(InterruptedException e){ throws new InterruptedException(); }finally{ sw.stop(); System.out.println(sw.prettyPrint()); System.out.println(sw.shortSummary()); System.out.println(sw.getTotalTimeMillis()) } }</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div></blockquote><h4 id="async" tabindex="-1">Async <a class="header-anchor" href="#async" aria-hidden="true">#</a></h4><blockquote><p><code>AsyncConfig.java </code></p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">aop</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">interceptor</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">AsyncUncaughtExceptionHandler</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">context</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Bean</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">context</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Configuration</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">scheduling</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">AsyncConfigurerSupport</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">scheduling</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">EnableAsync</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">scheduling</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">concurrent</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">ThreadPoolTaskExecutor</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">util</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">concurrent</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Executor</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">util</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">concurrent</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">ThreadPoolExecutor</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">EnableAsync</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AsyncConfig</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AsyncConfigurerSupport</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">AsyncUncaughtExceptionHandler</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getAsyncUncaughtExceptionHandler</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">CusAsyncExceptionHandler</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">executor</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Executor</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">executor</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">            System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">executor \u7EBF\u7A0B\u542F\u52A8---</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">ThreadPoolTaskExecutor</span><span style="color:#A6ACCD;"> scheduler </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ThreadPoolTaskExecutor</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">            scheduler</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setCorePoolSize</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;">    </span><span style="color:#676E95;">//\u57FA\u672C\u7EBF\u7A0B\u6570\u91CF</span></span>
<span class="line"><span style="color:#A6ACCD;">            scheduler</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setQueueCapacity</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">500</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;">//\u961F\u5217\u6700\u5927\u957F\u5EA6</span></span>
<span class="line"><span style="color:#A6ACCD;">            scheduler</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setMaxPoolSize</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;">    </span><span style="color:#676E95;">//\u6700\u5927\u7EBF\u7A0B\u6570\u91CF</span></span>
<span class="line"><span style="color:#A6ACCD;">            scheduler</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setRejectedExecutionHandler</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> ThreadPoolExecutor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CallerRunsPolicy</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">            scheduler</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setThreadNamePrefix</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Myself-Executor-</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            scheduler</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setKeepAliveSeconds</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">//\u5141\u8BB8\u7A7A\u95F2\u65F6\u95F4</span></span>
<span class="line"><span style="color:#A6ACCD;">            scheduler</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">initialize</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> scheduler</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><code>AsyncMethod.java</code></p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">scheduling</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Async</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">scheduling</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">AsyncResult</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">stereotype</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Component</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">util</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Date</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">util</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">concurrent</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Future</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AsyncMethod</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Async</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">executor</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">asyncMethod</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">for</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">++){</span></span>
<span class="line"><span style="color:#A6ACCD;">                System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">i: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">+</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> threadName: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">Thread</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">currentThread</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;">//\u629B\u51FA\u5F02\u5E38</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Async</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">executor</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Future</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">Integer</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">asyncSquare</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">calling asyncSquare,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> Thread</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">currentThread</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">getName</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">try</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                Thread</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">catch</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">InterruptedException</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">                </span><span style="color:#676E95;">// TODO Auto-generated catch block</span></span>
<span class="line"><span style="color:#A6ACCD;">                e</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">printStackTrace</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">asyncSquare Finished,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> Thread</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">currentThread</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">getName</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">AsyncResult</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">Integer</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><code>AsyncController.java</code></p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">jdk</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">nashorn</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">internal</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">runtime</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">logging</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Logger</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">apache</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">commons</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">logging</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Log</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">apache</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">commons</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">logging</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">LogFactory</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">beans</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">factory</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Autowired</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">web</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">bind</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">web</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">bind</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">RestController</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">util</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">concurrent</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">ExecutionException</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">util</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">concurrent</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">Future</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RestController</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Logger</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AsyncController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">final</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Log</span><span style="color:#A6ACCD;"> log </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> LogFactory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getLog</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">AsyncController</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">AsyncMethod</span><span style="color:#A6ACCD;"> asyncMethod</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">value</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/async/method</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">asyncTestMethod</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">            asyncMethod</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">asyncMethod</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">            System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\u68C0\u6D4B\u5F02\u6B65\u6267\u884C</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">value</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/async/add</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">asyncTestMethodAdd</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ExecutionException</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">InterruptedException</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">Future</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">Integer</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">  asyncMethod</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">asyncSquare</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">9</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(true){</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isCancelled</span><span style="color:#89DDFF;">()){</span></span>
<span class="line"><span style="color:#A6ACCD;">                    log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">async task is Cancelled</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isDone</span><span style="color:#89DDFF;">()){</span></span>
<span class="line"><span style="color:#A6ACCD;">                    log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">async task is Done</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">                    log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">result is </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> result</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#89DDFF;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\u68C0\u6D4B\u5F02\u6B65\u6267\u884C</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></blockquote><h4 id="springretry" tabindex="-1">SpringRetry <a class="header-anchor" href="#springretry" aria-hidden="true">#</a></h4><blockquote><p>spring\u7CFB\u5217\u7684<code>spring-retry</code>\u662F\u4E00\u4E2A\u5B9E\u7528\u7A0B\u5E8F\u6A21\u5757\uFF0C\u53EF\u4EE5\u5E2E\u52A9\u6211\u4EEC\u4EE5\u6807\u51C6\u65B9\u5F0F\u5904\u7406\u4EFB\u4F55\u7279\u5B9A\u64CD\u4F5C\u7684\u91CD\u8BD5\u3002</p><p>1.\u4F9D\u8D56</p><div class="language-xml"><button class="copy"></button><span class="lang">xml</span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">org.springframework.retry</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">spring-retry</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>2.\u914D\u7F6E\u7C7B\u52A0 <code>@Retryable</code>\u6CE8\u89E3 \u542F\u7528\u91CD\u8BD5</p><p>3.\u5728\u65B9\u6CD5\u4E0A\u6DFB\u52A0<code>@Retryable</code></p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Service</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TestRetryServiceImpl</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TestRetryService</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Retryable</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">value</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Exception</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;">maxAttempts</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;">backoff</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Backoff</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">delay</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2000</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;">multiplier</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.5</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">code</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Exception</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">       System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test\u88AB\u8C03\u7528,\u65F6\u95F4\uFF1A</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;">LocalTime</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">now</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">code</span><span style="color:#89DDFF;">==</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">             </span><span style="color:#89DDFF;">throw</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Exception</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\u60C5\u51B5\u4E0D\u5BF9\u5934\uFF01</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">       System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test\u88AB\u8C03\u7528,\u60C5\u51B5\u5BF9\u5934\u4E86\uFF01</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u53C2\u6570\u542B\u4E49\uFF1A</p><ul><li><code>value</code>\uFF1A\u629B\u51FA\u6307\u5B9A\u5F02\u5E38\u624D\u4F1A\u91CD\u8BD5</li><li><code>include</code>\uFF1A\u548Cvalue\u4E00\u6837\uFF0C\u9ED8\u8BA4\u4E3A\u7A7A\uFF0C\u5F53exclude\u4E5F\u4E3A\u7A7A\u65F6\uFF0C\u9ED8\u8BA4\u6240\u6709\u5F02\u5E38</li><li><code>exclude</code>\uFF1A\u6307\u5B9A\u4E0D\u5904\u7406\u7684\u5F02\u5E38</li><li><code>maxAttempts</code>\uFF1A\u6700\u5927\u91CD\u8BD5\u6B21\u6570\uFF0C\u9ED8\u8BA43\u6B21</li><li><code>backoff</code>\uFF1A\u91CD\u8BD5\u7B49\u5F85\u7B56\u7565\uFF0C\u9ED8\u8BA4\u4F7F\u7528<code>@Backoff</code>\uFF0C<code>@Backoff</code>\u7684value\u9ED8\u8BA4\u4E3A1000L\uFF0C\u6211\u4EEC\u8BBE\u7F6E\u4E3A2000L\uFF1B<code>multiplier</code>\uFF08\u6307\u5B9A\u5EF6\u8FDF\u500D\u6570\uFF09\u9ED8\u8BA4\u4E3A0\uFF0C\u8868\u793A\u56FA\u5B9A\u6682\u505C1\u79D2\u540E\u8FDB\u884C\u91CD\u8BD5\uFF0C\u5982\u679C\u628A<code>multiplier</code>\u8BBE\u7F6E\u4E3A1.5\uFF0C\u5219\u7B2C\u4E00\u6B21\u91CD\u8BD5\u4E3A2\u79D2\uFF0C\u7B2C\u4E8C\u6B21\u4E3A3\u79D2\uFF0C\u7B2C\u4E09\u6B21\u4E3A4.5\u79D2\u3002</li></ul><p>\u5F53\u91CD\u8BD5\u8017\u5C3D\u65F6\uFF0C<code>RetryOperations</code>\u53EF\u4EE5\u5C06\u63A7\u5236\u4F20\u9012\u7ED9\u53E6\u4E00\u4E2A\u56DE\u8C03\uFF0C\u5373<code>RecoveryCallback</code>\u3002<code>Spring-Retry</code>\u8FD8\u63D0\u4F9B\u4E86<code>@Recover</code>\u6CE8\u89E3\uFF0C\u7528\u4E8E@Retryable\u91CD\u8BD5\u5931\u8D25\u540E\u5904\u7406\u65B9\u6CD5\u3002\u5982\u679C\u4E0D\u9700\u8981\u56DE\u8C03\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u76F4\u63A5\u4E0D\u5199\u56DE\u8C03\u65B9\u6CD5\uFF0C\u90A3\u4E48\u5B9E\u73B0\u7684\u6548\u679C\u662F\uFF0C\u91CD\u8BD5\u6B21\u6570\u5B8C\u4E86\u540E\uFF0C\u5982\u679C\u8FD8\u662F\u6CA1\u6210\u529F\u6CA1\u7B26\u5408\u4E1A\u52A1\u5224\u65AD\uFF0C\u5C31\u629B\u51FA\u5F02\u5E38\u3002</p><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Recover</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">recover</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> e</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> code</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">  System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\u56DE\u8C03\u65B9\u6CD5\u6267\u884C\uFF01\uFF01\uFF01\uFF01</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">//\u8BB0\u65E5\u5FD7\u5230\u6570\u636E\u5E93 \u6216\u8005\u8C03\u7528\u5176\u4F59\u7684\u65B9\u6CD5</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">400</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u53EF\u4EE5\u770B\u5230\u4F20\u53C2\u91CC\u9762\u5199\u7684\u662F <code>Exception e</code>\uFF0C\u8FD9\u4E2A\u662F\u4F5C\u4E3A\u56DE\u8C03\u7684\u63A5\u5934\u6697\u53F7\uFF08\u91CD\u8BD5\u6B21\u6570\u7528\u5B8C\u4E86\uFF0C\u8FD8\u662F\u5931\u8D25\uFF0C\u6211\u4EEC\u629B\u51FA\u8FD9\u4E2A<code>Exception e</code>\u901A\u77E5\u89E6\u53D1\u8FD9\u4E2A\u56DE\u8C03\u65B9\u6CD5\uFF09\u3002\u5BF9\u4E8E<code>@Recover</code>\u6CE8\u89E3\u7684\u65B9\u6CD5\uFF0C\u9700\u8981\u7279\u522B\u6CE8\u610F\u7684\u662F\uFF1A</p><ul><li>\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u5FC5\u987B\u4E0E<code>@Retryable</code>\u65B9\u6CD5\u4E00\u81F4</li><li>\u65B9\u6CD5\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u5FC5\u987B\u662FThrowable\u7C7B\u578B\u7684\uFF0C\u5EFA\u8BAE\u662F\u4E0E<code>@Retryable</code>\u914D\u7F6E\u7684\u5F02\u5E38\u4E00\u81F4\uFF0C\u5176\u4ED6\u7684\u53C2\u6570\uFF0C\u9700\u8981\u54EA\u4E2A\u53C2\u6570\uFF0C\u5199\u8FDB\u53BB\u5C31\u53EF\u4EE5\u4E86\uFF08<code>@Recover</code>\u65B9\u6CD5\u4E2D\u6709\u7684\uFF09</li><li>\u8BE5\u56DE\u8C03\u65B9\u6CD5\u4E0E\u91CD\u8BD5\u65B9\u6CD5\u5199\u5728\u540C\u4E00\u4E2A\u5B9E\u73B0\u7C7B\u91CC\u9762</li></ul><p><strong>\u6CE8\u610F\u4E8B\u9879</strong></p><ul><li>\u7531\u4E8E\u662F\u57FA\u4E8EAOP\u5B9E\u73B0\uFF0C\u6240\u4EE5\u4E0D\u652F\u6301\u7C7B\u91CC\u81EA\u8C03\u7528\u65B9\u6CD5</li><li>\u5982\u679C\u91CD\u8BD5\u5931\u8D25\u9700\u8981\u7ED9<code>@Recover</code>\u6CE8\u89E3\u7684\u65B9\u6CD5\u505A\u540E\u7EED\u5904\u7406\uFF0C\u90A3\u8FD9\u4E2A\u91CD\u8BD5\u7684\u65B9\u6CD5\u4E0D\u80FD\u6709\u8FD4\u56DE\u503C\uFF0C\u53EA\u80FD\u662Fvoid</li><li>\u65B9\u6CD5\u5185\u4E0D\u80FD\u4F7F\u7528<code>try catch</code>\uFF0C\u53EA\u80FD\u5F80\u5916\u629B\u5F02\u5E38</li><li><code>@Recover</code>\u6CE8\u89E3\u6765\u5F00\u542F\u91CD\u8BD5\u5931\u8D25\u540E\u8C03\u7528\u7684\u65B9\u6CD5(\u6CE8\u610F,\u9700\u8DDF\u91CD\u5904\u7406\u65B9\u6CD5\u5728\u540C\u4E00\u4E2A\u7C7B\u4E2D)\uFF0C\u6B64\u6CE8\u89E3\u6CE8\u91CA\u7684\u65B9\u6CD5\u53C2\u6570\u4E00\u5B9A\u8981\u662F<code>@Retryable</code>\u629B\u51FA\u7684\u5F02\u5E38\uFF0C\u5426\u5219\u65E0\u6CD5\u8BC6\u522B\uFF0C\u53EF\u4EE5\u5728\u8BE5\u65B9\u6CD5\u4E2D\u8FDB\u884C\u65E5\u5FD7\u5904\u7406\u3002</li></ul></blockquote>`,92);function X(U,z,G,H,J,V){const l=c("beans");return t(),p("div",null,[R,s("ul",null,[s("li",null,[j,s("ul",null,[s("li",null,[q,s("p",null,[P,w,e(l),O,_,I,k,N]),L])])]),T]),M])}const $=o(x,[["render",X]]);export{W as __pageData,$ as default};
